2023-02-02 18:34:46,327:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\plotly_resampler\aggregation\aggregators.py:25: UserWarning: Could not import lttbc; will use a (slower) python alternative.
  warnings.warn("Could not import lttbc; will use a (slower) python alternative.")

2023-02-02 18:34:47,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:34:47,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:34:47,935:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:34:47,937:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:34:48,672:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,468:INFO:PyCaret TSForecastingExperiment
2023-02-02 18:51:26,469:INFO:Logging name: ts-default-name
2023-02-02 18:51:26,469:INFO:ML Usecase: MLUsecase.TIME_SERIES
2023-02-02 18:51:26,469:INFO:version 3.0.0.rc8
2023-02-02 18:51:26,469:INFO:Initializing setup()
2023-02-02 18:51:26,469:INFO:self.USI: 791b
2023-02-02 18:51:26,469:INFO:self._variable_keys: {'gpu_n_jobs_param', 'candidate_sps', 'fold_generator', 'n_jobs_param', 'enforce_exogenous', 'y_test_transformed', 'enforce_pi', 'pipeline', 'X_test', 'fh', 'idx', 'y_test', 'primary_sp_to_use', 'memory', 'html_param', 'gpu_param', 'data', 'approach_type', 'log_plots_param', 'y_transformed', 'X_test_transformed', 'exp_name_log', 'fold_param', 'strictly_positive', 'seed', 'X', 'exp_id', 'X_train_transformed', 'exogenous_present', 'model_engines', 'X_transformed', 'index_type', 'all_sps_to_use', 'seasonality_present', 'y_train', 'USI', 'y', 'X_train', 'significant_sps', 'y_train_transformed', '_available_plots', 'logging_param', 'significant_sps_no_harmonics', '_ml_usecase'}
2023-02-02 18:51:26,469:INFO:Checking environment
2023-02-02 18:51:26,469:INFO:python_version: 3.9.16
2023-02-02 18:51:26,469:INFO:python_build: ('main', 'Jan 11 2023 16:16:36')
2023-02-02 18:51:26,469:INFO:machine: AMD64
2023-02-02 18:51:26,469:INFO:platform: Windows-10-10.0.19045-SP0
2023-02-02 18:51:26,469:INFO:Memory: svmem(total=12825538560, available=4477861888, percent=65.1, used=8347676672, free=4477861888)
2023-02-02 18:51:26,469:INFO:Physical Core: 4
2023-02-02 18:51:26,470:INFO:Logical Core: 8
2023-02-02 18:51:26,470:INFO:Checking libraries
2023-02-02 18:51:26,470:INFO:System:
2023-02-02 18:51:26,470:INFO:    python: 3.9.16 (main, Jan 11 2023, 16:16:36) [MSC v.1916 64 bit (AMD64)]
2023-02-02 18:51:26,470:INFO:executable: C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\python.exe
2023-02-02 18:51:26,470:INFO:   machine: Windows-10-10.0.19045-SP0
2023-02-02 18:51:26,470:INFO:PyCaret required dependencies:
2023-02-02 18:51:26,470:INFO:                 pip: 22.3.1
2023-02-02 18:51:26,470:INFO:          setuptools: 65.6.3
2023-02-02 18:51:26,470:INFO:             pycaret: 3.0.0rc8
2023-02-02 18:51:26,470:INFO:             IPython: 8.9.0
2023-02-02 18:51:26,470:INFO:          ipywidgets: 8.0.4
2023-02-02 18:51:26,470:INFO:                tqdm: 4.64.1
2023-02-02 18:51:26,470:INFO:               numpy: 1.23.5
2023-02-02 18:51:26,470:INFO:              pandas: 1.5.3
2023-02-02 18:51:26,471:INFO:              jinja2: 3.1.2
2023-02-02 18:51:26,471:INFO:               scipy: 1.10.0
2023-02-02 18:51:26,471:INFO:              joblib: 1.2.0
2023-02-02 18:51:26,471:INFO:             sklearn: 1.1.3
2023-02-02 18:51:26,471:INFO:                pyod: 1.0.7
2023-02-02 18:51:26,471:INFO:            imblearn: 0.10.1
2023-02-02 18:51:26,471:INFO:   category_encoders: 2.6.0
2023-02-02 18:51:26,471:INFO:            lightgbm: 3.3.5
2023-02-02 18:51:26,471:INFO:               numba: 0.56.4
2023-02-02 18:51:26,471:INFO:            requests: 2.28.2
2023-02-02 18:51:26,471:INFO:          matplotlib: 3.7.0rc1
2023-02-02 18:51:26,471:INFO:          scikitplot: 0.3.7
2023-02-02 18:51:26,471:INFO:         yellowbrick: 1.5
2023-02-02 18:51:26,471:INFO:              plotly: 5.13.0
2023-02-02 18:51:26,471:INFO:             kaleido: 0.2.1
2023-02-02 18:51:26,472:INFO:         statsmodels: 0.13.5
2023-02-02 18:51:26,472:INFO:              sktime: 0.16.0
2023-02-02 18:51:26,472:INFO:               tbats: 1.1.2
2023-02-02 18:51:26,472:INFO:            pmdarima: 2.0.2
2023-02-02 18:51:26,472:INFO:              psutil: 5.9.4
2023-02-02 18:51:26,472:INFO:PyCaret optional dependencies:
2023-02-02 18:51:26,510:INFO:                shap: Not installed
2023-02-02 18:51:26,510:INFO:           interpret: Not installed
2023-02-02 18:51:26,510:INFO:                umap: Not installed
2023-02-02 18:51:26,510:INFO:    pandas_profiling: Not installed
2023-02-02 18:51:26,510:INFO:  explainerdashboard: Not installed
2023-02-02 18:51:26,510:INFO:             autoviz: Not installed
2023-02-02 18:51:26,511:INFO:           fairlearn: Not installed
2023-02-02 18:51:26,511:INFO:             xgboost: Not installed
2023-02-02 18:51:26,511:INFO:            catboost: Not installed
2023-02-02 18:51:26,511:INFO:              kmodes: Not installed
2023-02-02 18:51:26,511:INFO:             mlxtend: Not installed
2023-02-02 18:51:26,511:INFO:       statsforecast: Not installed
2023-02-02 18:51:26,511:INFO:        tune_sklearn: Not installed
2023-02-02 18:51:26,511:INFO:                 ray: Not installed
2023-02-02 18:51:26,511:INFO:            hyperopt: Not installed
2023-02-02 18:51:26,511:INFO:              optuna: Not installed
2023-02-02 18:51:26,511:INFO:               skopt: Not installed
2023-02-02 18:51:26,511:INFO:              mlflow: Not installed
2023-02-02 18:51:26,511:INFO:              gradio: Not installed
2023-02-02 18:51:26,511:INFO:             fastapi: Not installed
2023-02-02 18:51:26,511:INFO:             uvicorn: Not installed
2023-02-02 18:51:26,511:INFO:              m2cgen: Not installed
2023-02-02 18:51:26,512:INFO:           evidently: Not installed
2023-02-02 18:51:26,512:INFO:                nltk: Not installed
2023-02-02 18:51:26,512:INFO:            pyLDAvis: Not installed
2023-02-02 18:51:26,512:INFO:              gensim: Not installed
2023-02-02 18:51:26,512:INFO:               spacy: Not installed
2023-02-02 18:51:26,512:INFO:           wordcloud: Not installed
2023-02-02 18:51:26,512:INFO:            textblob: Not installed
2023-02-02 18:51:26,512:INFO:               fugue: Not installed
2023-02-02 18:51:26,512:INFO:           streamlit: Not installed
2023-02-02 18:51:26,512:INFO:             prophet: Not installed
2023-02-02 18:51:26,512:INFO:None
2023-02-02 18:51:26,516:INFO:Set Forecast Horizon.
2023-02-02 18:51:26,517:INFO:Set up Train-Test Splits.
2023-02-02 18:51:26,551:INFO:Finished creating preprocessing pipeline.
2023-02-02 18:51:26,554:INFO:Pipeline: ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                DummyForecaster())]))])
2023-02-02 18:51:26,554:INFO:Set up Seasonal Period.
2023-02-02 18:51:26,557:INFO:Set up whether Multiplicative components allowed.
2023-02-02 18:51:26,591:INFO:Creating final display dataframe.
2023-02-02 18:51:26,602:INFO:Setup Display Container:                                          Description                    Value
0                                         session_id                     6043
1                                             Target                   Vendas
2                                           Approach               Univariate
3                                Exogenous Variables              Not Present
4                                Original data shape                  (46, 1)
5                             Transformed data shape                  (46, 1)
6                        Transformed train set shape                  (41, 1)
7                         Transformed test set shape                   (5, 1)
8                           Rows with missing values                     0.0%
9                                     Fold Generator  ExpandingWindowSplitter
10                                       Fold Number                        5
11                       Enforce Prediction Interval                    False
12                   Splits used for hyperparameters                      all
13                        Seasonality Detection Algo                     auto
14                            Max Period to Consider                     None
15                         Seasonal Period(s) Tested                      [7]
16                    Significant Seasonal Period(s)                      [7]
17  Significant Seasonal Period(s) without Harmonics                      [7]
18                                  Remove Harmonics                    False
19                            Harmonics Order Method             harmonic_max
20                          Num Seasonalities to Use                        1
21                          All Seasonalities to Use                      [7]
22                               Primary Seasonality                        7
23                               Seasonality Present                     True
24                          Target Strictly Positive                     True
25                                Target White Noise                       No
26                                     Recommended d                        0
27                            Recommended Seasonal D                        1
28                                        Preprocess                    False
29                                          CPU Jobs                       -1
30                                           Use GPU                    False
31                                    Log Experiment                    False
32                                   Experiment Name          ts-default-name
33                                               USI                     791b
2023-02-02 18:51:26,612:INFO:Engine successfully changes for model 'auto_arima' to 'pmdarima'.
2023-02-02 18:51:26,680:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,680:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,680:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,681:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,681:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,681:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,682:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,682:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,682:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,683:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,685:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,686:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,687:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,687:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,687:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,688:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,688:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,688:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,688:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,689:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,689:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,712:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,712:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,712:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,716:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,716:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,717:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,717:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,717:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,718:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,718:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,718:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,719:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,719:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,721:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,723:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,723:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,723:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,723:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,724:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,724:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,724:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,724:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,725:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,725:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,725:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,725:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,725:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,725:INFO:Engine successfully changes for model 'lr_cds_dt' to 'sklearn'.
2023-02-02 18:51:26,729:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,729:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,729:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,729:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,730:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,730:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,730:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,731:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,731:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,733:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,734:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,735:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,735:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,735:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,736:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,736:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,736:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,736:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,736:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,736:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,737:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,737:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,737:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,740:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,740:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,741:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,741:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,741:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,741:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,742:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,742:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,742:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,744:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,746:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,746:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,746:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,747:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,747:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,747:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,747:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,747:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,747:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,748:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,748:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,748:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,748:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,748:INFO:Engine successfully changes for model 'en_cds_dt' to 'sklearn'.
2023-02-02 18:51:26,751:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,752:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,752:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,752:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,753:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,753:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,753:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,753:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,755:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,757:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,757:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,758:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,758:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,758:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,758:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,759:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,759:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,759:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,759:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,759:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,759:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,759:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,763:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,763:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,763:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,764:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,764:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,764:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,765:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,765:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,767:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,769:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,769:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,770:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,770:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,770:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,771:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,771:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,771:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,771:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,771:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,771:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,771:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,772:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,772:INFO:Engine successfully changes for model 'ridge_cds_dt' to 'sklearn'.
2023-02-02 18:51:26,775:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,775:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,776:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,776:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,776:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,777:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,777:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,778:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,780:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,780:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,781:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,781:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,781:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,782:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,782:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,782:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,782:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,782:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,783:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,783:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,783:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,786:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,787:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,787:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,787:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,788:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,788:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,788:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,790:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,792:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,792:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,792:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,793:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,793:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,793:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,794:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,794:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,794:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,794:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,794:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,795:INFO:Engine successfully changes for model 'lasso_cds_dt' to 'sklearn'.
2023-02-02 18:51:26,798:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,799:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,799:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,799:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,800:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,800:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,802:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,803:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,804:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,804:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,804:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,805:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,805:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,805:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,805:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,806:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,806:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,806:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,806:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,806:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,809:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,810:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,810:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,810:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,811:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,811:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,813:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,814:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,815:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,815:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,815:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,816:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,816:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,816:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,816:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,816:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,816:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,817:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,817:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,817:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,817:INFO:Engine successfully changes for model 'lar_cds_dt' to 'sklearn'.
2023-02-02 18:51:26,820:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,821:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,822:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,822:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,822:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,824:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,826:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,826:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,826:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,826:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,827:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,827:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,827:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,827:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,827:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,828:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,828:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,828:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,828:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,831:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,832:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,832:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,833:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,833:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,835:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,836:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,837:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,837:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,837:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,838:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,838:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,838:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,838:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,838:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,838:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,839:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,839:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,839:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,839:INFO:Engine successfully changes for model 'llar_cds_dt' to 'sklearn'.
2023-02-02 18:51:26,842:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,844:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,844:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,844:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,846:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,848:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,848:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,848:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,849:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,849:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,849:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,849:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,849:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,850:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,850:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,850:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,850:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,850:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,853:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,855:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,855:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,855:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,857:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,859:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,859:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,859:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,860:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,860:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,860:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,861:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,861:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,861:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,861:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,861:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,861:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,861:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,862:INFO:Engine successfully changes for model 'br_cds_dt' to 'sklearn'.
2023-02-02 18:51:26,865:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,866:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,866:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,868:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,870:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,870:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,870:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,871:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,871:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,871:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,872:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,872:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,872:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,872:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,872:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,872:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,872:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,876:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,877:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,877:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,879:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,881:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,881:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,881:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,882:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,882:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,882:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,883:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,883:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,883:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,883:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,883:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,883:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,883:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,884:INFO:Engine successfully changes for model 'huber_cds_dt' to 'sklearn'.
2023-02-02 18:51:26,887:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,888:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,891:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,892:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,893:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,893:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,893:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,893:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,894:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,894:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,894:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,894:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,894:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,895:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,895:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,895:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,898:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,900:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,901:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,903:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,903:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,904:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,904:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,904:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,905:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,905:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,905:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,905:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,905:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,905:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,906:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,906:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,906:INFO:Engine successfully changes for model 'par_cds_dt' to 'sklearn'.
2023-02-02 18:51:26,909:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,912:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,914:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,914:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,914:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,915:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,915:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,915:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,916:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,916:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,916:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,916:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,916:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,916:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,916:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,919:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,924:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,926:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,926:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,927:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,927:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,927:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,927:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,928:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,928:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,928:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,928:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,928:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,928:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,929:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,929:INFO:Engine successfully changes for model 'omp_cds_dt' to 'sklearn'.
2023-02-02 18:51:26,932:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,937:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,937:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,937:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,938:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,938:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,938:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,939:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,939:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,939:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,939:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,939:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,939:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,939:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,943:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,948:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,948:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,948:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,948:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,949:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,949:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,949:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,949:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,949:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,950:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,950:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,950:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,950:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,950:INFO:Engine successfully changes for model 'knn_cds_dt' to 'sklearn'.
2023-02-02 18:51:26,953:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,959:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,959:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,959:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,960:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,960:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,960:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,961:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,961:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,961:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,961:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,964:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,969:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,970:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,970:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,970:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,971:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,971:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,971:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,971:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,971:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,972:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,972:INFO:Engine successfully changes for model 'dt_cds_dt' to 'sklearn'.
2023-02-02 18:51:26,975:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,980:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,981:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,981:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,981:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,981:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,982:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,982:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,982:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,982:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,982:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,982:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,985:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:26,991:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,991:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,992:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,992:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,992:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,992:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,992:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,992:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,993:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:26,993:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,993:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:26,993:INFO:Engine successfully changes for model 'rf_cds_dt' to 'sklearn'.
2023-02-02 18:51:26,996:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:27,002:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,002:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,002:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,003:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,003:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,003:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,003:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,003:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,003:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,004:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,007:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:27,012:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,012:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,013:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,013:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,014:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,014:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,014:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,014:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,014:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,014:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,014:INFO:Engine successfully changes for model 'et_cds_dt' to 'sklearn'.
2023-02-02 18:51:27,017:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:27,024:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,024:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,024:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,024:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,025:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,025:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,025:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,025:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,025:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,028:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:27,034:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,034:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,035:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,035:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,035:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,035:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,035:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,036:INFO:Engine successfully changes for model 'gbr_cds_dt' to 'sklearn'.
2023-02-02 18:51:27,039:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:27,045:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,046:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,046:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,046:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,046:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,046:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,046:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,046:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,049:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:27,056:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,056:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,056:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,056:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,056:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,057:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,057:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,057:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,057:INFO:Engine successfully changes for model 'ada_cds_dt' to 'sklearn'.
2023-02-02 18:51:27,060:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:27,067:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,067:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,067:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,067:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,067:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,067:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,067:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,070:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:27,077:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,077:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,077:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,077:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,078:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,078:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,078:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,078:INFO:Engine successfully changes for model 'xgboost_cds_dt' to 'sklearn'.
2023-02-02 18:51:27,081:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:27,088:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,088:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,088:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,088:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,088:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,088:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,091:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:27,098:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,098:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,098:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,098:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,098:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,098:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,099:INFO:Engine successfully changes for model 'lightgbm_cds_dt' to 'sklearn'.
2023-02-02 18:51:27,101:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:27,107:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,107:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,108:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,108:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,108:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,111:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:27,117:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,117:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,118:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 18:51:27,118:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,118:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,118:INFO:Engine successfully changes for model 'catboost_cds_dt' to 'sklearn'.
2023-02-02 18:51:27,121:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:27,128:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,128:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,129:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,129:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,132:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:27,138:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,138:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,139:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,139:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,142:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:27,149:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,149:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,149:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,149:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,152:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:51:27,159:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,159:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,159:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,159:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 18:51:27,160:INFO:setup() successfully completed in 0.69s...............
2023-02-02 18:54:52,753:INFO:Initializing compare_models()
2023-02-02 18:54:52,753:INFO:compare_models(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, include=None, fold=None, round=4, cross_validation=True, sort=MASE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MASE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.time_series.forecasting.oop.TSForecastingExperiment'>}, exclude=None)
2023-02-02 18:54:52,754:INFO:Checking exceptions
2023-02-02 18:54:52,756:INFO:Preparing display monitor
2023-02-02 18:54:52,803:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:709: UserWarning: Unsupported estimator `ensemble_forecaster` for method `compare_models()`, removing from model_library
  warnings.warn(

2023-02-02 18:54:52,803:INFO:Initializing Naive Forecaster
2023-02-02 18:54:52,803:INFO:Total runtime is 0.0 minutes
2023-02-02 18:54:52,811:INFO:SubProcess create_model() called ==================================
2023-02-02 18:54:52,811:INFO:Initializing create_model()
2023-02-02 18:54:52,811:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=naive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:54:52,812:INFO:Checking exceptions
2023-02-02 18:54:52,812:INFO:Importing libraries
2023-02-02 18:54:52,812:INFO:Copying training dataset
2023-02-02 18:54:52,818:INFO:Defining folds
2023-02-02 18:54:52,818:INFO:Declaring metric variables
2023-02-02 18:54:52,822:INFO:Importing untrained model
2023-02-02 18:54:52,826:INFO:Naive Forecaster Imported successfully
2023-02-02 18:54:52,835:INFO:Starting cross validation
2023-02-02 18:54:52,837:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:54:58,768:INFO:Calculating mean and std
2023-02-02 18:54:58,771:INFO:Creating metrics dataframe
2023-02-02 18:54:58,779:INFO:Uploading results into container
2023-02-02 18:54:58,779:INFO:Uploading model into container now
2023-02-02 18:54:58,780:INFO:_master_model_container: 1
2023-02-02 18:54:58,780:INFO:_display_container: 2
2023-02-02 18:54:58,781:INFO:NaiveForecaster()
2023-02-02 18:54:58,781:INFO:create_model() successfully completed......................................
2023-02-02 18:54:58,970:INFO:SubProcess create_model() end ==================================
2023-02-02 18:54:58,970:INFO:Creating metrics dataframe
2023-02-02 18:54:58,981:INFO:Initializing Grand Means Forecaster
2023-02-02 18:54:58,981:INFO:Total runtime is 0.10297254323959351 minutes
2023-02-02 18:54:58,985:INFO:SubProcess create_model() called ==================================
2023-02-02 18:54:58,985:INFO:Initializing create_model()
2023-02-02 18:54:58,986:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=grand_means, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:54:58,986:INFO:Checking exceptions
2023-02-02 18:54:58,986:INFO:Importing libraries
2023-02-02 18:54:58,986:INFO:Copying training dataset
2023-02-02 18:54:58,991:INFO:Defining folds
2023-02-02 18:54:58,991:INFO:Declaring metric variables
2023-02-02 18:54:58,997:INFO:Importing untrained model
2023-02-02 18:54:59,002:INFO:Grand Means Forecaster Imported successfully
2023-02-02 18:54:59,012:INFO:Starting cross validation
2023-02-02 18:54:59,013:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:01,836:INFO:Calculating mean and std
2023-02-02 18:55:01,838:INFO:Creating metrics dataframe
2023-02-02 18:55:01,846:INFO:Uploading results into container
2023-02-02 18:55:01,846:INFO:Uploading model into container now
2023-02-02 18:55:01,847:INFO:_master_model_container: 2
2023-02-02 18:55:01,847:INFO:_display_container: 2
2023-02-02 18:55:01,848:INFO:NaiveForecaster(strategy='mean')
2023-02-02 18:55:01,848:INFO:create_model() successfully completed......................................
2023-02-02 18:55:02,014:INFO:SubProcess create_model() end ==================================
2023-02-02 18:55:02,014:INFO:Creating metrics dataframe
2023-02-02 18:55:02,026:INFO:Initializing Seasonal Naive Forecaster
2023-02-02 18:55:02,026:INFO:Total runtime is 0.15372580289840698 minutes
2023-02-02 18:55:02,030:INFO:SubProcess create_model() called ==================================
2023-02-02 18:55:02,030:INFO:Initializing create_model()
2023-02-02 18:55:02,031:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=snaive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:02,031:INFO:Checking exceptions
2023-02-02 18:55:02,031:INFO:Importing libraries
2023-02-02 18:55:02,031:INFO:Copying training dataset
2023-02-02 18:55:02,038:INFO:Defining folds
2023-02-02 18:55:02,038:INFO:Declaring metric variables
2023-02-02 18:55:02,043:INFO:Importing untrained model
2023-02-02 18:55:02,048:INFO:Seasonal Naive Forecaster Imported successfully
2023-02-02 18:55:02,058:INFO:Starting cross validation
2023-02-02 18:55:02,059:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:02,126:INFO:Calculating mean and std
2023-02-02 18:55:02,126:INFO:Creating metrics dataframe
2023-02-02 18:55:02,130:INFO:Uploading results into container
2023-02-02 18:55:02,130:INFO:Uploading model into container now
2023-02-02 18:55:02,131:INFO:_master_model_container: 3
2023-02-02 18:55:02,131:INFO:_display_container: 2
2023-02-02 18:55:02,131:INFO:NaiveForecaster(sp=7)
2023-02-02 18:55:02,131:INFO:create_model() successfully completed......................................
2023-02-02 18:55:02,273:INFO:SubProcess create_model() end ==================================
2023-02-02 18:55:02,274:INFO:Creating metrics dataframe
2023-02-02 18:55:02,285:INFO:Initializing Polynomial Trend Forecaster
2023-02-02 18:55:02,285:INFO:Total runtime is 0.1580398678779602 minutes
2023-02-02 18:55:02,289:INFO:SubProcess create_model() called ==================================
2023-02-02 18:55:02,289:INFO:Initializing create_model()
2023-02-02 18:55:02,289:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=polytrend, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:02,289:INFO:Checking exceptions
2023-02-02 18:55:02,289:INFO:Importing libraries
2023-02-02 18:55:02,289:INFO:Copying training dataset
2023-02-02 18:55:02,295:INFO:Defining folds
2023-02-02 18:55:02,295:INFO:Declaring metric variables
2023-02-02 18:55:02,301:INFO:Importing untrained model
2023-02-02 18:55:02,305:INFO:Polynomial Trend Forecaster Imported successfully
2023-02-02 18:55:02,316:INFO:Starting cross validation
2023-02-02 18:55:02,318:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:02,375:INFO:Calculating mean and std
2023-02-02 18:55:02,376:INFO:Creating metrics dataframe
2023-02-02 18:55:02,380:INFO:Uploading results into container
2023-02-02 18:55:02,380:INFO:Uploading model into container now
2023-02-02 18:55:02,381:INFO:_master_model_container: 4
2023-02-02 18:55:02,381:INFO:_display_container: 2
2023-02-02 18:55:02,381:INFO:PolynomialTrendForecaster()
2023-02-02 18:55:02,381:INFO:create_model() successfully completed......................................
2023-02-02 18:55:02,516:INFO:SubProcess create_model() end ==================================
2023-02-02 18:55:02,516:INFO:Creating metrics dataframe
2023-02-02 18:55:02,529:INFO:Initializing ARIMA
2023-02-02 18:55:02,529:INFO:Total runtime is 0.16209968328475952 minutes
2023-02-02 18:55:02,533:INFO:SubProcess create_model() called ==================================
2023-02-02 18:55:02,533:INFO:Initializing create_model()
2023-02-02 18:55:02,533:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:02,534:INFO:Checking exceptions
2023-02-02 18:55:02,534:INFO:Importing libraries
2023-02-02 18:55:02,534:INFO:Copying training dataset
2023-02-02 18:55:02,539:INFO:Defining folds
2023-02-02 18:55:02,540:INFO:Declaring metric variables
2023-02-02 18:55:02,544:INFO:Importing untrained model
2023-02-02 18:55:02,549:INFO:ARIMA Imported successfully
2023-02-02 18:55:02,559:INFO:Starting cross validation
2023-02-02 18:55:02,560:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:02,780:INFO:Calculating mean and std
2023-02-02 18:55:02,781:INFO:Creating metrics dataframe
2023-02-02 18:55:02,786:INFO:Uploading results into container
2023-02-02 18:55:02,786:INFO:Uploading model into container now
2023-02-02 18:55:02,786:INFO:_master_model_container: 5
2023-02-02 18:55:02,786:INFO:_display_container: 2
2023-02-02 18:55:02,787:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 18:55:02,787:INFO:create_model() successfully completed......................................
2023-02-02 18:55:02,925:INFO:SubProcess create_model() end ==================================
2023-02-02 18:55:02,926:INFO:Creating metrics dataframe
2023-02-02 18:55:02,941:INFO:Initializing Auto ARIMA
2023-02-02 18:55:02,941:INFO:Total runtime is 0.1689749797185262 minutes
2023-02-02 18:55:02,945:INFO:SubProcess create_model() called ==================================
2023-02-02 18:55:02,945:INFO:Initializing create_model()
2023-02-02 18:55:02,946:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=auto_arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:02,946:INFO:Checking exceptions
2023-02-02 18:55:02,946:INFO:Importing libraries
2023-02-02 18:55:02,946:INFO:Copying training dataset
2023-02-02 18:55:02,951:INFO:Defining folds
2023-02-02 18:55:02,951:INFO:Declaring metric variables
2023-02-02 18:55:02,958:INFO:Importing untrained model
2023-02-02 18:55:02,965:INFO:Auto ARIMA Imported successfully
2023-02-02 18:55:02,973:INFO:Starting cross validation
2023-02-02 18:55:02,975:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:03,057:ERROR:Fit failed on ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                AutoARIMA(random_state=6043,
                                                                          sp=7,
                                                                          suppress_warnings=True))]))])
2023-02-02 18:55:03,057:ERROR:zero-size array to reduction operation maximum which has no identity
2023-02-02 18:55:06,572:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pmdarima\arima\_auto_solvers.py:522: ModelFitWarning: Error fitting  ARIMA(2,0,1)(2,1,0)[7] intercept (if you do not want to see these warnings, run with error_action="ignore").
  warnings.warn(warning_str, ModelFitWarning)

2023-02-02 18:55:08,424:INFO:Calculating mean and std
2023-02-02 18:55:08,425:INFO:Creating metrics dataframe
2023-02-02 18:55:08,429:INFO:Uploading results into container
2023-02-02 18:55:08,430:INFO:Uploading model into container now
2023-02-02 18:55:08,430:INFO:_master_model_container: 6
2023-02-02 18:55:08,430:INFO:_display_container: 2
2023-02-02 18:55:08,431:INFO:AutoARIMA(random_state=6043, sp=7, suppress_warnings=True)
2023-02-02 18:55:08,431:INFO:create_model() successfully completed......................................
2023-02-02 18:55:08,567:WARNING:create_model() for AutoARIMA(random_state=6043, sp=7, suppress_warnings=True) raised an exception or returned all 0.0, trying without fit_kwargs:
2023-02-02 18:55:08,568:WARNING:Traceback (most recent call last):
  File "C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 795, in compare_models
    assert (
AssertionError

2023-02-02 18:55:08,568:INFO:Initializing create_model()
2023-02-02 18:55:08,569:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=auto_arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:08,569:INFO:Checking exceptions
2023-02-02 18:55:08,569:INFO:Importing libraries
2023-02-02 18:55:08,569:INFO:Copying training dataset
2023-02-02 18:55:08,575:INFO:Defining folds
2023-02-02 18:55:08,575:INFO:Declaring metric variables
2023-02-02 18:55:08,579:INFO:Importing untrained model
2023-02-02 18:55:08,585:INFO:Auto ARIMA Imported successfully
2023-02-02 18:55:08,594:INFO:Starting cross validation
2023-02-02 18:55:08,595:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:08,666:ERROR:Fit failed on ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                AutoARIMA(random_state=6043,
                                                                          sp=7,
                                                                          suppress_warnings=True))]))])
2023-02-02 18:55:08,666:ERROR:zero-size array to reduction operation maximum which has no identity
2023-02-02 18:55:12,193:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pmdarima\arima\_auto_solvers.py:522: ModelFitWarning: Error fitting  ARIMA(2,0,1)(2,1,0)[7] intercept (if you do not want to see these warnings, run with error_action="ignore").
  warnings.warn(warning_str, ModelFitWarning)

2023-02-02 18:55:14,041:INFO:Calculating mean and std
2023-02-02 18:55:14,042:INFO:Creating metrics dataframe
2023-02-02 18:55:14,047:INFO:Uploading results into container
2023-02-02 18:55:14,047:INFO:Uploading model into container now
2023-02-02 18:55:14,048:INFO:_master_model_container: 7
2023-02-02 18:55:14,048:INFO:_display_container: 2
2023-02-02 18:55:14,049:INFO:AutoARIMA(random_state=6043, sp=7, suppress_warnings=True)
2023-02-02 18:55:14,049:INFO:create_model() successfully completed......................................
2023-02-02 18:55:14,187:ERROR:create_model() for AutoARIMA(random_state=6043, sp=7, suppress_warnings=True) raised an exception or returned all 0.0:
2023-02-02 18:55:14,188:ERROR:Traceback (most recent call last):
  File "C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 795, in compare_models
    assert (
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 811, in compare_models
    assert (
AssertionError

2023-02-02 18:55:14,188:INFO:Initializing Exponential Smoothing
2023-02-02 18:55:14,188:INFO:Total runtime is 0.35642611583073935 minutes
2023-02-02 18:55:14,193:INFO:SubProcess create_model() called ==================================
2023-02-02 18:55:14,193:INFO:Initializing create_model()
2023-02-02 18:55:14,193:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=exp_smooth, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:14,193:INFO:Checking exceptions
2023-02-02 18:55:14,193:INFO:Importing libraries
2023-02-02 18:55:14,193:INFO:Copying training dataset
2023-02-02 18:55:14,198:INFO:Defining folds
2023-02-02 18:55:14,198:INFO:Declaring metric variables
2023-02-02 18:55:14,203:INFO:Importing untrained model
2023-02-02 18:55:14,209:INFO:Exponential Smoothing Imported successfully
2023-02-02 18:55:14,218:INFO:Starting cross validation
2023-02-02 18:55:14,219:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:14,555:INFO:Calculating mean and std
2023-02-02 18:55:14,556:INFO:Creating metrics dataframe
2023-02-02 18:55:14,560:INFO:Uploading results into container
2023-02-02 18:55:14,561:INFO:Uploading model into container now
2023-02-02 18:55:14,561:INFO:_master_model_container: 8
2023-02-02 18:55:14,561:INFO:_display_container: 2
2023-02-02 18:55:14,561:INFO:ExponentialSmoothing(seasonal='mul', sp=7, trend='add')
2023-02-02 18:55:14,561:INFO:create_model() successfully completed......................................
2023-02-02 18:55:14,700:INFO:SubProcess create_model() end ==================================
2023-02-02 18:55:14,700:INFO:Creating metrics dataframe
2023-02-02 18:55:14,714:INFO:Initializing Croston
2023-02-02 18:55:14,714:INFO:Total runtime is 0.3651816805203756 minutes
2023-02-02 18:55:14,719:INFO:SubProcess create_model() called ==================================
2023-02-02 18:55:14,719:INFO:Initializing create_model()
2023-02-02 18:55:14,719:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=croston, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:14,720:INFO:Checking exceptions
2023-02-02 18:55:14,720:INFO:Importing libraries
2023-02-02 18:55:14,720:INFO:Copying training dataset
2023-02-02 18:55:14,725:INFO:Defining folds
2023-02-02 18:55:14,725:INFO:Declaring metric variables
2023-02-02 18:55:14,730:INFO:Importing untrained model
2023-02-02 18:55:14,736:INFO:Croston Imported successfully
2023-02-02 18:55:14,747:INFO:Starting cross validation
2023-02-02 18:55:14,749:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:14,800:INFO:Calculating mean and std
2023-02-02 18:55:14,800:INFO:Creating metrics dataframe
2023-02-02 18:55:14,804:INFO:Uploading results into container
2023-02-02 18:55:14,805:INFO:Uploading model into container now
2023-02-02 18:55:14,805:INFO:_master_model_container: 9
2023-02-02 18:55:14,805:INFO:_display_container: 2
2023-02-02 18:55:14,805:INFO:Croston()
2023-02-02 18:55:14,805:INFO:create_model() successfully completed......................................
2023-02-02 18:55:14,940:INFO:SubProcess create_model() end ==================================
2023-02-02 18:55:14,940:INFO:Creating metrics dataframe
2023-02-02 18:55:14,954:INFO:Initializing ETS
2023-02-02 18:55:14,954:INFO:Total runtime is 0.3691792050997416 minutes
2023-02-02 18:55:14,958:INFO:SubProcess create_model() called ==================================
2023-02-02 18:55:14,959:INFO:Initializing create_model()
2023-02-02 18:55:14,959:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=ets, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:14,959:INFO:Checking exceptions
2023-02-02 18:55:14,959:INFO:Importing libraries
2023-02-02 18:55:14,959:INFO:Copying training dataset
2023-02-02 18:55:14,967:INFO:Defining folds
2023-02-02 18:55:14,967:INFO:Declaring metric variables
2023-02-02 18:55:14,973:INFO:Importing untrained model
2023-02-02 18:55:14,980:INFO:ETS Imported successfully
2023-02-02 18:55:14,991:INFO:Starting cross validation
2023-02-02 18:55:14,993:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:15,261:INFO:Calculating mean and std
2023-02-02 18:55:15,262:INFO:Creating metrics dataframe
2023-02-02 18:55:15,266:INFO:Uploading results into container
2023-02-02 18:55:15,266:INFO:Uploading model into container now
2023-02-02 18:55:15,267:INFO:_master_model_container: 10
2023-02-02 18:55:15,267:INFO:_display_container: 2
2023-02-02 18:55:15,267:INFO:AutoETS(seasonal='mul', sp=7, trend='add')
2023-02-02 18:55:15,267:INFO:create_model() successfully completed......................................
2023-02-02 18:55:15,402:INFO:SubProcess create_model() end ==================================
2023-02-02 18:55:15,403:INFO:Creating metrics dataframe
2023-02-02 18:55:15,418:INFO:Initializing Theta Forecaster
2023-02-02 18:55:15,419:INFO:Total runtime is 0.37694108486175537 minutes
2023-02-02 18:55:15,423:INFO:SubProcess create_model() called ==================================
2023-02-02 18:55:15,424:INFO:Initializing create_model()
2023-02-02 18:55:15,424:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=theta, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:15,424:INFO:Checking exceptions
2023-02-02 18:55:15,424:INFO:Importing libraries
2023-02-02 18:55:15,424:INFO:Copying training dataset
2023-02-02 18:55:15,430:INFO:Defining folds
2023-02-02 18:55:15,430:INFO:Declaring metric variables
2023-02-02 18:55:15,435:INFO:Importing untrained model
2023-02-02 18:55:15,440:INFO:Theta Forecaster Imported successfully
2023-02-02 18:55:15,450:INFO:Starting cross validation
2023-02-02 18:55:15,451:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:15,570:INFO:Calculating mean and std
2023-02-02 18:55:15,572:INFO:Creating metrics dataframe
2023-02-02 18:55:15,576:INFO:Uploading results into container
2023-02-02 18:55:15,576:INFO:Uploading model into container now
2023-02-02 18:55:15,576:INFO:_master_model_container: 11
2023-02-02 18:55:15,576:INFO:_display_container: 2
2023-02-02 18:55:15,577:INFO:ThetaForecaster(sp=7)
2023-02-02 18:55:15,577:INFO:create_model() successfully completed......................................
2023-02-02 18:55:15,713:INFO:SubProcess create_model() end ==================================
2023-02-02 18:55:15,714:INFO:Creating metrics dataframe
2023-02-02 18:55:15,729:INFO:Initializing Linear w/ Cond. Deseasonalize & Detrending
2023-02-02 18:55:15,729:INFO:Total runtime is 0.3821045637130737 minutes
2023-02-02 18:55:15,735:INFO:SubProcess create_model() called ==================================
2023-02-02 18:55:15,735:INFO:Initializing create_model()
2023-02-02 18:55:15,735:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=lr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:15,735:INFO:Checking exceptions
2023-02-02 18:55:15,736:INFO:Importing libraries
2023-02-02 18:55:15,736:INFO:Copying training dataset
2023-02-02 18:55:15,741:INFO:Defining folds
2023-02-02 18:55:15,742:INFO:Declaring metric variables
2023-02-02 18:55:15,746:INFO:Importing untrained model
2023-02-02 18:55:15,751:INFO:Linear w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 18:55:15,761:INFO:Starting cross validation
2023-02-02 18:55:15,762:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:16,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:16,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:16,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:16,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:16,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:16,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:16,138:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:16,139:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:16,141:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:16,142:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:16,142:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:16,142:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:16,147:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:16,147:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:16,147:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:16,147:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:16,160:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:16,160:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:16,160:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:16,161:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:16,227:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:55:16,229:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:55:16,232:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:55:16,232:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:55:16,247:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:55:16,276:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 18:55:16,552:INFO:Calculating mean and std
2023-02-02 18:55:16,553:INFO:Creating metrics dataframe
2023-02-02 18:55:16,558:INFO:Uploading results into container
2023-02-02 18:55:16,559:INFO:Uploading model into container now
2023-02-02 18:55:16,559:INFO:_master_model_container: 12
2023-02-02 18:55:16,560:INFO:_display_container: 2
2023-02-02 18:55:16,562:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LinearRegression(n_jobs=-1), sp=7,
                    window_length=7)
2023-02-02 18:55:16,562:INFO:create_model() successfully completed......................................
2023-02-02 18:55:16,701:INFO:SubProcess create_model() end ==================================
2023-02-02 18:55:16,701:INFO:Creating metrics dataframe
2023-02-02 18:55:16,715:INFO:Initializing Elastic Net w/ Cond. Deseasonalize & Detrending
2023-02-02 18:55:16,715:INFO:Total runtime is 0.3985371669133504 minutes
2023-02-02 18:55:16,719:INFO:SubProcess create_model() called ==================================
2023-02-02 18:55:16,720:INFO:Initializing create_model()
2023-02-02 18:55:16,720:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=en_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:16,720:INFO:Checking exceptions
2023-02-02 18:55:16,720:INFO:Importing libraries
2023-02-02 18:55:16,720:INFO:Copying training dataset
2023-02-02 18:55:16,725:INFO:Defining folds
2023-02-02 18:55:16,726:INFO:Declaring metric variables
2023-02-02 18:55:16,730:INFO:Importing untrained model
2023-02-02 18:55:16,739:INFO:Elastic Net w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 18:55:16,748:INFO:Starting cross validation
2023-02-02 18:55:16,749:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:17,092:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:17,092:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:17,092:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:17,092:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:17,107:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:17,108:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:17,108:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:17,108:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:17,114:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:17,114:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:17,114:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:17,115:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 18:55:17,161:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:55:17,175:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:55:17,182:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 18:55:17,212:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 18:55:17,407:INFO:Calculating mean and std
2023-02-02 18:55:17,408:INFO:Creating metrics dataframe
2023-02-02 18:55:17,413:INFO:Uploading results into container
2023-02-02 18:55:17,413:INFO:Uploading model into container now
2023-02-02 18:55:17,413:INFO:_master_model_container: 13
2023-02-02 18:55:17,413:INFO:_display_container: 2
2023-02-02 18:55:17,416:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=ElasticNet(random_state=6043), sp=7,
                    window_length=7)
2023-02-02 18:55:17,416:INFO:create_model() successfully completed......................................
2023-02-02 18:55:17,552:INFO:SubProcess create_model() end ==================================
2023-02-02 18:55:17,552:INFO:Creating metrics dataframe
2023-02-02 18:55:17,567:INFO:Initializing Ridge w/ Cond. Deseasonalize & Detrending
2023-02-02 18:55:17,567:INFO:Total runtime is 0.41272846460342405 minutes
2023-02-02 18:55:17,571:INFO:SubProcess create_model() called ==================================
2023-02-02 18:55:17,572:INFO:Initializing create_model()
2023-02-02 18:55:17,572:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=ridge_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:17,572:INFO:Checking exceptions
2023-02-02 18:55:17,572:INFO:Importing libraries
2023-02-02 18:55:17,572:INFO:Copying training dataset
2023-02-02 18:55:17,578:INFO:Defining folds
2023-02-02 18:55:17,578:INFO:Declaring metric variables
2023-02-02 18:55:17,583:INFO:Importing untrained model
2023-02-02 18:55:17,596:INFO:Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 18:55:17,609:INFO:Starting cross validation
2023-02-02 18:55:17,610:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:17,661:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 18:55:17,932:INFO:Calculating mean and std
2023-02-02 18:55:17,933:INFO:Creating metrics dataframe
2023-02-02 18:55:17,938:INFO:Uploading results into container
2023-02-02 18:55:17,938:INFO:Uploading model into container now
2023-02-02 18:55:17,938:INFO:_master_model_container: 14
2023-02-02 18:55:17,938:INFO:_display_container: 2
2023-02-02 18:55:17,941:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Ridge(random_state=6043), sp=7, window_length=7)
2023-02-02 18:55:17,941:INFO:create_model() successfully completed......................................
2023-02-02 18:55:18,080:INFO:SubProcess create_model() end ==================================
2023-02-02 18:55:18,080:INFO:Creating metrics dataframe
2023-02-02 18:55:18,096:INFO:Initializing Lasso w/ Cond. Deseasonalize & Detrending
2023-02-02 18:55:18,096:INFO:Total runtime is 0.42155319849650064 minutes
2023-02-02 18:55:18,101:INFO:SubProcess create_model() called ==================================
2023-02-02 18:55:18,101:INFO:Initializing create_model()
2023-02-02 18:55:18,101:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=lasso_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:18,101:INFO:Checking exceptions
2023-02-02 18:55:18,101:INFO:Importing libraries
2023-02-02 18:55:18,101:INFO:Copying training dataset
2023-02-02 18:55:18,106:INFO:Defining folds
2023-02-02 18:55:18,107:INFO:Declaring metric variables
2023-02-02 18:55:18,112:INFO:Importing untrained model
2023-02-02 18:55:18,118:INFO:Lasso w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 18:55:18,127:INFO:Starting cross validation
2023-02-02 18:55:18,129:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:18,192:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 18:55:18,482:INFO:Calculating mean and std
2023-02-02 18:55:18,483:INFO:Creating metrics dataframe
2023-02-02 18:55:18,487:INFO:Uploading results into container
2023-02-02 18:55:18,487:INFO:Uploading model into container now
2023-02-02 18:55:18,488:INFO:_master_model_container: 15
2023-02-02 18:55:18,488:INFO:_display_container: 2
2023-02-02 18:55:18,490:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Lasso(random_state=6043), sp=7, window_length=7)
2023-02-02 18:55:18,490:INFO:create_model() successfully completed......................................
2023-02-02 18:55:18,626:INFO:SubProcess create_model() end ==================================
2023-02-02 18:55:18,626:INFO:Creating metrics dataframe
2023-02-02 18:55:18,642:INFO:Initializing Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-02-02 18:55:18,642:INFO:Total runtime is 0.4306475798288981 minutes
2023-02-02 18:55:18,646:INFO:SubProcess create_model() called ==================================
2023-02-02 18:55:18,647:INFO:Initializing create_model()
2023-02-02 18:55:18,647:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=lar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:18,647:INFO:Checking exceptions
2023-02-02 18:55:18,647:INFO:Importing libraries
2023-02-02 18:55:18,647:INFO:Copying training dataset
2023-02-02 18:55:18,652:INFO:Defining folds
2023-02-02 18:55:18,652:INFO:Declaring metric variables
2023-02-02 18:55:18,657:INFO:Importing untrained model
2023-02-02 18:55:18,663:INFO:Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 18:55:18,673:INFO:Starting cross validation
2023-02-02 18:55:18,674:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:18,733:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 18:55:18,796:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 18:55:18,799:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 18:55:18,800:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 18:55:18,801:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 18:55:18,815:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 18:55:19,022:INFO:Calculating mean and std
2023-02-02 18:55:19,023:INFO:Creating metrics dataframe
2023-02-02 18:55:19,028:INFO:Uploading results into container
2023-02-02 18:55:19,028:INFO:Uploading model into container now
2023-02-02 18:55:19,028:INFO:_master_model_container: 16
2023-02-02 18:55:19,028:INFO:_display_container: 2
2023-02-02 18:55:19,030:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Lars(random_state=6043), sp=7, window_length=7)
2023-02-02 18:55:19,030:INFO:create_model() successfully completed......................................
2023-02-02 18:55:19,166:INFO:SubProcess create_model() end ==================================
2023-02-02 18:55:19,167:INFO:Creating metrics dataframe
2023-02-02 18:55:19,185:INFO:Initializing Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-02-02 18:55:19,185:INFO:Total runtime is 0.4397086580594381 minutes
2023-02-02 18:55:19,192:INFO:SubProcess create_model() called ==================================
2023-02-02 18:55:19,193:INFO:Initializing create_model()
2023-02-02 18:55:19,193:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=llar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:19,193:INFO:Checking exceptions
2023-02-02 18:55:19,194:INFO:Importing libraries
2023-02-02 18:55:19,194:INFO:Copying training dataset
2023-02-02 18:55:19,203:INFO:Defining folds
2023-02-02 18:55:19,203:INFO:Declaring metric variables
2023-02-02 18:55:19,211:INFO:Importing untrained model
2023-02-02 18:55:19,221:INFO:Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 18:55:19,235:INFO:Starting cross validation
2023-02-02 18:55:19,237:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:19,298:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 18:55:19,354:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 18:55:19,360:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 18:55:19,368:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 18:55:19,369:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 18:55:19,373:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 18:55:19,579:INFO:Calculating mean and std
2023-02-02 18:55:19,580:INFO:Creating metrics dataframe
2023-02-02 18:55:19,585:INFO:Uploading results into container
2023-02-02 18:55:19,585:INFO:Uploading model into container now
2023-02-02 18:55:19,585:INFO:_master_model_container: 17
2023-02-02 18:55:19,585:INFO:_display_container: 2
2023-02-02 18:55:19,587:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LassoLars(random_state=6043), sp=7,
                    window_length=7)
2023-02-02 18:55:19,587:INFO:create_model() successfully completed......................................
2023-02-02 18:55:19,725:INFO:SubProcess create_model() end ==================================
2023-02-02 18:55:19,725:INFO:Creating metrics dataframe
2023-02-02 18:55:19,742:INFO:Initializing Bayesian Ridge w/ Cond. Deseasonalize & Detrending
2023-02-02 18:55:19,742:INFO:Total runtime is 0.4489862680435181 minutes
2023-02-02 18:55:19,747:INFO:SubProcess create_model() called ==================================
2023-02-02 18:55:19,747:INFO:Initializing create_model()
2023-02-02 18:55:19,747:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=br_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:19,748:INFO:Checking exceptions
2023-02-02 18:55:19,748:INFO:Importing libraries
2023-02-02 18:55:19,748:INFO:Copying training dataset
2023-02-02 18:55:19,753:INFO:Defining folds
2023-02-02 18:55:19,753:INFO:Declaring metric variables
2023-02-02 18:55:19,758:INFO:Importing untrained model
2023-02-02 18:55:19,763:INFO:Bayesian Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 18:55:19,773:INFO:Starting cross validation
2023-02-02 18:55:19,774:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:19,828:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 18:55:20,106:INFO:Calculating mean and std
2023-02-02 18:55:20,107:INFO:Creating metrics dataframe
2023-02-02 18:55:20,112:INFO:Uploading results into container
2023-02-02 18:55:20,112:INFO:Uploading model into container now
2023-02-02 18:55:20,112:INFO:_master_model_container: 18
2023-02-02 18:55:20,112:INFO:_display_container: 2
2023-02-02 18:55:20,115:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=BayesianRidge(), sp=7, window_length=7)
2023-02-02 18:55:20,115:INFO:create_model() successfully completed......................................
2023-02-02 18:55:20,254:INFO:SubProcess create_model() end ==================================
2023-02-02 18:55:20,254:INFO:Creating metrics dataframe
2023-02-02 18:55:20,271:INFO:Initializing Huber w/ Cond. Deseasonalize & Detrending
2023-02-02 18:55:20,271:INFO:Total runtime is 0.4578002532323202 minutes
2023-02-02 18:55:20,275:INFO:SubProcess create_model() called ==================================
2023-02-02 18:55:20,275:INFO:Initializing create_model()
2023-02-02 18:55:20,275:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=huber_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:20,275:INFO:Checking exceptions
2023-02-02 18:55:20,275:INFO:Importing libraries
2023-02-02 18:55:20,275:INFO:Copying training dataset
2023-02-02 18:55:20,282:INFO:Defining folds
2023-02-02 18:55:20,283:INFO:Declaring metric variables
2023-02-02 18:55:20,287:INFO:Importing untrained model
2023-02-02 18:55:20,294:INFO:Huber w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 18:55:20,304:INFO:Starting cross validation
2023-02-02 18:55:20,306:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:20,368:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 18:55:20,456:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-02-02 18:55:20,465:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-02-02 18:55:20,469:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-02-02 18:55:20,682:INFO:Calculating mean and std
2023-02-02 18:55:20,684:INFO:Creating metrics dataframe
2023-02-02 18:55:20,688:INFO:Uploading results into container
2023-02-02 18:55:20,688:INFO:Uploading model into container now
2023-02-02 18:55:20,689:INFO:_master_model_container: 19
2023-02-02 18:55:20,689:INFO:_display_container: 2
2023-02-02 18:55:20,691:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=HuberRegressor(), sp=7, window_length=7)
2023-02-02 18:55:20,691:INFO:create_model() successfully completed......................................
2023-02-02 18:55:20,828:INFO:SubProcess create_model() end ==================================
2023-02-02 18:55:20,828:INFO:Creating metrics dataframe
2023-02-02 18:55:20,846:INFO:Initializing Passive Aggressive w/ Cond. Deseasonalize & Detrending
2023-02-02 18:55:20,846:INFO:Total runtime is 0.46738104025522875 minutes
2023-02-02 18:55:20,850:INFO:SubProcess create_model() called ==================================
2023-02-02 18:55:20,850:INFO:Initializing create_model()
2023-02-02 18:55:20,851:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=par_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:20,851:INFO:Checking exceptions
2023-02-02 18:55:20,851:INFO:Importing libraries
2023-02-02 18:55:20,851:INFO:Copying training dataset
2023-02-02 18:55:20,856:INFO:Defining folds
2023-02-02 18:55:20,857:INFO:Declaring metric variables
2023-02-02 18:55:20,861:INFO:Importing untrained model
2023-02-02 18:55:20,867:INFO:Passive Aggressive w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 18:55:20,876:INFO:Starting cross validation
2023-02-02 18:55:20,877:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:20,941:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 18:55:21,223:INFO:Calculating mean and std
2023-02-02 18:55:21,224:INFO:Creating metrics dataframe
2023-02-02 18:55:21,227:INFO:Uploading results into container
2023-02-02 18:55:21,228:INFO:Uploading model into container now
2023-02-02 18:55:21,228:INFO:_master_model_container: 20
2023-02-02 18:55:21,228:INFO:_display_container: 2
2023-02-02 18:55:21,231:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=PassiveAggressiveRegressor(random_state=6043),
                    sp=7, window_length=7)
2023-02-02 18:55:21,231:INFO:create_model() successfully completed......................................
2023-02-02 18:55:21,368:INFO:SubProcess create_model() end ==================================
2023-02-02 18:55:21,368:INFO:Creating metrics dataframe
2023-02-02 18:55:21,385:INFO:Initializing Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending
2023-02-02 18:55:21,385:INFO:Total runtime is 0.4763754963874818 minutes
2023-02-02 18:55:21,389:INFO:SubProcess create_model() called ==================================
2023-02-02 18:55:21,389:INFO:Initializing create_model()
2023-02-02 18:55:21,389:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=omp_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:21,390:INFO:Checking exceptions
2023-02-02 18:55:21,390:INFO:Importing libraries
2023-02-02 18:55:21,390:INFO:Copying training dataset
2023-02-02 18:55:21,395:INFO:Defining folds
2023-02-02 18:55:21,395:INFO:Declaring metric variables
2023-02-02 18:55:21,400:INFO:Importing untrained model
2023-02-02 18:55:21,407:INFO:Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 18:55:21,415:INFO:Starting cross validation
2023-02-02 18:55:21,417:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:21,479:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 18:55:21,532:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 18:55:21,542:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 18:55:21,543:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 18:55:21,549:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 18:55:21,556:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 18:55:21,762:INFO:Calculating mean and std
2023-02-02 18:55:21,763:INFO:Creating metrics dataframe
2023-02-02 18:55:21,767:INFO:Uploading results into container
2023-02-02 18:55:21,767:INFO:Uploading model into container now
2023-02-02 18:55:21,768:INFO:_master_model_container: 21
2023-02-02 18:55:21,768:INFO:_display_container: 2
2023-02-02 18:55:21,770:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=OrthogonalMatchingPursuit(), sp=7,
                    window_length=7)
2023-02-02 18:55:21,770:INFO:create_model() successfully completed......................................
2023-02-02 18:55:21,907:INFO:SubProcess create_model() end ==================================
2023-02-02 18:55:21,907:INFO:Creating metrics dataframe
2023-02-02 18:55:21,925:INFO:Initializing K Neighbors w/ Cond. Deseasonalize & Detrending
2023-02-02 18:55:21,925:INFO:Total runtime is 0.4853712439537049 minutes
2023-02-02 18:55:21,929:INFO:SubProcess create_model() called ==================================
2023-02-02 18:55:21,930:INFO:Initializing create_model()
2023-02-02 18:55:21,930:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=knn_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:21,930:INFO:Checking exceptions
2023-02-02 18:55:21,930:INFO:Importing libraries
2023-02-02 18:55:21,930:INFO:Copying training dataset
2023-02-02 18:55:21,935:INFO:Defining folds
2023-02-02 18:55:21,935:INFO:Declaring metric variables
2023-02-02 18:55:21,940:INFO:Importing untrained model
2023-02-02 18:55:21,945:INFO:K Neighbors w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 18:55:21,961:INFO:Starting cross validation
2023-02-02 18:55:21,962:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:22,014:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 18:55:22,420:INFO:Calculating mean and std
2023-02-02 18:55:22,421:INFO:Creating metrics dataframe
2023-02-02 18:55:22,426:INFO:Uploading results into container
2023-02-02 18:55:22,426:INFO:Uploading model into container now
2023-02-02 18:55:22,427:INFO:_master_model_container: 22
2023-02-02 18:55:22,427:INFO:_display_container: 2
2023-02-02 18:55:22,429:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=KNeighborsRegressor(n_jobs=-1), sp=7,
                    window_length=7)
2023-02-02 18:55:22,429:INFO:create_model() successfully completed......................................
2023-02-02 18:55:22,565:INFO:SubProcess create_model() end ==================================
2023-02-02 18:55:22,565:INFO:Creating metrics dataframe
2023-02-02 18:55:22,585:INFO:Initializing Decision Tree w/ Cond. Deseasonalize & Detrending
2023-02-02 18:55:22,585:INFO:Total runtime is 0.496364442507426 minutes
2023-02-02 18:55:22,588:INFO:SubProcess create_model() called ==================================
2023-02-02 18:55:22,589:INFO:Initializing create_model()
2023-02-02 18:55:22,589:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=dt_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:22,589:INFO:Checking exceptions
2023-02-02 18:55:22,589:INFO:Importing libraries
2023-02-02 18:55:22,590:INFO:Copying training dataset
2023-02-02 18:55:22,598:INFO:Defining folds
2023-02-02 18:55:22,598:INFO:Declaring metric variables
2023-02-02 18:55:22,603:INFO:Importing untrained model
2023-02-02 18:55:22,608:INFO:Decision Tree w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 18:55:22,618:INFO:Starting cross validation
2023-02-02 18:55:22,620:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:22,682:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 18:55:22,979:INFO:Calculating mean and std
2023-02-02 18:55:22,979:INFO:Creating metrics dataframe
2023-02-02 18:55:22,983:INFO:Uploading results into container
2023-02-02 18:55:22,984:INFO:Uploading model into container now
2023-02-02 18:55:22,984:INFO:_master_model_container: 23
2023-02-02 18:55:22,984:INFO:_display_container: 2
2023-02-02 18:55:22,986:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=DecisionTreeRegressor(random_state=6043), sp=7,
                    window_length=7)
2023-02-02 18:55:22,987:INFO:create_model() successfully completed......................................
2023-02-02 18:55:23,134:INFO:SubProcess create_model() end ==================================
2023-02-02 18:55:23,135:INFO:Creating metrics dataframe
2023-02-02 18:55:23,155:INFO:Initializing Random Forest w/ Cond. Deseasonalize & Detrending
2023-02-02 18:55:23,156:INFO:Total runtime is 0.5058833877245585 minutes
2023-02-02 18:55:23,161:INFO:SubProcess create_model() called ==================================
2023-02-02 18:55:23,162:INFO:Initializing create_model()
2023-02-02 18:55:23,162:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=rf_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:23,162:INFO:Checking exceptions
2023-02-02 18:55:23,162:INFO:Importing libraries
2023-02-02 18:55:23,162:INFO:Copying training dataset
2023-02-02 18:55:23,167:INFO:Defining folds
2023-02-02 18:55:23,168:INFO:Declaring metric variables
2023-02-02 18:55:23,172:INFO:Importing untrained model
2023-02-02 18:55:23,178:INFO:Random Forest w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 18:55:23,188:INFO:Starting cross validation
2023-02-02 18:55:23,190:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:23,257:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 18:55:23,894:INFO:Calculating mean and std
2023-02-02 18:55:23,895:INFO:Creating metrics dataframe
2023-02-02 18:55:23,899:INFO:Uploading results into container
2023-02-02 18:55:23,899:INFO:Uploading model into container now
2023-02-02 18:55:23,900:INFO:_master_model_container: 24
2023-02-02 18:55:23,900:INFO:_display_container: 2
2023-02-02 18:55:23,903:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=RandomForestRegressor(n_jobs=-1,
                                                    random_state=6043),
                    sp=7, window_length=7)
2023-02-02 18:55:23,903:INFO:create_model() successfully completed......................................
2023-02-02 18:55:24,041:INFO:SubProcess create_model() end ==================================
2023-02-02 18:55:24,041:INFO:Creating metrics dataframe
2023-02-02 18:55:24,060:INFO:Initializing Extra Trees w/ Cond. Deseasonalize & Detrending
2023-02-02 18:55:24,061:INFO:Total runtime is 0.520974071820577 minutes
2023-02-02 18:55:24,065:INFO:SubProcess create_model() called ==================================
2023-02-02 18:55:24,065:INFO:Initializing create_model()
2023-02-02 18:55:24,065:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=et_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:24,065:INFO:Checking exceptions
2023-02-02 18:55:24,065:INFO:Importing libraries
2023-02-02 18:55:24,065:INFO:Copying training dataset
2023-02-02 18:55:24,070:INFO:Defining folds
2023-02-02 18:55:24,070:INFO:Declaring metric variables
2023-02-02 18:55:24,075:INFO:Importing untrained model
2023-02-02 18:55:24,082:INFO:Extra Trees w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 18:55:24,090:INFO:Starting cross validation
2023-02-02 18:55:24,091:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:24,148:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 18:55:24,709:INFO:Calculating mean and std
2023-02-02 18:55:24,710:INFO:Creating metrics dataframe
2023-02-02 18:55:24,715:INFO:Uploading results into container
2023-02-02 18:55:24,716:INFO:Uploading model into container now
2023-02-02 18:55:24,716:INFO:_master_model_container: 25
2023-02-02 18:55:24,716:INFO:_display_container: 2
2023-02-02 18:55:24,719:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(n_jobs=-1, random_state=6043),
                    sp=7, window_length=7)
2023-02-02 18:55:24,719:INFO:create_model() successfully completed......................................
2023-02-02 18:55:24,855:INFO:SubProcess create_model() end ==================================
2023-02-02 18:55:24,856:INFO:Creating metrics dataframe
2023-02-02 18:55:24,875:INFO:Initializing Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-02-02 18:55:24,875:INFO:Total runtime is 0.5345310568809509 minutes
2023-02-02 18:55:24,880:INFO:SubProcess create_model() called ==================================
2023-02-02 18:55:24,880:INFO:Initializing create_model()
2023-02-02 18:55:24,880:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=gbr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:24,880:INFO:Checking exceptions
2023-02-02 18:55:24,880:INFO:Importing libraries
2023-02-02 18:55:24,880:INFO:Copying training dataset
2023-02-02 18:55:24,885:INFO:Defining folds
2023-02-02 18:55:24,886:INFO:Declaring metric variables
2023-02-02 18:55:24,890:INFO:Importing untrained model
2023-02-02 18:55:24,896:INFO:Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 18:55:24,907:INFO:Starting cross validation
2023-02-02 18:55:24,908:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:24,965:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 18:55:25,281:INFO:Calculating mean and std
2023-02-02 18:55:25,282:INFO:Creating metrics dataframe
2023-02-02 18:55:25,287:INFO:Uploading results into container
2023-02-02 18:55:25,287:INFO:Uploading model into container now
2023-02-02 18:55:25,287:INFO:_master_model_container: 26
2023-02-02 18:55:25,287:INFO:_display_container: 2
2023-02-02 18:55:25,290:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=GradientBoostingRegressor(random_state=6043),
                    sp=7, window_length=7)
2023-02-02 18:55:25,290:INFO:create_model() successfully completed......................................
2023-02-02 18:55:25,430:INFO:SubProcess create_model() end ==================================
2023-02-02 18:55:25,430:INFO:Creating metrics dataframe
2023-02-02 18:55:25,449:INFO:Initializing AdaBoost w/ Cond. Deseasonalize & Detrending
2023-02-02 18:55:25,449:INFO:Total runtime is 0.5441098729769389 minutes
2023-02-02 18:55:25,453:INFO:SubProcess create_model() called ==================================
2023-02-02 18:55:25,453:INFO:Initializing create_model()
2023-02-02 18:55:25,453:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=ada_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:25,453:INFO:Checking exceptions
2023-02-02 18:55:25,453:INFO:Importing libraries
2023-02-02 18:55:25,453:INFO:Copying training dataset
2023-02-02 18:55:25,459:INFO:Defining folds
2023-02-02 18:55:25,459:INFO:Declaring metric variables
2023-02-02 18:55:25,464:INFO:Importing untrained model
2023-02-02 18:55:25,469:INFO:AdaBoost w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 18:55:25,481:INFO:Starting cross validation
2023-02-02 18:55:25,482:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:25,538:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 18:55:25,936:INFO:Calculating mean and std
2023-02-02 18:55:25,937:INFO:Creating metrics dataframe
2023-02-02 18:55:25,942:INFO:Uploading results into container
2023-02-02 18:55:25,942:INFO:Uploading model into container now
2023-02-02 18:55:25,942:INFO:_master_model_container: 27
2023-02-02 18:55:25,942:INFO:_display_container: 2
2023-02-02 18:55:25,945:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=AdaBoostRegressor(random_state=6043), sp=7,
                    window_length=7)
2023-02-02 18:55:25,945:INFO:create_model() successfully completed......................................
2023-02-02 18:55:26,089:INFO:SubProcess create_model() end ==================================
2023-02-02 18:55:26,090:INFO:Creating metrics dataframe
2023-02-02 18:55:26,110:INFO:Initializing Light Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-02-02 18:55:26,111:INFO:Total runtime is 0.5551348169644674 minutes
2023-02-02 18:55:26,114:INFO:SubProcess create_model() called ==================================
2023-02-02 18:55:26,115:INFO:Initializing create_model()
2023-02-02 18:55:26,115:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=lightgbm_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C11FBA36A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:26,115:INFO:Checking exceptions
2023-02-02 18:55:26,115:INFO:Importing libraries
2023-02-02 18:55:26,115:INFO:Copying training dataset
2023-02-02 18:55:26,120:INFO:Defining folds
2023-02-02 18:55:26,121:INFO:Declaring metric variables
2023-02-02 18:55:26,125:INFO:Importing untrained model
2023-02-02 18:55:26,130:INFO:Light Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 18:55:26,148:INFO:Starting cross validation
2023-02-02 18:55:26,150:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 18:55:26,247:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 18:55:26,564:INFO:Calculating mean and std
2023-02-02 18:55:26,565:INFO:Creating metrics dataframe
2023-02-02 18:55:26,570:INFO:Uploading results into container
2023-02-02 18:55:26,570:INFO:Uploading model into container now
2023-02-02 18:55:26,571:INFO:_master_model_container: 28
2023-02-02 18:55:26,571:INFO:_display_container: 2
2023-02-02 18:55:26,573:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LGBMRegressor(random_state=6043), sp=7,
                    window_length=7)
2023-02-02 18:55:26,574:INFO:create_model() successfully completed......................................
2023-02-02 18:55:26,717:INFO:SubProcess create_model() end ==================================
2023-02-02 18:55:26,717:INFO:Creating metrics dataframe
2023-02-02 18:55:26,750:INFO:Initializing create_model()
2023-02-02 18:55:26,751:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-02-02 18:55:26,751:INFO:Checking exceptions
2023-02-02 18:55:26,753:INFO:Importing libraries
2023-02-02 18:55:26,753:INFO:Copying training dataset
2023-02-02 18:55:26,758:INFO:Defining folds
2023-02-02 18:55:26,758:INFO:Declaring metric variables
2023-02-02 18:55:26,758:INFO:Importing untrained model
2023-02-02 18:55:26,758:INFO:Declaring custom model
2023-02-02 18:55:26,759:INFO:ARIMA Imported successfully
2023-02-02 18:55:26,760:INFO:Cross validation set to False
2023-02-02 18:55:26,760:INFO:Fitting Model
2023-02-02 18:55:26,827:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 18:55:26,827:INFO:create_model() successfully completed......................................
2023-02-02 18:55:27,023:INFO:_master_model_container: 28
2023-02-02 18:55:27,023:INFO:_display_container: 2
2023-02-02 18:55:27,024:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 18:55:27,024:INFO:compare_models() successfully completed......................................
2023-02-02 19:00:27,975:INFO:Initializing create_model()
2023-02-02 19:00:27,976:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:00:27,976:INFO:Checking exceptions
2023-02-02 19:00:28,006:INFO:Importing libraries
2023-02-02 19:00:28,006:INFO:Copying training dataset
2023-02-02 19:00:28,014:INFO:Defining folds
2023-02-02 19:00:28,014:INFO:Declaring metric variables
2023-02-02 19:00:28,019:INFO:Importing untrained model
2023-02-02 19:00:28,026:INFO:ARIMA Imported successfully
2023-02-02 19:00:28,036:INFO:Starting cross validation
2023-02-02 19:00:28,038:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:00:28,101:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\joblib\externals\loky\process_executor.py:700: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  warnings.warn(

2023-02-02 19:00:34,103:INFO:Calculating mean and std
2023-02-02 19:00:34,104:INFO:Creating metrics dataframe
2023-02-02 19:00:34,114:INFO:Finalizing model
2023-02-02 19:00:34,189:INFO:Uploading results into container
2023-02-02 19:00:34,189:INFO:Uploading model into container now
2023-02-02 19:00:34,202:INFO:_master_model_container: 29
2023-02-02 19:00:34,203:INFO:_display_container: 3
2023-02-02 19:00:34,203:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:00:34,203:INFO:create_model() successfully completed......................................
2023-02-02 19:07:09,193:INFO:Initializing compare_models()
2023-02-02 19:07:09,193:INFO:compare_models(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, include=None, fold=None, round=4, cross_validation=True, sort=MASE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, 'include': None, 'exclude': 'auto_arima', 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MASE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.time_series.forecasting.oop.TSForecastingExperiment'>}, exclude=auto_arima)
2023-02-02 19:07:09,193:INFO:Checking exceptions
2023-02-02 19:07:09,196:INFO:Preparing display monitor
2023-02-02 19:07:09,231:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:709: UserWarning: Unsupported estimator `ensemble_forecaster` for method `compare_models()`, removing from model_library
  warnings.warn(

2023-02-02 19:07:09,231:INFO:Initializing Naive Forecaster
2023-02-02 19:07:09,232:INFO:Total runtime is 0.0 minutes
2023-02-02 19:07:09,236:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:09,237:INFO:Initializing create_model()
2023-02-02 19:07:09,237:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=naive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12642C880>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:09,237:INFO:Checking exceptions
2023-02-02 19:07:09,237:INFO:Importing libraries
2023-02-02 19:07:09,237:INFO:Copying training dataset
2023-02-02 19:07:09,242:INFO:Defining folds
2023-02-02 19:07:09,242:INFO:Declaring metric variables
2023-02-02 19:07:09,247:INFO:Importing untrained model
2023-02-02 19:07:09,252:INFO:Naive Forecaster Imported successfully
2023-02-02 19:07:09,260:INFO:Starting cross validation
2023-02-02 19:07:09,262:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:15,076:INFO:Calculating mean and std
2023-02-02 19:07:15,078:INFO:Creating metrics dataframe
2023-02-02 19:07:15,088:INFO:Uploading results into container
2023-02-02 19:07:15,089:INFO:Uploading model into container now
2023-02-02 19:07:15,090:INFO:_master_model_container: 30
2023-02-02 19:07:15,090:INFO:_display_container: 4
2023-02-02 19:07:15,090:INFO:NaiveForecaster()
2023-02-02 19:07:15,091:INFO:create_model() successfully completed......................................
2023-02-02 19:07:15,278:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:15,278:INFO:Creating metrics dataframe
2023-02-02 19:07:15,289:INFO:Initializing Grand Means Forecaster
2023-02-02 19:07:15,289:INFO:Total runtime is 0.10096676747004191 minutes
2023-02-02 19:07:15,293:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:15,293:INFO:Initializing create_model()
2023-02-02 19:07:15,293:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=grand_means, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12642C880>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:15,293:INFO:Checking exceptions
2023-02-02 19:07:15,294:INFO:Importing libraries
2023-02-02 19:07:15,294:INFO:Copying training dataset
2023-02-02 19:07:15,299:INFO:Defining folds
2023-02-02 19:07:15,300:INFO:Declaring metric variables
2023-02-02 19:07:15,305:INFO:Importing untrained model
2023-02-02 19:07:15,310:INFO:Grand Means Forecaster Imported successfully
2023-02-02 19:07:15,319:INFO:Starting cross validation
2023-02-02 19:07:15,320:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:18,203:INFO:Calculating mean and std
2023-02-02 19:07:18,205:INFO:Creating metrics dataframe
2023-02-02 19:07:18,213:INFO:Uploading results into container
2023-02-02 19:07:18,213:INFO:Uploading model into container now
2023-02-02 19:07:18,214:INFO:_master_model_container: 31
2023-02-02 19:07:18,214:INFO:_display_container: 4
2023-02-02 19:07:18,215:INFO:NaiveForecaster(strategy='mean')
2023-02-02 19:07:18,215:INFO:create_model() successfully completed......................................
2023-02-02 19:07:18,384:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:18,384:INFO:Creating metrics dataframe
2023-02-02 19:07:18,396:INFO:Initializing Seasonal Naive Forecaster
2023-02-02 19:07:18,396:INFO:Total runtime is 0.15275150537490845 minutes
2023-02-02 19:07:18,400:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:18,400:INFO:Initializing create_model()
2023-02-02 19:07:18,400:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=snaive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12642C880>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:18,400:INFO:Checking exceptions
2023-02-02 19:07:18,401:INFO:Importing libraries
2023-02-02 19:07:18,401:INFO:Copying training dataset
2023-02-02 19:07:18,406:INFO:Defining folds
2023-02-02 19:07:18,407:INFO:Declaring metric variables
2023-02-02 19:07:18,413:INFO:Importing untrained model
2023-02-02 19:07:18,417:INFO:Seasonal Naive Forecaster Imported successfully
2023-02-02 19:07:18,427:INFO:Starting cross validation
2023-02-02 19:07:18,429:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:18,495:INFO:Calculating mean and std
2023-02-02 19:07:18,496:INFO:Creating metrics dataframe
2023-02-02 19:07:18,500:INFO:Uploading results into container
2023-02-02 19:07:18,500:INFO:Uploading model into container now
2023-02-02 19:07:18,501:INFO:_master_model_container: 32
2023-02-02 19:07:18,501:INFO:_display_container: 4
2023-02-02 19:07:18,501:INFO:NaiveForecaster(sp=7)
2023-02-02 19:07:18,501:INFO:create_model() successfully completed......................................
2023-02-02 19:07:18,638:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:18,638:INFO:Creating metrics dataframe
2023-02-02 19:07:18,649:INFO:Initializing Polynomial Trend Forecaster
2023-02-02 19:07:18,649:INFO:Total runtime is 0.1569655736287435 minutes
2023-02-02 19:07:18,653:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:18,654:INFO:Initializing create_model()
2023-02-02 19:07:18,654:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=polytrend, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12642C880>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:18,654:INFO:Checking exceptions
2023-02-02 19:07:18,654:INFO:Importing libraries
2023-02-02 19:07:18,654:INFO:Copying training dataset
2023-02-02 19:07:18,660:INFO:Defining folds
2023-02-02 19:07:18,660:INFO:Declaring metric variables
2023-02-02 19:07:18,665:INFO:Importing untrained model
2023-02-02 19:07:18,671:INFO:Polynomial Trend Forecaster Imported successfully
2023-02-02 19:07:18,679:INFO:Starting cross validation
2023-02-02 19:07:18,681:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:18,736:INFO:Calculating mean and std
2023-02-02 19:07:18,736:INFO:Creating metrics dataframe
2023-02-02 19:07:18,741:INFO:Uploading results into container
2023-02-02 19:07:18,741:INFO:Uploading model into container now
2023-02-02 19:07:18,741:INFO:_master_model_container: 33
2023-02-02 19:07:18,741:INFO:_display_container: 4
2023-02-02 19:07:18,741:INFO:PolynomialTrendForecaster()
2023-02-02 19:07:18,741:INFO:create_model() successfully completed......................................
2023-02-02 19:07:18,879:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:18,879:INFO:Creating metrics dataframe
2023-02-02 19:07:18,891:INFO:Initializing Exponential Smoothing
2023-02-02 19:07:18,891:INFO:Total runtime is 0.160996413230896 minutes
2023-02-02 19:07:18,895:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:18,895:INFO:Initializing create_model()
2023-02-02 19:07:18,895:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=exp_smooth, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12642C880>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:18,896:INFO:Checking exceptions
2023-02-02 19:07:18,896:INFO:Importing libraries
2023-02-02 19:07:18,896:INFO:Copying training dataset
2023-02-02 19:07:18,902:INFO:Defining folds
2023-02-02 19:07:18,902:INFO:Declaring metric variables
2023-02-02 19:07:18,907:INFO:Importing untrained model
2023-02-02 19:07:18,912:INFO:Exponential Smoothing Imported successfully
2023-02-02 19:07:18,920:INFO:Starting cross validation
2023-02-02 19:07:18,921:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:19,265:INFO:Calculating mean and std
2023-02-02 19:07:19,266:INFO:Creating metrics dataframe
2023-02-02 19:07:19,270:INFO:Uploading results into container
2023-02-02 19:07:19,270:INFO:Uploading model into container now
2023-02-02 19:07:19,271:INFO:_master_model_container: 34
2023-02-02 19:07:19,271:INFO:_display_container: 4
2023-02-02 19:07:19,271:INFO:ExponentialSmoothing(seasonal='mul', sp=7, trend='add')
2023-02-02 19:07:19,272:INFO:create_model() successfully completed......................................
2023-02-02 19:07:19,411:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:19,411:INFO:Creating metrics dataframe
2023-02-02 19:07:19,424:INFO:Initializing Croston
2023-02-02 19:07:19,424:INFO:Total runtime is 0.16988160610198974 minutes
2023-02-02 19:07:19,428:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:19,428:INFO:Initializing create_model()
2023-02-02 19:07:19,428:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=croston, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12642C880>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:19,429:INFO:Checking exceptions
2023-02-02 19:07:19,429:INFO:Importing libraries
2023-02-02 19:07:19,429:INFO:Copying training dataset
2023-02-02 19:07:19,435:INFO:Defining folds
2023-02-02 19:07:19,435:INFO:Declaring metric variables
2023-02-02 19:07:19,440:INFO:Importing untrained model
2023-02-02 19:07:19,444:INFO:Croston Imported successfully
2023-02-02 19:07:19,454:INFO:Starting cross validation
2023-02-02 19:07:19,456:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:19,506:INFO:Calculating mean and std
2023-02-02 19:07:19,507:INFO:Creating metrics dataframe
2023-02-02 19:07:19,511:INFO:Uploading results into container
2023-02-02 19:07:19,511:INFO:Uploading model into container now
2023-02-02 19:07:19,512:INFO:_master_model_container: 35
2023-02-02 19:07:19,512:INFO:_display_container: 4
2023-02-02 19:07:19,512:INFO:Croston()
2023-02-02 19:07:19,512:INFO:create_model() successfully completed......................................
2023-02-02 19:07:19,649:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:19,650:INFO:Creating metrics dataframe
2023-02-02 19:07:19,663:INFO:Initializing ETS
2023-02-02 19:07:19,663:INFO:Total runtime is 0.17386252482732137 minutes
2023-02-02 19:07:19,667:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:19,667:INFO:Initializing create_model()
2023-02-02 19:07:19,667:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=ets, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12642C880>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:19,667:INFO:Checking exceptions
2023-02-02 19:07:19,667:INFO:Importing libraries
2023-02-02 19:07:19,667:INFO:Copying training dataset
2023-02-02 19:07:19,673:INFO:Defining folds
2023-02-02 19:07:19,673:INFO:Declaring metric variables
2023-02-02 19:07:19,677:INFO:Importing untrained model
2023-02-02 19:07:19,683:INFO:ETS Imported successfully
2023-02-02 19:07:19,692:INFO:Starting cross validation
2023-02-02 19:07:19,693:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:19,936:INFO:Calculating mean and std
2023-02-02 19:07:19,938:INFO:Creating metrics dataframe
2023-02-02 19:07:19,942:INFO:Uploading results into container
2023-02-02 19:07:19,942:INFO:Uploading model into container now
2023-02-02 19:07:19,943:INFO:_master_model_container: 36
2023-02-02 19:07:19,943:INFO:_display_container: 4
2023-02-02 19:07:19,944:INFO:AutoETS(seasonal='mul', sp=7, trend='add')
2023-02-02 19:07:19,944:INFO:create_model() successfully completed......................................
2023-02-02 19:07:20,083:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:20,084:INFO:Creating metrics dataframe
2023-02-02 19:07:20,097:INFO:Initializing Theta Forecaster
2023-02-02 19:07:20,097:INFO:Total runtime is 0.18108924627304077 minutes
2023-02-02 19:07:20,101:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:20,101:INFO:Initializing create_model()
2023-02-02 19:07:20,101:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=theta, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12642C880>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:20,101:INFO:Checking exceptions
2023-02-02 19:07:20,101:INFO:Importing libraries
2023-02-02 19:07:20,102:INFO:Copying training dataset
2023-02-02 19:07:20,107:INFO:Defining folds
2023-02-02 19:07:20,107:INFO:Declaring metric variables
2023-02-02 19:07:20,111:INFO:Importing untrained model
2023-02-02 19:07:20,117:INFO:Theta Forecaster Imported successfully
2023-02-02 19:07:20,127:INFO:Starting cross validation
2023-02-02 19:07:20,128:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:20,243:INFO:Calculating mean and std
2023-02-02 19:07:20,245:INFO:Creating metrics dataframe
2023-02-02 19:07:20,249:INFO:Uploading results into container
2023-02-02 19:07:20,249:INFO:Uploading model into container now
2023-02-02 19:07:20,249:INFO:_master_model_container: 37
2023-02-02 19:07:20,250:INFO:_display_container: 4
2023-02-02 19:07:20,250:INFO:ThetaForecaster(sp=7)
2023-02-02 19:07:20,250:INFO:create_model() successfully completed......................................
2023-02-02 19:07:20,389:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:20,389:INFO:Creating metrics dataframe
2023-02-02 19:07:20,404:INFO:Initializing Linear w/ Cond. Deseasonalize & Detrending
2023-02-02 19:07:20,404:INFO:Total runtime is 0.18621275822321573 minutes
2023-02-02 19:07:20,409:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:20,409:INFO:Initializing create_model()
2023-02-02 19:07:20,409:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=lr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12642C880>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:20,409:INFO:Checking exceptions
2023-02-02 19:07:20,409:INFO:Importing libraries
2023-02-02 19:07:20,409:INFO:Copying training dataset
2023-02-02 19:07:20,414:INFO:Defining folds
2023-02-02 19:07:20,415:INFO:Declaring metric variables
2023-02-02 19:07:20,420:INFO:Importing untrained model
2023-02-02 19:07:20,425:INFO:Linear w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:07:20,434:INFO:Starting cross validation
2023-02-02 19:07:20,435:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:20,822:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:20,822:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:20,822:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:20,822:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:20,825:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:20,826:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:20,826:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:20,826:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:20,828:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:20,828:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:20,828:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:20,828:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:20,838:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:20,838:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:20,839:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:20,839:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:20,853:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:20,853:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:20,853:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:20,853:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:20,915:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:07:20,920:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:07:20,920:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:07:20,926:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:07:20,938:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:07:20,954:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:07:21,285:INFO:Calculating mean and std
2023-02-02 19:07:21,287:INFO:Creating metrics dataframe
2023-02-02 19:07:21,291:INFO:Uploading results into container
2023-02-02 19:07:21,291:INFO:Uploading model into container now
2023-02-02 19:07:21,292:INFO:_master_model_container: 38
2023-02-02 19:07:21,292:INFO:_display_container: 4
2023-02-02 19:07:21,294:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LinearRegression(n_jobs=-1), sp=7,
                    window_length=7)
2023-02-02 19:07:21,294:INFO:create_model() successfully completed......................................
2023-02-02 19:07:21,431:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:21,431:INFO:Creating metrics dataframe
2023-02-02 19:07:21,445:INFO:Initializing Elastic Net w/ Cond. Deseasonalize & Detrending
2023-02-02 19:07:21,445:INFO:Total runtime is 0.20356628894805906 minutes
2023-02-02 19:07:21,449:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:21,450:INFO:Initializing create_model()
2023-02-02 19:07:21,450:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=en_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12642C880>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:21,450:INFO:Checking exceptions
2023-02-02 19:07:21,450:INFO:Importing libraries
2023-02-02 19:07:21,450:INFO:Copying training dataset
2023-02-02 19:07:21,455:INFO:Defining folds
2023-02-02 19:07:21,455:INFO:Declaring metric variables
2023-02-02 19:07:21,460:INFO:Importing untrained model
2023-02-02 19:07:21,472:INFO:Elastic Net w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:07:21,484:INFO:Starting cross validation
2023-02-02 19:07:21,486:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:21,830:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:21,830:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:21,830:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:21,830:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:21,845:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:21,845:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:21,845:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:21,845:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:21,847:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:21,847:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:21,848:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:21,848:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:07:21,899:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:07:21,915:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:07:21,917:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:07:21,925:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:07:22,143:INFO:Calculating mean and std
2023-02-02 19:07:22,145:INFO:Creating metrics dataframe
2023-02-02 19:07:22,150:INFO:Uploading results into container
2023-02-02 19:07:22,150:INFO:Uploading model into container now
2023-02-02 19:07:22,150:INFO:_master_model_container: 39
2023-02-02 19:07:22,151:INFO:_display_container: 4
2023-02-02 19:07:22,153:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=ElasticNet(random_state=6043), sp=7,
                    window_length=7)
2023-02-02 19:07:22,153:INFO:create_model() successfully completed......................................
2023-02-02 19:07:22,295:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:22,295:INFO:Creating metrics dataframe
2023-02-02 19:07:22,311:INFO:Initializing Ridge w/ Cond. Deseasonalize & Detrending
2023-02-02 19:07:22,311:INFO:Total runtime is 0.21799075603485105 minutes
2023-02-02 19:07:22,315:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:22,316:INFO:Initializing create_model()
2023-02-02 19:07:22,316:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=ridge_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12642C880>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:22,316:INFO:Checking exceptions
2023-02-02 19:07:22,316:INFO:Importing libraries
2023-02-02 19:07:22,316:INFO:Copying training dataset
2023-02-02 19:07:22,321:INFO:Defining folds
2023-02-02 19:07:22,322:INFO:Declaring metric variables
2023-02-02 19:07:22,326:INFO:Importing untrained model
2023-02-02 19:07:22,331:INFO:Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:07:22,340:INFO:Starting cross validation
2023-02-02 19:07:22,341:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:22,393:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:07:22,656:INFO:Calculating mean and std
2023-02-02 19:07:22,658:INFO:Creating metrics dataframe
2023-02-02 19:07:22,662:INFO:Uploading results into container
2023-02-02 19:07:22,662:INFO:Uploading model into container now
2023-02-02 19:07:22,663:INFO:_master_model_container: 40
2023-02-02 19:07:22,663:INFO:_display_container: 4
2023-02-02 19:07:22,665:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Ridge(random_state=6043), sp=7, window_length=7)
2023-02-02 19:07:22,665:INFO:create_model() successfully completed......................................
2023-02-02 19:07:22,804:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:22,804:INFO:Creating metrics dataframe
2023-02-02 19:07:22,820:INFO:Initializing Lasso w/ Cond. Deseasonalize & Detrending
2023-02-02 19:07:22,820:INFO:Total runtime is 0.2264688412348429 minutes
2023-02-02 19:07:22,824:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:22,825:INFO:Initializing create_model()
2023-02-02 19:07:22,825:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=lasso_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12642C880>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:22,825:INFO:Checking exceptions
2023-02-02 19:07:22,825:INFO:Importing libraries
2023-02-02 19:07:22,825:INFO:Copying training dataset
2023-02-02 19:07:22,829:INFO:Defining folds
2023-02-02 19:07:22,829:INFO:Declaring metric variables
2023-02-02 19:07:22,834:INFO:Importing untrained model
2023-02-02 19:07:22,841:INFO:Lasso w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:07:22,849:INFO:Starting cross validation
2023-02-02 19:07:22,850:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:22,913:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:07:23,189:INFO:Calculating mean and std
2023-02-02 19:07:23,191:INFO:Creating metrics dataframe
2023-02-02 19:07:23,195:INFO:Uploading results into container
2023-02-02 19:07:23,196:INFO:Uploading model into container now
2023-02-02 19:07:23,196:INFO:_master_model_container: 41
2023-02-02 19:07:23,196:INFO:_display_container: 4
2023-02-02 19:07:23,198:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Lasso(random_state=6043), sp=7, window_length=7)
2023-02-02 19:07:23,198:INFO:create_model() successfully completed......................................
2023-02-02 19:07:23,337:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:23,338:INFO:Creating metrics dataframe
2023-02-02 19:07:23,353:INFO:Initializing Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-02-02 19:07:23,354:INFO:Total runtime is 0.235383661588033 minutes
2023-02-02 19:07:23,358:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:23,358:INFO:Initializing create_model()
2023-02-02 19:07:23,358:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=lar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12642C880>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:23,358:INFO:Checking exceptions
2023-02-02 19:07:23,358:INFO:Importing libraries
2023-02-02 19:07:23,358:INFO:Copying training dataset
2023-02-02 19:07:23,363:INFO:Defining folds
2023-02-02 19:07:23,364:INFO:Declaring metric variables
2023-02-02 19:07:23,369:INFO:Importing untrained model
2023-02-02 19:07:23,374:INFO:Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:07:23,383:INFO:Starting cross validation
2023-02-02 19:07:23,385:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:23,436:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:07:23,493:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:07:23,494:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:07:23,497:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:07:23,533:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:07:23,534:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:07:23,711:INFO:Calculating mean and std
2023-02-02 19:07:23,713:INFO:Creating metrics dataframe
2023-02-02 19:07:23,717:INFO:Uploading results into container
2023-02-02 19:07:23,717:INFO:Uploading model into container now
2023-02-02 19:07:23,718:INFO:_master_model_container: 42
2023-02-02 19:07:23,718:INFO:_display_container: 4
2023-02-02 19:07:23,720:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Lars(random_state=6043), sp=7, window_length=7)
2023-02-02 19:07:23,721:INFO:create_model() successfully completed......................................
2023-02-02 19:07:23,862:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:23,862:INFO:Creating metrics dataframe
2023-02-02 19:07:23,877:INFO:Initializing Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-02-02 19:07:23,877:INFO:Total runtime is 0.24409627517064408 minutes
2023-02-02 19:07:23,881:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:23,882:INFO:Initializing create_model()
2023-02-02 19:07:23,882:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=llar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12642C880>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:23,882:INFO:Checking exceptions
2023-02-02 19:07:23,882:INFO:Importing libraries
2023-02-02 19:07:23,882:INFO:Copying training dataset
2023-02-02 19:07:23,887:INFO:Defining folds
2023-02-02 19:07:23,888:INFO:Declaring metric variables
2023-02-02 19:07:23,892:INFO:Importing untrained model
2023-02-02 19:07:23,898:INFO:Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:07:23,908:INFO:Starting cross validation
2023-02-02 19:07:23,909:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:23,966:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:07:24,013:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 19:07:24,019:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 19:07:24,023:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 19:07:24,043:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 19:07:24,044:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 19:07:24,253:INFO:Calculating mean and std
2023-02-02 19:07:24,254:INFO:Creating metrics dataframe
2023-02-02 19:07:24,259:INFO:Uploading results into container
2023-02-02 19:07:24,260:INFO:Uploading model into container now
2023-02-02 19:07:24,260:INFO:_master_model_container: 43
2023-02-02 19:07:24,260:INFO:_display_container: 4
2023-02-02 19:07:24,263:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LassoLars(random_state=6043), sp=7,
                    window_length=7)
2023-02-02 19:07:24,263:INFO:create_model() successfully completed......................................
2023-02-02 19:07:24,403:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:24,403:INFO:Creating metrics dataframe
2023-02-02 19:07:24,419:INFO:Initializing Bayesian Ridge w/ Cond. Deseasonalize & Detrending
2023-02-02 19:07:24,419:INFO:Total runtime is 0.25312409798304236 minutes
2023-02-02 19:07:24,423:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:24,423:INFO:Initializing create_model()
2023-02-02 19:07:24,424:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=br_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12642C880>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:24,424:INFO:Checking exceptions
2023-02-02 19:07:24,424:INFO:Importing libraries
2023-02-02 19:07:24,424:INFO:Copying training dataset
2023-02-02 19:07:24,432:INFO:Defining folds
2023-02-02 19:07:24,432:INFO:Declaring metric variables
2023-02-02 19:07:24,437:INFO:Importing untrained model
2023-02-02 19:07:24,442:INFO:Bayesian Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:07:24,452:INFO:Starting cross validation
2023-02-02 19:07:24,453:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:24,510:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:07:24,792:INFO:Calculating mean and std
2023-02-02 19:07:24,793:INFO:Creating metrics dataframe
2023-02-02 19:07:24,797:INFO:Uploading results into container
2023-02-02 19:07:24,798:INFO:Uploading model into container now
2023-02-02 19:07:24,798:INFO:_master_model_container: 44
2023-02-02 19:07:24,798:INFO:_display_container: 4
2023-02-02 19:07:24,800:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=BayesianRidge(), sp=7, window_length=7)
2023-02-02 19:07:24,800:INFO:create_model() successfully completed......................................
2023-02-02 19:07:24,939:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:24,939:INFO:Creating metrics dataframe
2023-02-02 19:07:24,957:INFO:Initializing Huber w/ Cond. Deseasonalize & Detrending
2023-02-02 19:07:24,957:INFO:Total runtime is 0.26209849913914995 minutes
2023-02-02 19:07:24,961:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:24,962:INFO:Initializing create_model()
2023-02-02 19:07:24,962:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=huber_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12642C880>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:24,962:INFO:Checking exceptions
2023-02-02 19:07:24,962:INFO:Importing libraries
2023-02-02 19:07:24,962:INFO:Copying training dataset
2023-02-02 19:07:24,967:INFO:Defining folds
2023-02-02 19:07:24,968:INFO:Declaring metric variables
2023-02-02 19:07:24,971:INFO:Importing untrained model
2023-02-02 19:07:24,976:INFO:Huber w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:07:24,986:INFO:Starting cross validation
2023-02-02 19:07:24,987:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:25,040:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:07:25,128:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-02-02 19:07:25,141:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-02-02 19:07:25,216:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-02-02 19:07:25,391:INFO:Calculating mean and std
2023-02-02 19:07:25,392:INFO:Creating metrics dataframe
2023-02-02 19:07:25,397:INFO:Uploading results into container
2023-02-02 19:07:25,397:INFO:Uploading model into container now
2023-02-02 19:07:25,397:INFO:_master_model_container: 45
2023-02-02 19:07:25,397:INFO:_display_container: 4
2023-02-02 19:07:25,400:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=HuberRegressor(), sp=7, window_length=7)
2023-02-02 19:07:25,400:INFO:create_model() successfully completed......................................
2023-02-02 19:07:25,538:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:25,538:INFO:Creating metrics dataframe
2023-02-02 19:07:25,554:INFO:Initializing Passive Aggressive w/ Cond. Deseasonalize & Detrending
2023-02-02 19:07:25,554:INFO:Total runtime is 0.27204235394795734 minutes
2023-02-02 19:07:25,558:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:25,559:INFO:Initializing create_model()
2023-02-02 19:07:25,559:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=par_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12642C880>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:25,559:INFO:Checking exceptions
2023-02-02 19:07:25,559:INFO:Importing libraries
2023-02-02 19:07:25,559:INFO:Copying training dataset
2023-02-02 19:07:25,564:INFO:Defining folds
2023-02-02 19:07:25,565:INFO:Declaring metric variables
2023-02-02 19:07:25,569:INFO:Importing untrained model
2023-02-02 19:07:25,575:INFO:Passive Aggressive w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:07:25,584:INFO:Starting cross validation
2023-02-02 19:07:25,585:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:25,650:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:07:25,904:INFO:Calculating mean and std
2023-02-02 19:07:25,907:INFO:Creating metrics dataframe
2023-02-02 19:07:25,911:INFO:Uploading results into container
2023-02-02 19:07:25,911:INFO:Uploading model into container now
2023-02-02 19:07:25,912:INFO:_master_model_container: 46
2023-02-02 19:07:25,912:INFO:_display_container: 4
2023-02-02 19:07:25,914:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=PassiveAggressiveRegressor(random_state=6043),
                    sp=7, window_length=7)
2023-02-02 19:07:25,914:INFO:create_model() successfully completed......................................
2023-02-02 19:07:26,053:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:26,054:INFO:Creating metrics dataframe
2023-02-02 19:07:26,072:INFO:Initializing Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending
2023-02-02 19:07:26,072:INFO:Total runtime is 0.28067038059234617 minutes
2023-02-02 19:07:26,077:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:26,077:INFO:Initializing create_model()
2023-02-02 19:07:26,077:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=omp_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12642C880>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:26,077:INFO:Checking exceptions
2023-02-02 19:07:26,077:INFO:Importing libraries
2023-02-02 19:07:26,077:INFO:Copying training dataset
2023-02-02 19:07:26,083:INFO:Defining folds
2023-02-02 19:07:26,083:INFO:Declaring metric variables
2023-02-02 19:07:26,087:INFO:Importing untrained model
2023-02-02 19:07:26,093:INFO:Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:07:26,103:INFO:Starting cross validation
2023-02-02 19:07:26,104:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:26,153:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:07:26,215:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:07:26,220:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:07:26,226:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:07:26,226:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:07:26,232:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:07:26,432:INFO:Calculating mean and std
2023-02-02 19:07:26,434:INFO:Creating metrics dataframe
2023-02-02 19:07:26,438:INFO:Uploading results into container
2023-02-02 19:07:26,438:INFO:Uploading model into container now
2023-02-02 19:07:26,438:INFO:_master_model_container: 47
2023-02-02 19:07:26,438:INFO:_display_container: 4
2023-02-02 19:07:26,440:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=OrthogonalMatchingPursuit(), sp=7,
                    window_length=7)
2023-02-02 19:07:26,441:INFO:create_model() successfully completed......................................
2023-02-02 19:07:26,579:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:26,579:INFO:Creating metrics dataframe
2023-02-02 19:07:26,598:INFO:Initializing K Neighbors w/ Cond. Deseasonalize & Detrending
2023-02-02 19:07:26,599:INFO:Total runtime is 0.28946493864059447 minutes
2023-02-02 19:07:26,603:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:26,603:INFO:Initializing create_model()
2023-02-02 19:07:26,603:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=knn_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12642C880>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:26,603:INFO:Checking exceptions
2023-02-02 19:07:26,603:INFO:Importing libraries
2023-02-02 19:07:26,603:INFO:Copying training dataset
2023-02-02 19:07:26,609:INFO:Defining folds
2023-02-02 19:07:26,609:INFO:Declaring metric variables
2023-02-02 19:07:26,614:INFO:Importing untrained model
2023-02-02 19:07:26,619:INFO:K Neighbors w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:07:26,636:INFO:Starting cross validation
2023-02-02 19:07:26,638:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:26,688:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:07:27,098:INFO:Calculating mean and std
2023-02-02 19:07:27,102:INFO:Creating metrics dataframe
2023-02-02 19:07:27,108:INFO:Uploading results into container
2023-02-02 19:07:27,108:INFO:Uploading model into container now
2023-02-02 19:07:27,109:INFO:_master_model_container: 48
2023-02-02 19:07:27,109:INFO:_display_container: 4
2023-02-02 19:07:27,111:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=KNeighborsRegressor(n_jobs=-1), sp=7,
                    window_length=7)
2023-02-02 19:07:27,111:INFO:create_model() successfully completed......................................
2023-02-02 19:07:27,251:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:27,251:INFO:Creating metrics dataframe
2023-02-02 19:07:27,269:INFO:Initializing Decision Tree w/ Cond. Deseasonalize & Detrending
2023-02-02 19:07:27,269:INFO:Total runtime is 0.30062474409739176 minutes
2023-02-02 19:07:27,273:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:27,273:INFO:Initializing create_model()
2023-02-02 19:07:27,273:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=dt_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12642C880>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:27,273:INFO:Checking exceptions
2023-02-02 19:07:27,273:INFO:Importing libraries
2023-02-02 19:07:27,274:INFO:Copying training dataset
2023-02-02 19:07:27,278:INFO:Defining folds
2023-02-02 19:07:27,279:INFO:Declaring metric variables
2023-02-02 19:07:27,283:INFO:Importing untrained model
2023-02-02 19:07:27,287:INFO:Decision Tree w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:07:27,298:INFO:Starting cross validation
2023-02-02 19:07:27,299:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:27,356:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:07:27,630:INFO:Calculating mean and std
2023-02-02 19:07:27,631:INFO:Creating metrics dataframe
2023-02-02 19:07:27,635:INFO:Uploading results into container
2023-02-02 19:07:27,635:INFO:Uploading model into container now
2023-02-02 19:07:27,635:INFO:_master_model_container: 49
2023-02-02 19:07:27,635:INFO:_display_container: 4
2023-02-02 19:07:27,637:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=DecisionTreeRegressor(random_state=6043), sp=7,
                    window_length=7)
2023-02-02 19:07:27,638:INFO:create_model() successfully completed......................................
2023-02-02 19:07:27,778:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:27,778:INFO:Creating metrics dataframe
2023-02-02 19:07:27,796:INFO:Initializing Random Forest w/ Cond. Deseasonalize & Detrending
2023-02-02 19:07:27,797:INFO:Total runtime is 0.30941929419835407 minutes
2023-02-02 19:07:27,800:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:27,800:INFO:Initializing create_model()
2023-02-02 19:07:27,801:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=rf_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12642C880>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:27,801:INFO:Checking exceptions
2023-02-02 19:07:27,801:INFO:Importing libraries
2023-02-02 19:07:27,801:INFO:Copying training dataset
2023-02-02 19:07:27,806:INFO:Defining folds
2023-02-02 19:07:27,806:INFO:Declaring metric variables
2023-02-02 19:07:27,810:INFO:Importing untrained model
2023-02-02 19:07:27,815:INFO:Random Forest w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:07:27,825:INFO:Starting cross validation
2023-02-02 19:07:27,826:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:27,890:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:07:28,483:INFO:Calculating mean and std
2023-02-02 19:07:28,483:INFO:Creating metrics dataframe
2023-02-02 19:07:28,487:INFO:Uploading results into container
2023-02-02 19:07:28,487:INFO:Uploading model into container now
2023-02-02 19:07:28,488:INFO:_master_model_container: 50
2023-02-02 19:07:28,488:INFO:_display_container: 4
2023-02-02 19:07:28,491:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=RandomForestRegressor(n_jobs=-1,
                                                    random_state=6043),
                    sp=7, window_length=7)
2023-02-02 19:07:28,491:INFO:create_model() successfully completed......................................
2023-02-02 19:07:28,628:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:28,628:INFO:Creating metrics dataframe
2023-02-02 19:07:28,648:INFO:Initializing Extra Trees w/ Cond. Deseasonalize & Detrending
2023-02-02 19:07:28,648:INFO:Total runtime is 0.32361371914545695 minutes
2023-02-02 19:07:28,652:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:28,652:INFO:Initializing create_model()
2023-02-02 19:07:28,652:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=et_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12642C880>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:28,652:INFO:Checking exceptions
2023-02-02 19:07:28,652:INFO:Importing libraries
2023-02-02 19:07:28,652:INFO:Copying training dataset
2023-02-02 19:07:28,657:INFO:Defining folds
2023-02-02 19:07:28,657:INFO:Declaring metric variables
2023-02-02 19:07:28,662:INFO:Importing untrained model
2023-02-02 19:07:28,667:INFO:Extra Trees w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:07:28,677:INFO:Starting cross validation
2023-02-02 19:07:28,678:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:28,729:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:07:29,292:INFO:Calculating mean and std
2023-02-02 19:07:29,292:INFO:Creating metrics dataframe
2023-02-02 19:07:29,297:INFO:Uploading results into container
2023-02-02 19:07:29,297:INFO:Uploading model into container now
2023-02-02 19:07:29,297:INFO:_master_model_container: 51
2023-02-02 19:07:29,297:INFO:_display_container: 4
2023-02-02 19:07:29,299:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(n_jobs=-1, random_state=6043),
                    sp=7, window_length=7)
2023-02-02 19:07:29,299:INFO:create_model() successfully completed......................................
2023-02-02 19:07:29,438:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:29,438:INFO:Creating metrics dataframe
2023-02-02 19:07:29,457:INFO:Initializing Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-02-02 19:07:29,457:INFO:Total runtime is 0.33708991209665934 minutes
2023-02-02 19:07:29,461:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:29,461:INFO:Initializing create_model()
2023-02-02 19:07:29,461:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=gbr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12642C880>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:29,462:INFO:Checking exceptions
2023-02-02 19:07:29,462:INFO:Importing libraries
2023-02-02 19:07:29,462:INFO:Copying training dataset
2023-02-02 19:07:29,467:INFO:Defining folds
2023-02-02 19:07:29,467:INFO:Declaring metric variables
2023-02-02 19:07:29,470:INFO:Importing untrained model
2023-02-02 19:07:29,475:INFO:Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:07:29,484:INFO:Starting cross validation
2023-02-02 19:07:29,487:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:29,548:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:07:29,868:INFO:Calculating mean and std
2023-02-02 19:07:29,868:INFO:Creating metrics dataframe
2023-02-02 19:07:29,873:INFO:Uploading results into container
2023-02-02 19:07:29,873:INFO:Uploading model into container now
2023-02-02 19:07:29,873:INFO:_master_model_container: 52
2023-02-02 19:07:29,873:INFO:_display_container: 4
2023-02-02 19:07:29,876:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=GradientBoostingRegressor(random_state=6043),
                    sp=7, window_length=7)
2023-02-02 19:07:29,876:INFO:create_model() successfully completed......................................
2023-02-02 19:07:30,021:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:30,021:INFO:Creating metrics dataframe
2023-02-02 19:07:30,040:INFO:Initializing AdaBoost w/ Cond. Deseasonalize & Detrending
2023-02-02 19:07:30,040:INFO:Total runtime is 0.346808389822642 minutes
2023-02-02 19:07:30,044:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:30,044:INFO:Initializing create_model()
2023-02-02 19:07:30,044:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=ada_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12642C880>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:30,044:INFO:Checking exceptions
2023-02-02 19:07:30,044:INFO:Importing libraries
2023-02-02 19:07:30,045:INFO:Copying training dataset
2023-02-02 19:07:30,050:INFO:Defining folds
2023-02-02 19:07:30,050:INFO:Declaring metric variables
2023-02-02 19:07:30,054:INFO:Importing untrained model
2023-02-02 19:07:30,060:INFO:AdaBoost w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:07:30,069:INFO:Starting cross validation
2023-02-02 19:07:30,071:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:30,131:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:07:30,530:INFO:Calculating mean and std
2023-02-02 19:07:30,531:INFO:Creating metrics dataframe
2023-02-02 19:07:30,535:INFO:Uploading results into container
2023-02-02 19:07:30,535:INFO:Uploading model into container now
2023-02-02 19:07:30,535:INFO:_master_model_container: 53
2023-02-02 19:07:30,535:INFO:_display_container: 4
2023-02-02 19:07:30,537:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=AdaBoostRegressor(random_state=6043), sp=7,
                    window_length=7)
2023-02-02 19:07:30,537:INFO:create_model() successfully completed......................................
2023-02-02 19:07:30,675:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:30,675:INFO:Creating metrics dataframe
2023-02-02 19:07:30,694:INFO:Initializing Light Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-02-02 19:07:30,694:INFO:Total runtime is 0.3577183445294698 minutes
2023-02-02 19:07:30,698:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:30,699:INFO:Initializing create_model()
2023-02-02 19:07:30,699:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=lightgbm_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12642C880>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:30,699:INFO:Checking exceptions
2023-02-02 19:07:30,699:INFO:Importing libraries
2023-02-02 19:07:30,699:INFO:Copying training dataset
2023-02-02 19:07:30,704:INFO:Defining folds
2023-02-02 19:07:30,704:INFO:Declaring metric variables
2023-02-02 19:07:30,708:INFO:Importing untrained model
2023-02-02 19:07:30,713:INFO:Light Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:07:30,722:INFO:Starting cross validation
2023-02-02 19:07:30,724:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:30,824:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:07:31,067:INFO:Calculating mean and std
2023-02-02 19:07:31,067:INFO:Creating metrics dataframe
2023-02-02 19:07:31,072:INFO:Uploading results into container
2023-02-02 19:07:31,072:INFO:Uploading model into container now
2023-02-02 19:07:31,072:INFO:_master_model_container: 54
2023-02-02 19:07:31,072:INFO:_display_container: 4
2023-02-02 19:07:31,075:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LGBMRegressor(random_state=6043), sp=7,
                    window_length=7)
2023-02-02 19:07:31,075:INFO:create_model() successfully completed......................................
2023-02-02 19:07:31,214:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:31,215:INFO:Creating metrics dataframe
2023-02-02 19:07:31,247:INFO:Initializing create_model()
2023-02-02 19:07:31,247:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=RandomForestRegressor(n_jobs=-1,
                                                    random_state=6043),
                    sp=7, window_length=7), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:31,247:INFO:Checking exceptions
2023-02-02 19:07:31,249:INFO:Importing libraries
2023-02-02 19:07:31,249:INFO:Copying training dataset
2023-02-02 19:07:31,253:INFO:Defining folds
2023-02-02 19:07:31,253:INFO:Declaring metric variables
2023-02-02 19:07:31,254:INFO:Importing untrained model
2023-02-02 19:07:31,254:INFO:Declaring custom model
2023-02-02 19:07:31,255:INFO:RandomForestRegressor Imported successfully
2023-02-02 19:07:31,256:INFO:Cross validation set to False
2023-02-02 19:07:31,256:INFO:Fitting Model
2023-02-02 19:07:31,468:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=RandomForestRegressor(n_jobs=-1,
                                                    random_state=6043),
                    sp=7, window_length=7)
2023-02-02 19:07:31,469:INFO:create_model() successfully completed......................................
2023-02-02 19:07:31,649:INFO:_master_model_container: 54
2023-02-02 19:07:31,650:INFO:_display_container: 4
2023-02-02 19:07:31,653:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=RandomForestRegressor(n_jobs=-1,
                                                    random_state=6043),
                    sp=7, window_length=7)
2023-02-02 19:07:31,653:INFO:compare_models() successfully completed......................................
2023-02-02 19:07:56,195:INFO:Initializing compare_models()
2023-02-02 19:07:56,195:INFO:compare_models(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, include=None, fold=None, round=4, cross_validation=True, sort=MASE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MASE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.time_series.forecasting.oop.TSForecastingExperiment'>}, exclude=None)
2023-02-02 19:07:56,195:INFO:Checking exceptions
2023-02-02 19:07:56,198:INFO:Preparing display monitor
2023-02-02 19:07:56,233:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:709: UserWarning: Unsupported estimator `ensemble_forecaster` for method `compare_models()`, removing from model_library
  warnings.warn(

2023-02-02 19:07:56,233:INFO:Initializing Naive Forecaster
2023-02-02 19:07:56,234:INFO:Total runtime is 1.6657511393229165e-05 minutes
2023-02-02 19:07:56,238:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:56,239:INFO:Initializing create_model()
2023-02-02 19:07:56,239:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=naive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:56,239:INFO:Checking exceptions
2023-02-02 19:07:56,239:INFO:Importing libraries
2023-02-02 19:07:56,239:INFO:Copying training dataset
2023-02-02 19:07:56,244:INFO:Defining folds
2023-02-02 19:07:56,245:INFO:Declaring metric variables
2023-02-02 19:07:56,250:INFO:Importing untrained model
2023-02-02 19:07:56,254:INFO:Naive Forecaster Imported successfully
2023-02-02 19:07:56,263:INFO:Starting cross validation
2023-02-02 19:07:56,264:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:56,329:INFO:Calculating mean and std
2023-02-02 19:07:56,330:INFO:Creating metrics dataframe
2023-02-02 19:07:56,334:INFO:Uploading results into container
2023-02-02 19:07:56,334:INFO:Uploading model into container now
2023-02-02 19:07:56,335:INFO:_master_model_container: 55
2023-02-02 19:07:56,335:INFO:_display_container: 5
2023-02-02 19:07:56,335:INFO:NaiveForecaster()
2023-02-02 19:07:56,335:INFO:create_model() successfully completed......................................
2023-02-02 19:07:56,473:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:56,474:INFO:Creating metrics dataframe
2023-02-02 19:07:56,484:INFO:Initializing Grand Means Forecaster
2023-02-02 19:07:56,484:INFO:Total runtime is 0.0041807770729064934 minutes
2023-02-02 19:07:56,488:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:56,488:INFO:Initializing create_model()
2023-02-02 19:07:56,488:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=grand_means, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:56,489:INFO:Checking exceptions
2023-02-02 19:07:56,489:INFO:Importing libraries
2023-02-02 19:07:56,489:INFO:Copying training dataset
2023-02-02 19:07:56,493:INFO:Defining folds
2023-02-02 19:07:56,494:INFO:Declaring metric variables
2023-02-02 19:07:56,498:INFO:Importing untrained model
2023-02-02 19:07:56,502:INFO:Grand Means Forecaster Imported successfully
2023-02-02 19:07:56,511:INFO:Starting cross validation
2023-02-02 19:07:56,512:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:56,580:INFO:Calculating mean and std
2023-02-02 19:07:56,580:INFO:Creating metrics dataframe
2023-02-02 19:07:56,584:INFO:Uploading results into container
2023-02-02 19:07:56,584:INFO:Uploading model into container now
2023-02-02 19:07:56,585:INFO:_master_model_container: 56
2023-02-02 19:07:56,585:INFO:_display_container: 5
2023-02-02 19:07:56,585:INFO:NaiveForecaster(strategy='mean')
2023-02-02 19:07:56,585:INFO:create_model() successfully completed......................................
2023-02-02 19:07:56,723:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:56,723:INFO:Creating metrics dataframe
2023-02-02 19:07:56,735:INFO:Initializing Seasonal Naive Forecaster
2023-02-02 19:07:56,735:INFO:Total runtime is 0.008361609776814778 minutes
2023-02-02 19:07:56,739:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:56,739:INFO:Initializing create_model()
2023-02-02 19:07:56,740:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=snaive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:56,740:INFO:Checking exceptions
2023-02-02 19:07:56,740:INFO:Importing libraries
2023-02-02 19:07:56,740:INFO:Copying training dataset
2023-02-02 19:07:56,745:INFO:Defining folds
2023-02-02 19:07:56,745:INFO:Declaring metric variables
2023-02-02 19:07:56,748:INFO:Importing untrained model
2023-02-02 19:07:56,753:INFO:Seasonal Naive Forecaster Imported successfully
2023-02-02 19:07:56,764:INFO:Starting cross validation
2023-02-02 19:07:56,765:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:56,833:INFO:Calculating mean and std
2023-02-02 19:07:56,833:INFO:Creating metrics dataframe
2023-02-02 19:07:56,838:INFO:Uploading results into container
2023-02-02 19:07:56,838:INFO:Uploading model into container now
2023-02-02 19:07:56,838:INFO:_master_model_container: 57
2023-02-02 19:07:56,838:INFO:_display_container: 5
2023-02-02 19:07:56,839:INFO:NaiveForecaster(sp=7)
2023-02-02 19:07:56,839:INFO:create_model() successfully completed......................................
2023-02-02 19:07:56,985:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:56,985:INFO:Creating metrics dataframe
2023-02-02 19:07:56,998:INFO:Initializing Polynomial Trend Forecaster
2023-02-02 19:07:56,998:INFO:Total runtime is 0.012753744920094807 minutes
2023-02-02 19:07:57,002:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:57,003:INFO:Initializing create_model()
2023-02-02 19:07:57,003:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=polytrend, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:57,003:INFO:Checking exceptions
2023-02-02 19:07:57,003:INFO:Importing libraries
2023-02-02 19:07:57,003:INFO:Copying training dataset
2023-02-02 19:07:57,008:INFO:Defining folds
2023-02-02 19:07:57,008:INFO:Declaring metric variables
2023-02-02 19:07:57,012:INFO:Importing untrained model
2023-02-02 19:07:57,016:INFO:Polynomial Trend Forecaster Imported successfully
2023-02-02 19:07:57,025:INFO:Starting cross validation
2023-02-02 19:07:57,026:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:57,081:INFO:Calculating mean and std
2023-02-02 19:07:57,082:INFO:Creating metrics dataframe
2023-02-02 19:07:57,086:INFO:Uploading results into container
2023-02-02 19:07:57,087:INFO:Uploading model into container now
2023-02-02 19:07:57,087:INFO:_master_model_container: 58
2023-02-02 19:07:57,087:INFO:_display_container: 5
2023-02-02 19:07:57,087:INFO:PolynomialTrendForecaster()
2023-02-02 19:07:57,087:INFO:create_model() successfully completed......................................
2023-02-02 19:07:57,240:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:57,240:INFO:Creating metrics dataframe
2023-02-02 19:07:57,254:INFO:Initializing ARIMA
2023-02-02 19:07:57,254:INFO:Total runtime is 0.017016108830769858 minutes
2023-02-02 19:07:57,258:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:57,258:INFO:Initializing create_model()
2023-02-02 19:07:57,259:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:57,259:INFO:Checking exceptions
2023-02-02 19:07:57,259:INFO:Importing libraries
2023-02-02 19:07:57,259:INFO:Copying training dataset
2023-02-02 19:07:57,264:INFO:Defining folds
2023-02-02 19:07:57,265:INFO:Declaring metric variables
2023-02-02 19:07:57,271:INFO:Importing untrained model
2023-02-02 19:07:57,276:INFO:ARIMA Imported successfully
2023-02-02 19:07:57,285:INFO:Starting cross validation
2023-02-02 19:07:57,287:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:57,508:INFO:Calculating mean and std
2023-02-02 19:07:57,509:INFO:Creating metrics dataframe
2023-02-02 19:07:57,514:INFO:Uploading results into container
2023-02-02 19:07:57,514:INFO:Uploading model into container now
2023-02-02 19:07:57,515:INFO:_master_model_container: 59
2023-02-02 19:07:57,515:INFO:_display_container: 5
2023-02-02 19:07:57,515:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:07:57,515:INFO:create_model() successfully completed......................................
2023-02-02 19:07:57,657:INFO:SubProcess create_model() end ==================================
2023-02-02 19:07:57,657:INFO:Creating metrics dataframe
2023-02-02 19:07:57,670:INFO:Initializing Auto ARIMA
2023-02-02 19:07:57,670:INFO:Total runtime is 0.023945156733194986 minutes
2023-02-02 19:07:57,674:INFO:SubProcess create_model() called ==================================
2023-02-02 19:07:57,674:INFO:Initializing create_model()
2023-02-02 19:07:57,674:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=auto_arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:07:57,674:INFO:Checking exceptions
2023-02-02 19:07:57,674:INFO:Importing libraries
2023-02-02 19:07:57,675:INFO:Copying training dataset
2023-02-02 19:07:57,680:INFO:Defining folds
2023-02-02 19:07:57,680:INFO:Declaring metric variables
2023-02-02 19:07:57,685:INFO:Importing untrained model
2023-02-02 19:07:57,691:INFO:Auto ARIMA Imported successfully
2023-02-02 19:07:57,702:INFO:Starting cross validation
2023-02-02 19:07:57,704:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:07:57,778:ERROR:Fit failed on ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                AutoARIMA(random_state=6043,
                                                                          sp=7,
                                                                          suppress_warnings=True))]))])
2023-02-02 19:07:57,778:ERROR:zero-size array to reduction operation maximum which has no identity
2023-02-02 19:08:01,279:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pmdarima\arima\_auto_solvers.py:522: ModelFitWarning: Error fitting  ARIMA(2,0,1)(2,1,0)[7] intercept (if you do not want to see these warnings, run with error_action="ignore").
  warnings.warn(warning_str, ModelFitWarning)

2023-02-02 19:08:03,172:INFO:Calculating mean and std
2023-02-02 19:08:03,173:INFO:Creating metrics dataframe
2023-02-02 19:08:03,177:INFO:Uploading results into container
2023-02-02 19:08:03,177:INFO:Uploading model into container now
2023-02-02 19:08:03,178:INFO:_master_model_container: 60
2023-02-02 19:08:03,178:INFO:_display_container: 5
2023-02-02 19:08:03,179:INFO:AutoARIMA(random_state=6043, sp=7, suppress_warnings=True)
2023-02-02 19:08:03,179:INFO:create_model() successfully completed......................................
2023-02-02 19:08:03,319:WARNING:create_model() for AutoARIMA(random_state=6043, sp=7, suppress_warnings=True) raised an exception or returned all 0.0, trying without fit_kwargs:
2023-02-02 19:08:03,320:WARNING:Traceback (most recent call last):
  File "C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 795, in compare_models
    assert (
AssertionError

2023-02-02 19:08:03,320:INFO:Initializing create_model()
2023-02-02 19:08:03,320:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=auto_arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:03,320:INFO:Checking exceptions
2023-02-02 19:08:03,320:INFO:Importing libraries
2023-02-02 19:08:03,320:INFO:Copying training dataset
2023-02-02 19:08:03,326:INFO:Defining folds
2023-02-02 19:08:03,326:INFO:Declaring metric variables
2023-02-02 19:08:03,331:INFO:Importing untrained model
2023-02-02 19:08:03,336:INFO:Auto ARIMA Imported successfully
2023-02-02 19:08:03,344:INFO:Starting cross validation
2023-02-02 19:08:03,345:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:03,429:ERROR:Fit failed on ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                AutoARIMA(random_state=6043,
                                                                          sp=7,
                                                                          suppress_warnings=True))]))])
2023-02-02 19:08:03,429:ERROR:zero-size array to reduction operation maximum which has no identity
2023-02-02 19:08:06,891:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pmdarima\arima\_auto_solvers.py:522: ModelFitWarning: Error fitting  ARIMA(2,0,1)(2,1,0)[7] intercept (if you do not want to see these warnings, run with error_action="ignore").
  warnings.warn(warning_str, ModelFitWarning)

2023-02-02 19:08:08,721:INFO:Calculating mean and std
2023-02-02 19:08:08,722:INFO:Creating metrics dataframe
2023-02-02 19:08:08,726:INFO:Uploading results into container
2023-02-02 19:08:08,726:INFO:Uploading model into container now
2023-02-02 19:08:08,726:INFO:_master_model_container: 61
2023-02-02 19:08:08,726:INFO:_display_container: 5
2023-02-02 19:08:08,727:INFO:AutoARIMA(random_state=6043, sp=7, suppress_warnings=True)
2023-02-02 19:08:08,727:INFO:create_model() successfully completed......................................
2023-02-02 19:08:08,867:ERROR:create_model() for AutoARIMA(random_state=6043, sp=7, suppress_warnings=True) raised an exception or returned all 0.0:
2023-02-02 19:08:08,868:ERROR:Traceback (most recent call last):
  File "C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 795, in compare_models
    assert (
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 811, in compare_models
    assert (
AssertionError

2023-02-02 19:08:08,868:INFO:Initializing Exponential Smoothing
2023-02-02 19:08:08,868:INFO:Total runtime is 0.21057920853296913 minutes
2023-02-02 19:08:08,874:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:08,874:INFO:Initializing create_model()
2023-02-02 19:08:08,874:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=exp_smooth, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:08,875:INFO:Checking exceptions
2023-02-02 19:08:08,875:INFO:Importing libraries
2023-02-02 19:08:08,875:INFO:Copying training dataset
2023-02-02 19:08:08,881:INFO:Defining folds
2023-02-02 19:08:08,881:INFO:Declaring metric variables
2023-02-02 19:08:08,885:INFO:Importing untrained model
2023-02-02 19:08:08,890:INFO:Exponential Smoothing Imported successfully
2023-02-02 19:08:08,899:INFO:Starting cross validation
2023-02-02 19:08:08,901:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:09,257:INFO:Calculating mean and std
2023-02-02 19:08:09,258:INFO:Creating metrics dataframe
2023-02-02 19:08:09,263:INFO:Uploading results into container
2023-02-02 19:08:09,263:INFO:Uploading model into container now
2023-02-02 19:08:09,263:INFO:_master_model_container: 62
2023-02-02 19:08:09,263:INFO:_display_container: 5
2023-02-02 19:08:09,264:INFO:ExponentialSmoothing(seasonal='mul', sp=7, trend='add')
2023-02-02 19:08:09,264:INFO:create_model() successfully completed......................................
2023-02-02 19:08:09,402:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:09,402:INFO:Creating metrics dataframe
2023-02-02 19:08:09,418:INFO:Initializing Croston
2023-02-02 19:08:09,418:INFO:Total runtime is 0.21975361903508503 minutes
2023-02-02 19:08:09,422:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:09,422:INFO:Initializing create_model()
2023-02-02 19:08:09,423:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=croston, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:09,423:INFO:Checking exceptions
2023-02-02 19:08:09,423:INFO:Importing libraries
2023-02-02 19:08:09,423:INFO:Copying training dataset
2023-02-02 19:08:09,428:INFO:Defining folds
2023-02-02 19:08:09,428:INFO:Declaring metric variables
2023-02-02 19:08:09,433:INFO:Importing untrained model
2023-02-02 19:08:09,438:INFO:Croston Imported successfully
2023-02-02 19:08:09,448:INFO:Starting cross validation
2023-02-02 19:08:09,449:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:09,497:INFO:Calculating mean and std
2023-02-02 19:08:09,498:INFO:Creating metrics dataframe
2023-02-02 19:08:09,502:INFO:Uploading results into container
2023-02-02 19:08:09,502:INFO:Uploading model into container now
2023-02-02 19:08:09,503:INFO:_master_model_container: 63
2023-02-02 19:08:09,503:INFO:_display_container: 5
2023-02-02 19:08:09,503:INFO:Croston()
2023-02-02 19:08:09,503:INFO:create_model() successfully completed......................................
2023-02-02 19:08:09,644:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:09,645:INFO:Creating metrics dataframe
2023-02-02 19:08:09,657:INFO:Initializing ETS
2023-02-02 19:08:09,658:INFO:Total runtime is 0.22375120719273883 minutes
2023-02-02 19:08:09,662:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:09,662:INFO:Initializing create_model()
2023-02-02 19:08:09,662:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=ets, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:09,662:INFO:Checking exceptions
2023-02-02 19:08:09,662:INFO:Importing libraries
2023-02-02 19:08:09,662:INFO:Copying training dataset
2023-02-02 19:08:09,668:INFO:Defining folds
2023-02-02 19:08:09,668:INFO:Declaring metric variables
2023-02-02 19:08:09,673:INFO:Importing untrained model
2023-02-02 19:08:09,678:INFO:ETS Imported successfully
2023-02-02 19:08:09,687:INFO:Starting cross validation
2023-02-02 19:08:09,689:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:09,954:INFO:Calculating mean and std
2023-02-02 19:08:09,955:INFO:Creating metrics dataframe
2023-02-02 19:08:09,959:INFO:Uploading results into container
2023-02-02 19:08:09,959:INFO:Uploading model into container now
2023-02-02 19:08:09,959:INFO:_master_model_container: 64
2023-02-02 19:08:09,960:INFO:_display_container: 5
2023-02-02 19:08:09,960:INFO:AutoETS(seasonal='mul', sp=7, trend='add')
2023-02-02 19:08:09,960:INFO:create_model() successfully completed......................................
2023-02-02 19:08:10,099:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:10,099:INFO:Creating metrics dataframe
2023-02-02 19:08:10,113:INFO:Initializing Theta Forecaster
2023-02-02 19:08:10,113:INFO:Total runtime is 0.2313320755958557 minutes
2023-02-02 19:08:10,118:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:10,119:INFO:Initializing create_model()
2023-02-02 19:08:10,119:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=theta, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:10,119:INFO:Checking exceptions
2023-02-02 19:08:10,119:INFO:Importing libraries
2023-02-02 19:08:10,119:INFO:Copying training dataset
2023-02-02 19:08:10,125:INFO:Defining folds
2023-02-02 19:08:10,125:INFO:Declaring metric variables
2023-02-02 19:08:10,129:INFO:Importing untrained model
2023-02-02 19:08:10,134:INFO:Theta Forecaster Imported successfully
2023-02-02 19:08:10,142:INFO:Starting cross validation
2023-02-02 19:08:10,143:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:10,244:INFO:Calculating mean and std
2023-02-02 19:08:10,246:INFO:Creating metrics dataframe
2023-02-02 19:08:10,250:INFO:Uploading results into container
2023-02-02 19:08:10,250:INFO:Uploading model into container now
2023-02-02 19:08:10,250:INFO:_master_model_container: 65
2023-02-02 19:08:10,250:INFO:_display_container: 5
2023-02-02 19:08:10,251:INFO:ThetaForecaster(sp=7)
2023-02-02 19:08:10,251:INFO:create_model() successfully completed......................................
2023-02-02 19:08:10,388:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:10,388:INFO:Creating metrics dataframe
2023-02-02 19:08:10,403:INFO:Initializing Linear w/ Cond. Deseasonalize & Detrending
2023-02-02 19:08:10,403:INFO:Total runtime is 0.23616241216659545 minutes
2023-02-02 19:08:10,407:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:10,408:INFO:Initializing create_model()
2023-02-02 19:08:10,408:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=lr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:10,408:INFO:Checking exceptions
2023-02-02 19:08:10,408:INFO:Importing libraries
2023-02-02 19:08:10,408:INFO:Copying training dataset
2023-02-02 19:08:10,413:INFO:Defining folds
2023-02-02 19:08:10,413:INFO:Declaring metric variables
2023-02-02 19:08:10,418:INFO:Importing untrained model
2023-02-02 19:08:10,423:INFO:Linear w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:08:10,432:INFO:Starting cross validation
2023-02-02 19:08:10,434:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:10,482:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:08:10,779:INFO:Calculating mean and std
2023-02-02 19:08:10,780:INFO:Creating metrics dataframe
2023-02-02 19:08:10,784:INFO:Uploading results into container
2023-02-02 19:08:10,785:INFO:Uploading model into container now
2023-02-02 19:08:10,785:INFO:_master_model_container: 66
2023-02-02 19:08:10,785:INFO:_display_container: 5
2023-02-02 19:08:10,787:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LinearRegression(n_jobs=-1), sp=7,
                    window_length=7)
2023-02-02 19:08:10,787:INFO:create_model() successfully completed......................................
2023-02-02 19:08:10,927:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:10,927:INFO:Creating metrics dataframe
2023-02-02 19:08:10,943:INFO:Initializing Elastic Net w/ Cond. Deseasonalize & Detrending
2023-02-02 19:08:10,943:INFO:Total runtime is 0.2451735496520996 minutes
2023-02-02 19:08:10,947:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:10,947:INFO:Initializing create_model()
2023-02-02 19:08:10,947:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=en_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:10,948:INFO:Checking exceptions
2023-02-02 19:08:10,948:INFO:Importing libraries
2023-02-02 19:08:10,948:INFO:Copying training dataset
2023-02-02 19:08:10,953:INFO:Defining folds
2023-02-02 19:08:10,953:INFO:Declaring metric variables
2023-02-02 19:08:10,958:INFO:Importing untrained model
2023-02-02 19:08:10,964:INFO:Elastic Net w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:08:10,974:INFO:Starting cross validation
2023-02-02 19:08:10,976:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:11,026:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:08:11,329:INFO:Calculating mean and std
2023-02-02 19:08:11,330:INFO:Creating metrics dataframe
2023-02-02 19:08:11,334:INFO:Uploading results into container
2023-02-02 19:08:11,334:INFO:Uploading model into container now
2023-02-02 19:08:11,335:INFO:_master_model_container: 67
2023-02-02 19:08:11,335:INFO:_display_container: 5
2023-02-02 19:08:11,337:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=ElasticNet(random_state=6043), sp=7,
                    window_length=7)
2023-02-02 19:08:11,337:INFO:create_model() successfully completed......................................
2023-02-02 19:08:11,476:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:11,476:INFO:Creating metrics dataframe
2023-02-02 19:08:11,493:INFO:Initializing Ridge w/ Cond. Deseasonalize & Detrending
2023-02-02 19:08:11,493:INFO:Total runtime is 0.25433456897735596 minutes
2023-02-02 19:08:11,497:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:11,497:INFO:Initializing create_model()
2023-02-02 19:08:11,498:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=ridge_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:11,498:INFO:Checking exceptions
2023-02-02 19:08:11,498:INFO:Importing libraries
2023-02-02 19:08:11,498:INFO:Copying training dataset
2023-02-02 19:08:11,503:INFO:Defining folds
2023-02-02 19:08:11,503:INFO:Declaring metric variables
2023-02-02 19:08:11,508:INFO:Importing untrained model
2023-02-02 19:08:11,514:INFO:Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:08:11,523:INFO:Starting cross validation
2023-02-02 19:08:11,524:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:11,585:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:08:11,840:INFO:Calculating mean and std
2023-02-02 19:08:11,841:INFO:Creating metrics dataframe
2023-02-02 19:08:11,848:INFO:Uploading results into container
2023-02-02 19:08:11,848:INFO:Uploading model into container now
2023-02-02 19:08:11,849:INFO:_master_model_container: 68
2023-02-02 19:08:11,849:INFO:_display_container: 5
2023-02-02 19:08:11,852:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Ridge(random_state=6043), sp=7, window_length=7)
2023-02-02 19:08:11,852:INFO:create_model() successfully completed......................................
2023-02-02 19:08:11,992:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:11,992:INFO:Creating metrics dataframe
2023-02-02 19:08:12,007:INFO:Initializing Lasso w/ Cond. Deseasonalize & Detrending
2023-02-02 19:08:12,007:INFO:Total runtime is 0.26290873686472577 minutes
2023-02-02 19:08:12,011:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:12,012:INFO:Initializing create_model()
2023-02-02 19:08:12,012:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=lasso_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:12,012:INFO:Checking exceptions
2023-02-02 19:08:12,012:INFO:Importing libraries
2023-02-02 19:08:12,012:INFO:Copying training dataset
2023-02-02 19:08:12,017:INFO:Defining folds
2023-02-02 19:08:12,018:INFO:Declaring metric variables
2023-02-02 19:08:12,023:INFO:Importing untrained model
2023-02-02 19:08:12,030:INFO:Lasso w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:08:12,041:INFO:Starting cross validation
2023-02-02 19:08:12,042:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:12,095:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:08:12,374:INFO:Calculating mean and std
2023-02-02 19:08:12,375:INFO:Creating metrics dataframe
2023-02-02 19:08:12,379:INFO:Uploading results into container
2023-02-02 19:08:12,379:INFO:Uploading model into container now
2023-02-02 19:08:12,379:INFO:_master_model_container: 69
2023-02-02 19:08:12,379:INFO:_display_container: 5
2023-02-02 19:08:12,381:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Lasso(random_state=6043), sp=7, window_length=7)
2023-02-02 19:08:12,382:INFO:create_model() successfully completed......................................
2023-02-02 19:08:12,520:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:12,521:INFO:Creating metrics dataframe
2023-02-02 19:08:12,539:INFO:Initializing Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-02-02 19:08:12,539:INFO:Total runtime is 0.27177401781082156 minutes
2023-02-02 19:08:12,544:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:12,544:INFO:Initializing create_model()
2023-02-02 19:08:12,544:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=lar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:12,544:INFO:Checking exceptions
2023-02-02 19:08:12,544:INFO:Importing libraries
2023-02-02 19:08:12,544:INFO:Copying training dataset
2023-02-02 19:08:12,550:INFO:Defining folds
2023-02-02 19:08:12,550:INFO:Declaring metric variables
2023-02-02 19:08:12,554:INFO:Importing untrained model
2023-02-02 19:08:12,559:INFO:Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:08:12,568:INFO:Starting cross validation
2023-02-02 19:08:12,570:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:12,620:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:08:12,669:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:08:12,671:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:08:12,676:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:08:12,713:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:08:12,905:INFO:Calculating mean and std
2023-02-02 19:08:12,906:INFO:Creating metrics dataframe
2023-02-02 19:08:12,912:INFO:Uploading results into container
2023-02-02 19:08:12,912:INFO:Uploading model into container now
2023-02-02 19:08:12,912:INFO:_master_model_container: 70
2023-02-02 19:08:12,913:INFO:_display_container: 5
2023-02-02 19:08:12,915:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Lars(random_state=6043), sp=7, window_length=7)
2023-02-02 19:08:12,915:INFO:create_model() successfully completed......................................
2023-02-02 19:08:13,054:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:13,054:INFO:Creating metrics dataframe
2023-02-02 19:08:13,070:INFO:Initializing Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-02-02 19:08:13,070:INFO:Total runtime is 0.28061859210332235 minutes
2023-02-02 19:08:13,075:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:13,075:INFO:Initializing create_model()
2023-02-02 19:08:13,075:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=llar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:13,075:INFO:Checking exceptions
2023-02-02 19:08:13,075:INFO:Importing libraries
2023-02-02 19:08:13,075:INFO:Copying training dataset
2023-02-02 19:08:13,081:INFO:Defining folds
2023-02-02 19:08:13,081:INFO:Declaring metric variables
2023-02-02 19:08:13,085:INFO:Importing untrained model
2023-02-02 19:08:13,093:INFO:Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:08:13,102:INFO:Starting cross validation
2023-02-02 19:08:13,103:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:13,166:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:08:13,211:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 19:08:13,223:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 19:08:13,227:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 19:08:13,247:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 19:08:13,250:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 19:08:13,453:INFO:Calculating mean and std
2023-02-02 19:08:13,455:INFO:Creating metrics dataframe
2023-02-02 19:08:13,459:INFO:Uploading results into container
2023-02-02 19:08:13,459:INFO:Uploading model into container now
2023-02-02 19:08:13,459:INFO:_master_model_container: 71
2023-02-02 19:08:13,460:INFO:_display_container: 5
2023-02-02 19:08:13,462:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LassoLars(random_state=6043), sp=7,
                    window_length=7)
2023-02-02 19:08:13,462:INFO:create_model() successfully completed......................................
2023-02-02 19:08:13,602:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:13,602:INFO:Creating metrics dataframe
2023-02-02 19:08:13,619:INFO:Initializing Bayesian Ridge w/ Cond. Deseasonalize & Detrending
2023-02-02 19:08:13,619:INFO:Total runtime is 0.2897629141807556 minutes
2023-02-02 19:08:13,623:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:13,624:INFO:Initializing create_model()
2023-02-02 19:08:13,624:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=br_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:13,624:INFO:Checking exceptions
2023-02-02 19:08:13,624:INFO:Importing libraries
2023-02-02 19:08:13,624:INFO:Copying training dataset
2023-02-02 19:08:13,629:INFO:Defining folds
2023-02-02 19:08:13,629:INFO:Declaring metric variables
2023-02-02 19:08:13,634:INFO:Importing untrained model
2023-02-02 19:08:13,642:INFO:Bayesian Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:08:13,651:INFO:Starting cross validation
2023-02-02 19:08:13,652:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:13,719:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:08:14,011:INFO:Calculating mean and std
2023-02-02 19:08:14,013:INFO:Creating metrics dataframe
2023-02-02 19:08:14,017:INFO:Uploading results into container
2023-02-02 19:08:14,017:INFO:Uploading model into container now
2023-02-02 19:08:14,017:INFO:_master_model_container: 72
2023-02-02 19:08:14,017:INFO:_display_container: 5
2023-02-02 19:08:14,020:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=BayesianRidge(), sp=7, window_length=7)
2023-02-02 19:08:14,020:INFO:create_model() successfully completed......................................
2023-02-02 19:08:14,159:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:14,159:INFO:Creating metrics dataframe
2023-02-02 19:08:14,177:INFO:Initializing Huber w/ Cond. Deseasonalize & Detrending
2023-02-02 19:08:14,178:INFO:Total runtime is 0.2990654905637105 minutes
2023-02-02 19:08:14,183:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:14,184:INFO:Initializing create_model()
2023-02-02 19:08:14,184:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=huber_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:14,184:INFO:Checking exceptions
2023-02-02 19:08:14,184:INFO:Importing libraries
2023-02-02 19:08:14,184:INFO:Copying training dataset
2023-02-02 19:08:14,189:INFO:Defining folds
2023-02-02 19:08:14,190:INFO:Declaring metric variables
2023-02-02 19:08:14,194:INFO:Importing untrained model
2023-02-02 19:08:14,198:INFO:Huber w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:08:14,207:INFO:Starting cross validation
2023-02-02 19:08:14,209:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:14,269:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:08:14,349:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-02-02 19:08:14,362:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-02-02 19:08:14,400:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-02-02 19:08:14,581:INFO:Calculating mean and std
2023-02-02 19:08:14,582:INFO:Creating metrics dataframe
2023-02-02 19:08:14,587:INFO:Uploading results into container
2023-02-02 19:08:14,587:INFO:Uploading model into container now
2023-02-02 19:08:14,587:INFO:_master_model_container: 73
2023-02-02 19:08:14,587:INFO:_display_container: 5
2023-02-02 19:08:14,589:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=HuberRegressor(), sp=7, window_length=7)
2023-02-02 19:08:14,589:INFO:create_model() successfully completed......................................
2023-02-02 19:08:14,729:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:14,729:INFO:Creating metrics dataframe
2023-02-02 19:08:14,748:INFO:Initializing Passive Aggressive w/ Cond. Deseasonalize & Detrending
2023-02-02 19:08:14,748:INFO:Total runtime is 0.3085862676302592 minutes
2023-02-02 19:08:14,752:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:14,752:INFO:Initializing create_model()
2023-02-02 19:08:14,752:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=par_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:14,753:INFO:Checking exceptions
2023-02-02 19:08:14,753:INFO:Importing libraries
2023-02-02 19:08:14,753:INFO:Copying training dataset
2023-02-02 19:08:14,758:INFO:Defining folds
2023-02-02 19:08:14,759:INFO:Declaring metric variables
2023-02-02 19:08:14,763:INFO:Importing untrained model
2023-02-02 19:08:14,768:INFO:Passive Aggressive w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:08:14,777:INFO:Starting cross validation
2023-02-02 19:08:14,779:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:14,844:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:08:15,145:INFO:Calculating mean and std
2023-02-02 19:08:15,146:INFO:Creating metrics dataframe
2023-02-02 19:08:15,151:INFO:Uploading results into container
2023-02-02 19:08:15,151:INFO:Uploading model into container now
2023-02-02 19:08:15,151:INFO:_master_model_container: 74
2023-02-02 19:08:15,151:INFO:_display_container: 5
2023-02-02 19:08:15,154:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=PassiveAggressiveRegressor(random_state=6043),
                    sp=7, window_length=7)
2023-02-02 19:08:15,154:INFO:create_model() successfully completed......................................
2023-02-02 19:08:15,295:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:15,295:INFO:Creating metrics dataframe
2023-02-02 19:08:15,315:INFO:Initializing Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending
2023-02-02 19:08:15,315:INFO:Total runtime is 0.3180305123329163 minutes
2023-02-02 19:08:15,319:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:15,320:INFO:Initializing create_model()
2023-02-02 19:08:15,320:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=omp_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:15,320:INFO:Checking exceptions
2023-02-02 19:08:15,320:INFO:Importing libraries
2023-02-02 19:08:15,320:INFO:Copying training dataset
2023-02-02 19:08:15,325:INFO:Defining folds
2023-02-02 19:08:15,326:INFO:Declaring metric variables
2023-02-02 19:08:15,330:INFO:Importing untrained model
2023-02-02 19:08:15,339:INFO:Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:08:15,347:INFO:Starting cross validation
2023-02-02 19:08:15,350:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:15,401:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:08:15,456:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:08:15,457:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:08:15,470:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:08:15,471:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:08:15,481:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:08:15,669:INFO:Calculating mean and std
2023-02-02 19:08:15,671:INFO:Creating metrics dataframe
2023-02-02 19:08:15,675:INFO:Uploading results into container
2023-02-02 19:08:15,675:INFO:Uploading model into container now
2023-02-02 19:08:15,676:INFO:_master_model_container: 75
2023-02-02 19:08:15,676:INFO:_display_container: 5
2023-02-02 19:08:15,679:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=OrthogonalMatchingPursuit(), sp=7,
                    window_length=7)
2023-02-02 19:08:15,679:INFO:create_model() successfully completed......................................
2023-02-02 19:08:15,818:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:15,818:INFO:Creating metrics dataframe
2023-02-02 19:08:15,835:INFO:Initializing K Neighbors w/ Cond. Deseasonalize & Detrending
2023-02-02 19:08:15,835:INFO:Total runtime is 0.32670842409133916 minutes
2023-02-02 19:08:15,839:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:15,840:INFO:Initializing create_model()
2023-02-02 19:08:15,840:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=knn_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:15,840:INFO:Checking exceptions
2023-02-02 19:08:15,840:INFO:Importing libraries
2023-02-02 19:08:15,840:INFO:Copying training dataset
2023-02-02 19:08:15,845:INFO:Defining folds
2023-02-02 19:08:15,846:INFO:Declaring metric variables
2023-02-02 19:08:15,850:INFO:Importing untrained model
2023-02-02 19:08:15,855:INFO:K Neighbors w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:08:15,865:INFO:Starting cross validation
2023-02-02 19:08:15,866:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:15,931:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:08:16,334:INFO:Calculating mean and std
2023-02-02 19:08:16,335:INFO:Creating metrics dataframe
2023-02-02 19:08:16,340:INFO:Uploading results into container
2023-02-02 19:08:16,340:INFO:Uploading model into container now
2023-02-02 19:08:16,340:INFO:_master_model_container: 76
2023-02-02 19:08:16,340:INFO:_display_container: 5
2023-02-02 19:08:16,343:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=KNeighborsRegressor(n_jobs=-1), sp=7,
                    window_length=7)
2023-02-02 19:08:16,343:INFO:create_model() successfully completed......................................
2023-02-02 19:08:16,483:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:16,484:INFO:Creating metrics dataframe
2023-02-02 19:08:16,502:INFO:Initializing Decision Tree w/ Cond. Deseasonalize & Detrending
2023-02-02 19:08:16,502:INFO:Total runtime is 0.33781730333964033 minutes
2023-02-02 19:08:16,506:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:16,507:INFO:Initializing create_model()
2023-02-02 19:08:16,507:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=dt_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:16,507:INFO:Checking exceptions
2023-02-02 19:08:16,507:INFO:Importing libraries
2023-02-02 19:08:16,507:INFO:Copying training dataset
2023-02-02 19:08:16,512:INFO:Defining folds
2023-02-02 19:08:16,512:INFO:Declaring metric variables
2023-02-02 19:08:16,517:INFO:Importing untrained model
2023-02-02 19:08:16,522:INFO:Decision Tree w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:08:16,531:INFO:Starting cross validation
2023-02-02 19:08:16,532:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:16,589:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:08:16,876:INFO:Calculating mean and std
2023-02-02 19:08:16,877:INFO:Creating metrics dataframe
2023-02-02 19:08:16,881:INFO:Uploading results into container
2023-02-02 19:08:16,881:INFO:Uploading model into container now
2023-02-02 19:08:16,882:INFO:_master_model_container: 77
2023-02-02 19:08:16,882:INFO:_display_container: 5
2023-02-02 19:08:16,884:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=DecisionTreeRegressor(random_state=6043), sp=7,
                    window_length=7)
2023-02-02 19:08:16,884:INFO:create_model() successfully completed......................................
2023-02-02 19:08:17,024:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:17,024:INFO:Creating metrics dataframe
2023-02-02 19:08:17,043:INFO:Initializing Random Forest w/ Cond. Deseasonalize & Detrending
2023-02-02 19:08:17,043:INFO:Total runtime is 0.3468303839365642 minutes
2023-02-02 19:08:17,047:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:17,047:INFO:Initializing create_model()
2023-02-02 19:08:17,048:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=rf_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:17,048:INFO:Checking exceptions
2023-02-02 19:08:17,048:INFO:Importing libraries
2023-02-02 19:08:17,048:INFO:Copying training dataset
2023-02-02 19:08:17,053:INFO:Defining folds
2023-02-02 19:08:17,053:INFO:Declaring metric variables
2023-02-02 19:08:17,058:INFO:Importing untrained model
2023-02-02 19:08:17,063:INFO:Random Forest w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:08:17,072:INFO:Starting cross validation
2023-02-02 19:08:17,074:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:17,126:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:08:17,717:INFO:Calculating mean and std
2023-02-02 19:08:17,718:INFO:Creating metrics dataframe
2023-02-02 19:08:17,723:INFO:Uploading results into container
2023-02-02 19:08:17,723:INFO:Uploading model into container now
2023-02-02 19:08:17,723:INFO:_master_model_container: 78
2023-02-02 19:08:17,723:INFO:_display_container: 5
2023-02-02 19:08:17,727:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=RandomForestRegressor(n_jobs=-1,
                                                    random_state=6043),
                    sp=7, window_length=7)
2023-02-02 19:08:17,727:INFO:create_model() successfully completed......................................
2023-02-02 19:08:17,866:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:17,866:INFO:Creating metrics dataframe
2023-02-02 19:08:17,885:INFO:Initializing Extra Trees w/ Cond. Deseasonalize & Detrending
2023-02-02 19:08:17,886:INFO:Total runtime is 0.3608793258666993 minutes
2023-02-02 19:08:17,889:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:17,890:INFO:Initializing create_model()
2023-02-02 19:08:17,890:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=et_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:17,890:INFO:Checking exceptions
2023-02-02 19:08:17,890:INFO:Importing libraries
2023-02-02 19:08:17,890:INFO:Copying training dataset
2023-02-02 19:08:17,895:INFO:Defining folds
2023-02-02 19:08:17,896:INFO:Declaring metric variables
2023-02-02 19:08:17,900:INFO:Importing untrained model
2023-02-02 19:08:17,906:INFO:Extra Trees w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:08:17,916:INFO:Starting cross validation
2023-02-02 19:08:17,917:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:17,975:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:08:18,551:INFO:Calculating mean and std
2023-02-02 19:08:18,553:INFO:Creating metrics dataframe
2023-02-02 19:08:18,558:INFO:Uploading results into container
2023-02-02 19:08:18,558:INFO:Uploading model into container now
2023-02-02 19:08:18,558:INFO:_master_model_container: 79
2023-02-02 19:08:18,559:INFO:_display_container: 5
2023-02-02 19:08:18,561:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(n_jobs=-1, random_state=6043),
                    sp=7, window_length=7)
2023-02-02 19:08:18,561:INFO:create_model() successfully completed......................................
2023-02-02 19:08:18,700:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:18,700:INFO:Creating metrics dataframe
2023-02-02 19:08:18,719:INFO:Initializing Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-02-02 19:08:18,720:INFO:Total runtime is 0.37477768262227384 minutes
2023-02-02 19:08:18,724:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:18,724:INFO:Initializing create_model()
2023-02-02 19:08:18,724:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=gbr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:18,724:INFO:Checking exceptions
2023-02-02 19:08:18,725:INFO:Importing libraries
2023-02-02 19:08:18,725:INFO:Copying training dataset
2023-02-02 19:08:18,730:INFO:Defining folds
2023-02-02 19:08:18,731:INFO:Declaring metric variables
2023-02-02 19:08:18,734:INFO:Importing untrained model
2023-02-02 19:08:18,740:INFO:Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:08:18,751:INFO:Starting cross validation
2023-02-02 19:08:18,752:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:18,803:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:08:19,141:INFO:Calculating mean and std
2023-02-02 19:08:19,142:INFO:Creating metrics dataframe
2023-02-02 19:08:19,147:INFO:Uploading results into container
2023-02-02 19:08:19,147:INFO:Uploading model into container now
2023-02-02 19:08:19,147:INFO:_master_model_container: 80
2023-02-02 19:08:19,147:INFO:_display_container: 5
2023-02-02 19:08:19,150:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=GradientBoostingRegressor(random_state=6043),
                    sp=7, window_length=7)
2023-02-02 19:08:19,150:INFO:create_model() successfully completed......................................
2023-02-02 19:08:19,292:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:19,293:INFO:Creating metrics dataframe
2023-02-02 19:08:19,312:INFO:Initializing AdaBoost w/ Cond. Deseasonalize & Detrending
2023-02-02 19:08:19,313:INFO:Total runtime is 0.3846715768178305 minutes
2023-02-02 19:08:19,317:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:19,317:INFO:Initializing create_model()
2023-02-02 19:08:19,318:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=ada_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:19,318:INFO:Checking exceptions
2023-02-02 19:08:19,318:INFO:Importing libraries
2023-02-02 19:08:19,318:INFO:Copying training dataset
2023-02-02 19:08:19,323:INFO:Defining folds
2023-02-02 19:08:19,323:INFO:Declaring metric variables
2023-02-02 19:08:19,328:INFO:Importing untrained model
2023-02-02 19:08:19,333:INFO:AdaBoost w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:08:19,342:INFO:Starting cross validation
2023-02-02 19:08:19,343:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:19,391:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:08:19,776:INFO:Calculating mean and std
2023-02-02 19:08:19,778:INFO:Creating metrics dataframe
2023-02-02 19:08:19,782:INFO:Uploading results into container
2023-02-02 19:08:19,782:INFO:Uploading model into container now
2023-02-02 19:08:19,783:INFO:_master_model_container: 81
2023-02-02 19:08:19,783:INFO:_display_container: 5
2023-02-02 19:08:19,785:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=AdaBoostRegressor(random_state=6043), sp=7,
                    window_length=7)
2023-02-02 19:08:19,785:INFO:create_model() successfully completed......................................
2023-02-02 19:08:19,924:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:19,925:INFO:Creating metrics dataframe
2023-02-02 19:08:19,945:INFO:Initializing Light Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-02-02 19:08:19,945:INFO:Total runtime is 0.3951971650123597 minutes
2023-02-02 19:08:19,949:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:19,949:INFO:Initializing create_model()
2023-02-02 19:08:19,950:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=lightgbm_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12640E9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:19,950:INFO:Checking exceptions
2023-02-02 19:08:19,950:INFO:Importing libraries
2023-02-02 19:08:19,950:INFO:Copying training dataset
2023-02-02 19:08:19,958:INFO:Defining folds
2023-02-02 19:08:19,958:INFO:Declaring metric variables
2023-02-02 19:08:19,963:INFO:Importing untrained model
2023-02-02 19:08:19,969:INFO:Light Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:08:19,978:INFO:Starting cross validation
2023-02-02 19:08:19,979:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:20,035:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:08:20,343:INFO:Calculating mean and std
2023-02-02 19:08:20,344:INFO:Creating metrics dataframe
2023-02-02 19:08:20,349:INFO:Uploading results into container
2023-02-02 19:08:20,349:INFO:Uploading model into container now
2023-02-02 19:08:20,349:INFO:_master_model_container: 82
2023-02-02 19:08:20,349:INFO:_display_container: 5
2023-02-02 19:08:20,352:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LGBMRegressor(random_state=6043), sp=7,
                    window_length=7)
2023-02-02 19:08:20,352:INFO:create_model() successfully completed......................................
2023-02-02 19:08:20,494:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:20,494:INFO:Creating metrics dataframe
2023-02-02 19:08:20,525:INFO:Initializing create_model()
2023-02-02 19:08:20,526:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:20,526:INFO:Checking exceptions
2023-02-02 19:08:20,528:INFO:Importing libraries
2023-02-02 19:08:20,528:INFO:Copying training dataset
2023-02-02 19:08:20,532:INFO:Defining folds
2023-02-02 19:08:20,532:INFO:Declaring metric variables
2023-02-02 19:08:20,532:INFO:Importing untrained model
2023-02-02 19:08:20,532:INFO:Declaring custom model
2023-02-02 19:08:20,534:INFO:ARIMA Imported successfully
2023-02-02 19:08:20,534:INFO:Cross validation set to False
2023-02-02 19:08:20,534:INFO:Fitting Model
2023-02-02 19:08:20,595:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:08:20,595:INFO:create_model() successfully completed......................................
2023-02-02 19:08:20,784:INFO:_master_model_container: 82
2023-02-02 19:08:20,784:INFO:_display_container: 5
2023-02-02 19:08:20,785:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:08:20,785:INFO:compare_models() successfully completed......................................
2023-02-02 19:08:52,491:INFO:Initializing compare_models()
2023-02-02 19:08:52,491:INFO:compare_models(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, include=None, fold=None, round=4, cross_validation=True, sort=MASE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MASE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.time_series.forecasting.oop.TSForecastingExperiment'>}, exclude=None)
2023-02-02 19:08:52,492:INFO:Checking exceptions
2023-02-02 19:08:52,494:INFO:Preparing display monitor
2023-02-02 19:08:52,529:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:709: UserWarning: Unsupported estimator `ensemble_forecaster` for method `compare_models()`, removing from model_library
  warnings.warn(

2023-02-02 19:08:52,529:INFO:Initializing Naive Forecaster
2023-02-02 19:08:52,529:INFO:Total runtime is 0.0 minutes
2023-02-02 19:08:52,534:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:52,535:INFO:Initializing create_model()
2023-02-02 19:08:52,535:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=naive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:52,535:INFO:Checking exceptions
2023-02-02 19:08:52,535:INFO:Importing libraries
2023-02-02 19:08:52,535:INFO:Copying training dataset
2023-02-02 19:08:52,540:INFO:Defining folds
2023-02-02 19:08:52,540:INFO:Declaring metric variables
2023-02-02 19:08:52,545:INFO:Importing untrained model
2023-02-02 19:08:52,550:INFO:Naive Forecaster Imported successfully
2023-02-02 19:08:52,562:INFO:Starting cross validation
2023-02-02 19:08:52,564:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:52,632:INFO:Calculating mean and std
2023-02-02 19:08:52,633:INFO:Creating metrics dataframe
2023-02-02 19:08:52,637:INFO:Uploading results into container
2023-02-02 19:08:52,637:INFO:Uploading model into container now
2023-02-02 19:08:52,637:INFO:_master_model_container: 83
2023-02-02 19:08:52,637:INFO:_display_container: 6
2023-02-02 19:08:52,638:INFO:NaiveForecaster()
2023-02-02 19:08:52,638:INFO:create_model() successfully completed......................................
2023-02-02 19:08:52,778:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:52,779:INFO:Creating metrics dataframe
2023-02-02 19:08:52,789:INFO:Initializing Grand Means Forecaster
2023-02-02 19:08:52,789:INFO:Total runtime is 0.004330702622731527 minutes
2023-02-02 19:08:52,793:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:52,793:INFO:Initializing create_model()
2023-02-02 19:08:52,793:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=grand_means, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:52,793:INFO:Checking exceptions
2023-02-02 19:08:52,793:INFO:Importing libraries
2023-02-02 19:08:52,793:INFO:Copying training dataset
2023-02-02 19:08:52,798:INFO:Defining folds
2023-02-02 19:08:52,798:INFO:Declaring metric variables
2023-02-02 19:08:52,802:INFO:Importing untrained model
2023-02-02 19:08:52,807:INFO:Grand Means Forecaster Imported successfully
2023-02-02 19:08:52,817:INFO:Starting cross validation
2023-02-02 19:08:52,819:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:52,892:INFO:Calculating mean and std
2023-02-02 19:08:52,892:INFO:Creating metrics dataframe
2023-02-02 19:08:52,896:INFO:Uploading results into container
2023-02-02 19:08:52,896:INFO:Uploading model into container now
2023-02-02 19:08:52,897:INFO:_master_model_container: 84
2023-02-02 19:08:52,897:INFO:_display_container: 6
2023-02-02 19:08:52,897:INFO:NaiveForecaster(strategy='mean')
2023-02-02 19:08:52,897:INFO:create_model() successfully completed......................................
2023-02-02 19:08:53,037:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:53,037:INFO:Creating metrics dataframe
2023-02-02 19:08:53,048:INFO:Initializing Seasonal Naive Forecaster
2023-02-02 19:08:53,049:INFO:Total runtime is 0.008661325772603354 minutes
2023-02-02 19:08:53,052:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:53,053:INFO:Initializing create_model()
2023-02-02 19:08:53,053:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=snaive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:53,053:INFO:Checking exceptions
2023-02-02 19:08:53,053:INFO:Importing libraries
2023-02-02 19:08:53,053:INFO:Copying training dataset
2023-02-02 19:08:53,058:INFO:Defining folds
2023-02-02 19:08:53,058:INFO:Declaring metric variables
2023-02-02 19:08:53,062:INFO:Importing untrained model
2023-02-02 19:08:53,067:INFO:Seasonal Naive Forecaster Imported successfully
2023-02-02 19:08:53,076:INFO:Starting cross validation
2023-02-02 19:08:53,077:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:53,144:INFO:Calculating mean and std
2023-02-02 19:08:53,144:INFO:Creating metrics dataframe
2023-02-02 19:08:53,148:INFO:Uploading results into container
2023-02-02 19:08:53,148:INFO:Uploading model into container now
2023-02-02 19:08:53,149:INFO:_master_model_container: 85
2023-02-02 19:08:53,149:INFO:_display_container: 6
2023-02-02 19:08:53,149:INFO:NaiveForecaster(sp=7)
2023-02-02 19:08:53,149:INFO:create_model() successfully completed......................................
2023-02-02 19:08:53,290:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:53,290:INFO:Creating metrics dataframe
2023-02-02 19:08:53,302:INFO:Initializing Polynomial Trend Forecaster
2023-02-02 19:08:53,302:INFO:Total runtime is 0.01288179159164429 minutes
2023-02-02 19:08:53,306:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:53,306:INFO:Initializing create_model()
2023-02-02 19:08:53,306:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=polytrend, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:53,306:INFO:Checking exceptions
2023-02-02 19:08:53,306:INFO:Importing libraries
2023-02-02 19:08:53,306:INFO:Copying training dataset
2023-02-02 19:08:53,311:INFO:Defining folds
2023-02-02 19:08:53,311:INFO:Declaring metric variables
2023-02-02 19:08:53,315:INFO:Importing untrained model
2023-02-02 19:08:53,320:INFO:Polynomial Trend Forecaster Imported successfully
2023-02-02 19:08:53,330:INFO:Starting cross validation
2023-02-02 19:08:53,331:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:53,389:INFO:Calculating mean and std
2023-02-02 19:08:53,389:INFO:Creating metrics dataframe
2023-02-02 19:08:53,393:INFO:Uploading results into container
2023-02-02 19:08:53,393:INFO:Uploading model into container now
2023-02-02 19:08:53,394:INFO:_master_model_container: 86
2023-02-02 19:08:53,394:INFO:_display_container: 6
2023-02-02 19:08:53,394:INFO:PolynomialTrendForecaster()
2023-02-02 19:08:53,394:INFO:create_model() successfully completed......................................
2023-02-02 19:08:53,535:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:53,535:INFO:Creating metrics dataframe
2023-02-02 19:08:53,548:INFO:Initializing ARIMA
2023-02-02 19:08:53,548:INFO:Total runtime is 0.016979253292083742 minutes
2023-02-02 19:08:53,552:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:53,552:INFO:Initializing create_model()
2023-02-02 19:08:53,552:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:53,552:INFO:Checking exceptions
2023-02-02 19:08:53,552:INFO:Importing libraries
2023-02-02 19:08:53,552:INFO:Copying training dataset
2023-02-02 19:08:53,560:INFO:Defining folds
2023-02-02 19:08:53,561:INFO:Declaring metric variables
2023-02-02 19:08:53,565:INFO:Importing untrained model
2023-02-02 19:08:53,571:INFO:ARIMA Imported successfully
2023-02-02 19:08:53,580:INFO:Starting cross validation
2023-02-02 19:08:53,582:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:53,796:INFO:Calculating mean and std
2023-02-02 19:08:53,798:INFO:Creating metrics dataframe
2023-02-02 19:08:53,802:INFO:Uploading results into container
2023-02-02 19:08:53,802:INFO:Uploading model into container now
2023-02-02 19:08:53,802:INFO:_master_model_container: 87
2023-02-02 19:08:53,802:INFO:_display_container: 6
2023-02-02 19:08:53,803:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:08:53,803:INFO:create_model() successfully completed......................................
2023-02-02 19:08:53,943:INFO:SubProcess create_model() end ==================================
2023-02-02 19:08:53,943:INFO:Creating metrics dataframe
2023-02-02 19:08:53,957:INFO:Initializing Auto ARIMA
2023-02-02 19:08:53,957:INFO:Total runtime is 0.02380837202072144 minutes
2023-02-02 19:08:53,962:INFO:SubProcess create_model() called ==================================
2023-02-02 19:08:53,962:INFO:Initializing create_model()
2023-02-02 19:08:53,962:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=auto_arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:08:53,962:INFO:Checking exceptions
2023-02-02 19:08:53,962:INFO:Importing libraries
2023-02-02 19:08:53,962:INFO:Copying training dataset
2023-02-02 19:08:53,968:INFO:Defining folds
2023-02-02 19:08:53,968:INFO:Declaring metric variables
2023-02-02 19:08:53,973:INFO:Importing untrained model
2023-02-02 19:08:53,978:INFO:Auto ARIMA Imported successfully
2023-02-02 19:08:53,990:INFO:Starting cross validation
2023-02-02 19:08:53,991:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:08:54,057:ERROR:Fit failed on ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                AutoARIMA(random_state=6043,
                                                                          sp=7,
                                                                          suppress_warnings=True))]))])
2023-02-02 19:08:54,057:ERROR:zero-size array to reduction operation maximum which has no identity
2023-02-02 19:08:57,931:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pmdarima\arima\_auto_solvers.py:522: ModelFitWarning: Error fitting  ARIMA(2,0,1)(2,1,0)[7] intercept (if you do not want to see these warnings, run with error_action="ignore").
  warnings.warn(warning_str, ModelFitWarning)

2023-02-02 19:08:59,924:INFO:Calculating mean and std
2023-02-02 19:08:59,926:INFO:Creating metrics dataframe
2023-02-02 19:08:59,938:INFO:Uploading results into container
2023-02-02 19:08:59,938:INFO:Uploading model into container now
2023-02-02 19:08:59,939:INFO:_master_model_container: 88
2023-02-02 19:08:59,939:INFO:_display_container: 6
2023-02-02 19:08:59,940:INFO:AutoARIMA(random_state=6043, sp=7, suppress_warnings=True)
2023-02-02 19:08:59,940:INFO:create_model() successfully completed......................................
2023-02-02 19:09:00,089:WARNING:create_model() for AutoARIMA(random_state=6043, sp=7, suppress_warnings=True) raised an exception or returned all 0.0, trying without fit_kwargs:
2023-02-02 19:09:00,089:WARNING:Traceback (most recent call last):
  File "C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 795, in compare_models
    assert (
AssertionError

2023-02-02 19:09:00,089:INFO:Initializing create_model()
2023-02-02 19:09:00,089:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=auto_arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:00,089:INFO:Checking exceptions
2023-02-02 19:09:00,089:INFO:Importing libraries
2023-02-02 19:09:00,089:INFO:Copying training dataset
2023-02-02 19:09:00,094:INFO:Defining folds
2023-02-02 19:09:00,094:INFO:Declaring metric variables
2023-02-02 19:09:00,099:INFO:Importing untrained model
2023-02-02 19:09:00,104:INFO:Auto ARIMA Imported successfully
2023-02-02 19:09:00,113:INFO:Starting cross validation
2023-02-02 19:09:00,114:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:09:00,194:ERROR:Fit failed on ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                AutoARIMA(random_state=6043,
                                                                          sp=7,
                                                                          suppress_warnings=True))]))])
2023-02-02 19:09:00,194:ERROR:zero-size array to reduction operation maximum which has no identity
2023-02-02 19:09:04,168:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pmdarima\arima\_auto_solvers.py:522: ModelFitWarning: Error fitting  ARIMA(2,0,1)(2,1,0)[7] intercept (if you do not want to see these warnings, run with error_action="ignore").
  warnings.warn(warning_str, ModelFitWarning)

2023-02-02 19:09:06,116:INFO:Calculating mean and std
2023-02-02 19:09:06,117:INFO:Creating metrics dataframe
2023-02-02 19:09:06,122:INFO:Uploading results into container
2023-02-02 19:09:06,122:INFO:Uploading model into container now
2023-02-02 19:09:06,123:INFO:_master_model_container: 89
2023-02-02 19:09:06,123:INFO:_display_container: 6
2023-02-02 19:09:06,123:INFO:AutoARIMA(random_state=6043, sp=7, suppress_warnings=True)
2023-02-02 19:09:06,123:INFO:create_model() successfully completed......................................
2023-02-02 19:09:06,274:ERROR:create_model() for AutoARIMA(random_state=6043, sp=7, suppress_warnings=True) raised an exception or returned all 0.0:
2023-02-02 19:09:06,275:ERROR:Traceback (most recent call last):
  File "C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 795, in compare_models
    assert (
AssertionError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 811, in compare_models
    assert (
AssertionError

2023-02-02 19:09:06,276:INFO:Initializing Exponential Smoothing
2023-02-02 19:09:06,276:INFO:Total runtime is 0.22912311951319378 minutes
2023-02-02 19:09:06,281:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:06,281:INFO:Initializing create_model()
2023-02-02 19:09:06,281:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=exp_smooth, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:06,282:INFO:Checking exceptions
2023-02-02 19:09:06,282:INFO:Importing libraries
2023-02-02 19:09:06,282:INFO:Copying training dataset
2023-02-02 19:09:06,287:INFO:Defining folds
2023-02-02 19:09:06,287:INFO:Declaring metric variables
2023-02-02 19:09:06,291:INFO:Importing untrained model
2023-02-02 19:09:06,296:INFO:Exponential Smoothing Imported successfully
2023-02-02 19:09:06,305:INFO:Starting cross validation
2023-02-02 19:09:06,306:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:09:06,642:INFO:Calculating mean and std
2023-02-02 19:09:06,644:INFO:Creating metrics dataframe
2023-02-02 19:09:06,648:INFO:Uploading results into container
2023-02-02 19:09:06,649:INFO:Uploading model into container now
2023-02-02 19:09:06,649:INFO:_master_model_container: 90
2023-02-02 19:09:06,649:INFO:_display_container: 6
2023-02-02 19:09:06,650:INFO:ExponentialSmoothing(seasonal='mul', sp=7, trend='add')
2023-02-02 19:09:06,650:INFO:create_model() successfully completed......................................
2023-02-02 19:09:06,790:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:06,790:INFO:Creating metrics dataframe
2023-02-02 19:09:06,803:INFO:Initializing Croston
2023-02-02 19:09:06,803:INFO:Total runtime is 0.23790105978647869 minutes
2023-02-02 19:09:06,807:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:06,807:INFO:Initializing create_model()
2023-02-02 19:09:06,807:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=croston, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:06,807:INFO:Checking exceptions
2023-02-02 19:09:06,808:INFO:Importing libraries
2023-02-02 19:09:06,808:INFO:Copying training dataset
2023-02-02 19:09:06,813:INFO:Defining folds
2023-02-02 19:09:06,813:INFO:Declaring metric variables
2023-02-02 19:09:06,817:INFO:Importing untrained model
2023-02-02 19:09:06,822:INFO:Croston Imported successfully
2023-02-02 19:09:06,833:INFO:Starting cross validation
2023-02-02 19:09:06,834:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:09:06,885:INFO:Calculating mean and std
2023-02-02 19:09:06,885:INFO:Creating metrics dataframe
2023-02-02 19:09:06,889:INFO:Uploading results into container
2023-02-02 19:09:06,889:INFO:Uploading model into container now
2023-02-02 19:09:06,890:INFO:_master_model_container: 91
2023-02-02 19:09:06,890:INFO:_display_container: 6
2023-02-02 19:09:06,890:INFO:Croston()
2023-02-02 19:09:06,890:INFO:create_model() successfully completed......................................
2023-02-02 19:09:07,030:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:07,030:INFO:Creating metrics dataframe
2023-02-02 19:09:07,043:INFO:Initializing ETS
2023-02-02 19:09:07,044:INFO:Total runtime is 0.24191524187723795 minutes
2023-02-02 19:09:07,048:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:07,048:INFO:Initializing create_model()
2023-02-02 19:09:07,048:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=ets, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:07,048:INFO:Checking exceptions
2023-02-02 19:09:07,049:INFO:Importing libraries
2023-02-02 19:09:07,049:INFO:Copying training dataset
2023-02-02 19:09:07,054:INFO:Defining folds
2023-02-02 19:09:07,054:INFO:Declaring metric variables
2023-02-02 19:09:07,058:INFO:Importing untrained model
2023-02-02 19:09:07,064:INFO:ETS Imported successfully
2023-02-02 19:09:07,073:INFO:Starting cross validation
2023-02-02 19:09:07,074:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:09:07,340:INFO:Calculating mean and std
2023-02-02 19:09:07,341:INFO:Creating metrics dataframe
2023-02-02 19:09:07,346:INFO:Uploading results into container
2023-02-02 19:09:07,346:INFO:Uploading model into container now
2023-02-02 19:09:07,346:INFO:_master_model_container: 92
2023-02-02 19:09:07,347:INFO:_display_container: 6
2023-02-02 19:09:07,347:INFO:AutoETS(seasonal='mul', sp=7, trend='add')
2023-02-02 19:09:07,347:INFO:create_model() successfully completed......................................
2023-02-02 19:09:07,491:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:07,491:INFO:Creating metrics dataframe
2023-02-02 19:09:07,507:INFO:Initializing Theta Forecaster
2023-02-02 19:09:07,507:INFO:Total runtime is 0.24962891340255736 minutes
2023-02-02 19:09:07,512:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:07,512:INFO:Initializing create_model()
2023-02-02 19:09:07,512:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=theta, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:07,512:INFO:Checking exceptions
2023-02-02 19:09:07,512:INFO:Importing libraries
2023-02-02 19:09:07,512:INFO:Copying training dataset
2023-02-02 19:09:07,517:INFO:Defining folds
2023-02-02 19:09:07,518:INFO:Declaring metric variables
2023-02-02 19:09:07,522:INFO:Importing untrained model
2023-02-02 19:09:07,528:INFO:Theta Forecaster Imported successfully
2023-02-02 19:09:07,537:INFO:Starting cross validation
2023-02-02 19:09:07,538:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:09:07,637:INFO:Calculating mean and std
2023-02-02 19:09:07,638:INFO:Creating metrics dataframe
2023-02-02 19:09:07,642:INFO:Uploading results into container
2023-02-02 19:09:07,642:INFO:Uploading model into container now
2023-02-02 19:09:07,643:INFO:_master_model_container: 93
2023-02-02 19:09:07,643:INFO:_display_container: 6
2023-02-02 19:09:07,643:INFO:ThetaForecaster(sp=7)
2023-02-02 19:09:07,643:INFO:create_model() successfully completed......................................
2023-02-02 19:09:07,782:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:07,782:INFO:Creating metrics dataframe
2023-02-02 19:09:07,796:INFO:Initializing Linear w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:07,797:INFO:Total runtime is 0.2544602274894714 minutes
2023-02-02 19:09:07,801:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:07,801:INFO:Initializing create_model()
2023-02-02 19:09:07,802:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=lr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:07,802:INFO:Checking exceptions
2023-02-02 19:09:07,802:INFO:Importing libraries
2023-02-02 19:09:07,802:INFO:Copying training dataset
2023-02-02 19:09:07,807:INFO:Defining folds
2023-02-02 19:09:07,807:INFO:Declaring metric variables
2023-02-02 19:09:07,813:INFO:Importing untrained model
2023-02-02 19:09:07,818:INFO:Linear w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:07,827:INFO:Starting cross validation
2023-02-02 19:09:07,828:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:09:07,885:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:09:08,155:INFO:Calculating mean and std
2023-02-02 19:09:08,156:INFO:Creating metrics dataframe
2023-02-02 19:09:08,160:INFO:Uploading results into container
2023-02-02 19:09:08,160:INFO:Uploading model into container now
2023-02-02 19:09:08,161:INFO:_master_model_container: 94
2023-02-02 19:09:08,161:INFO:_display_container: 6
2023-02-02 19:09:08,163:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LinearRegression(n_jobs=-1), sp=7,
                    window_length=7)
2023-02-02 19:09:08,163:INFO:create_model() successfully completed......................................
2023-02-02 19:09:08,306:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:08,306:INFO:Creating metrics dataframe
2023-02-02 19:09:08,321:INFO:Initializing Elastic Net w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:08,321:INFO:Total runtime is 0.2632048487663269 minutes
2023-02-02 19:09:08,325:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:08,325:INFO:Initializing create_model()
2023-02-02 19:09:08,325:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=en_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:08,325:INFO:Checking exceptions
2023-02-02 19:09:08,326:INFO:Importing libraries
2023-02-02 19:09:08,326:INFO:Copying training dataset
2023-02-02 19:09:08,331:INFO:Defining folds
2023-02-02 19:09:08,331:INFO:Declaring metric variables
2023-02-02 19:09:08,337:INFO:Importing untrained model
2023-02-02 19:09:08,342:INFO:Elastic Net w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:08,351:INFO:Starting cross validation
2023-02-02 19:09:08,353:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:09:08,411:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:09:08,688:INFO:Calculating mean and std
2023-02-02 19:09:08,690:INFO:Creating metrics dataframe
2023-02-02 19:09:08,694:INFO:Uploading results into container
2023-02-02 19:09:08,694:INFO:Uploading model into container now
2023-02-02 19:09:08,695:INFO:_master_model_container: 95
2023-02-02 19:09:08,695:INFO:_display_container: 6
2023-02-02 19:09:08,697:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=ElasticNet(random_state=6043), sp=7,
                    window_length=7)
2023-02-02 19:09:08,697:INFO:create_model() successfully completed......................................
2023-02-02 19:09:08,838:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:08,838:INFO:Creating metrics dataframe
2023-02-02 19:09:08,855:INFO:Initializing Ridge w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:08,855:INFO:Total runtime is 0.2720993558565775 minutes
2023-02-02 19:09:08,859:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:08,859:INFO:Initializing create_model()
2023-02-02 19:09:08,859:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=ridge_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:08,860:INFO:Checking exceptions
2023-02-02 19:09:08,860:INFO:Importing libraries
2023-02-02 19:09:08,860:INFO:Copying training dataset
2023-02-02 19:09:08,865:INFO:Defining folds
2023-02-02 19:09:08,865:INFO:Declaring metric variables
2023-02-02 19:09:08,870:INFO:Importing untrained model
2023-02-02 19:09:08,875:INFO:Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:08,885:INFO:Starting cross validation
2023-02-02 19:09:08,886:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:09:08,935:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:09:09,239:INFO:Calculating mean and std
2023-02-02 19:09:09,240:INFO:Creating metrics dataframe
2023-02-02 19:09:09,244:INFO:Uploading results into container
2023-02-02 19:09:09,244:INFO:Uploading model into container now
2023-02-02 19:09:09,245:INFO:_master_model_container: 96
2023-02-02 19:09:09,245:INFO:_display_container: 6
2023-02-02 19:09:09,247:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Ridge(random_state=6043), sp=7, window_length=7)
2023-02-02 19:09:09,247:INFO:create_model() successfully completed......................................
2023-02-02 19:09:09,387:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:09,387:INFO:Creating metrics dataframe
2023-02-02 19:09:09,402:INFO:Initializing Lasso w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:09,403:INFO:Total runtime is 0.28122705618540444 minutes
2023-02-02 19:09:09,408:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:09,408:INFO:Initializing create_model()
2023-02-02 19:09:09,408:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=lasso_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:09,408:INFO:Checking exceptions
2023-02-02 19:09:09,408:INFO:Importing libraries
2023-02-02 19:09:09,409:INFO:Copying training dataset
2023-02-02 19:09:09,414:INFO:Defining folds
2023-02-02 19:09:09,414:INFO:Declaring metric variables
2023-02-02 19:09:09,419:INFO:Importing untrained model
2023-02-02 19:09:09,424:INFO:Lasso w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:09,433:INFO:Starting cross validation
2023-02-02 19:09:09,435:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:09:09,492:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:09:09,806:INFO:Calculating mean and std
2023-02-02 19:09:09,807:INFO:Creating metrics dataframe
2023-02-02 19:09:09,812:INFO:Uploading results into container
2023-02-02 19:09:09,812:INFO:Uploading model into container now
2023-02-02 19:09:09,812:INFO:_master_model_container: 97
2023-02-02 19:09:09,813:INFO:_display_container: 6
2023-02-02 19:09:09,815:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Lasso(random_state=6043), sp=7, window_length=7)
2023-02-02 19:09:09,815:INFO:create_model() successfully completed......................................
2023-02-02 19:09:09,958:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:09,959:INFO:Creating metrics dataframe
2023-02-02 19:09:09,975:INFO:Initializing Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:09,975:INFO:Total runtime is 0.29077119429906206 minutes
2023-02-02 19:09:09,979:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:09,979:INFO:Initializing create_model()
2023-02-02 19:09:09,980:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=lar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:09,980:INFO:Checking exceptions
2023-02-02 19:09:09,980:INFO:Importing libraries
2023-02-02 19:09:09,980:INFO:Copying training dataset
2023-02-02 19:09:09,985:INFO:Defining folds
2023-02-02 19:09:09,985:INFO:Declaring metric variables
2023-02-02 19:09:09,990:INFO:Importing untrained model
2023-02-02 19:09:09,996:INFO:Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:10,005:INFO:Starting cross validation
2023-02-02 19:09:10,006:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:09:10,066:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:09:10,105:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:09:10,114:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:09:10,119:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:09:10,145:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:09:10,148:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:09:10,343:INFO:Calculating mean and std
2023-02-02 19:09:10,344:INFO:Creating metrics dataframe
2023-02-02 19:09:10,349:INFO:Uploading results into container
2023-02-02 19:09:10,349:INFO:Uploading model into container now
2023-02-02 19:09:10,349:INFO:_master_model_container: 98
2023-02-02 19:09:10,350:INFO:_display_container: 6
2023-02-02 19:09:10,352:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Lars(random_state=6043), sp=7, window_length=7)
2023-02-02 19:09:10,352:INFO:create_model() successfully completed......................................
2023-02-02 19:09:10,492:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:10,493:INFO:Creating metrics dataframe
2023-02-02 19:09:10,511:INFO:Initializing Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:10,511:INFO:Total runtime is 0.29970674117406204 minutes
2023-02-02 19:09:10,514:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:10,515:INFO:Initializing create_model()
2023-02-02 19:09:10,515:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=llar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:10,515:INFO:Checking exceptions
2023-02-02 19:09:10,515:INFO:Importing libraries
2023-02-02 19:09:10,515:INFO:Copying training dataset
2023-02-02 19:09:10,521:INFO:Defining folds
2023-02-02 19:09:10,521:INFO:Declaring metric variables
2023-02-02 19:09:10,525:INFO:Importing untrained model
2023-02-02 19:09:10,531:INFO:Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:10,540:INFO:Starting cross validation
2023-02-02 19:09:10,541:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:09:10,601:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:09:10,653:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 19:09:10,654:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 19:09:10,661:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 19:09:10,662:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 19:09:10,662:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 19:09:10,875:INFO:Calculating mean and std
2023-02-02 19:09:10,876:INFO:Creating metrics dataframe
2023-02-02 19:09:10,880:INFO:Uploading results into container
2023-02-02 19:09:10,880:INFO:Uploading model into container now
2023-02-02 19:09:10,881:INFO:_master_model_container: 99
2023-02-02 19:09:10,881:INFO:_display_container: 6
2023-02-02 19:09:10,883:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LassoLars(random_state=6043), sp=7,
                    window_length=7)
2023-02-02 19:09:10,883:INFO:create_model() successfully completed......................................
2023-02-02 19:09:11,023:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:11,023:INFO:Creating metrics dataframe
2023-02-02 19:09:11,040:INFO:Initializing Bayesian Ridge w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:11,040:INFO:Total runtime is 0.3085215369860331 minutes
2023-02-02 19:09:11,045:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:11,046:INFO:Initializing create_model()
2023-02-02 19:09:11,046:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=br_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:11,046:INFO:Checking exceptions
2023-02-02 19:09:11,046:INFO:Importing libraries
2023-02-02 19:09:11,046:INFO:Copying training dataset
2023-02-02 19:09:11,052:INFO:Defining folds
2023-02-02 19:09:11,052:INFO:Declaring metric variables
2023-02-02 19:09:11,057:INFO:Importing untrained model
2023-02-02 19:09:11,064:INFO:Bayesian Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:11,074:INFO:Starting cross validation
2023-02-02 19:09:11,076:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:09:11,130:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:09:11,419:INFO:Calculating mean and std
2023-02-02 19:09:11,421:INFO:Creating metrics dataframe
2023-02-02 19:09:11,425:INFO:Uploading results into container
2023-02-02 19:09:11,425:INFO:Uploading model into container now
2023-02-02 19:09:11,426:INFO:_master_model_container: 100
2023-02-02 19:09:11,426:INFO:_display_container: 6
2023-02-02 19:09:11,428:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=BayesianRidge(), sp=7, window_length=7)
2023-02-02 19:09:11,429:INFO:create_model() successfully completed......................................
2023-02-02 19:09:11,571:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:11,572:INFO:Creating metrics dataframe
2023-02-02 19:09:11,589:INFO:Initializing Huber w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:11,590:INFO:Total runtime is 0.31768889427185054 minutes
2023-02-02 19:09:11,594:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:11,594:INFO:Initializing create_model()
2023-02-02 19:09:11,594:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=huber_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:11,594:INFO:Checking exceptions
2023-02-02 19:09:11,595:INFO:Importing libraries
2023-02-02 19:09:11,595:INFO:Copying training dataset
2023-02-02 19:09:11,600:INFO:Defining folds
2023-02-02 19:09:11,600:INFO:Declaring metric variables
2023-02-02 19:09:11,605:INFO:Importing untrained model
2023-02-02 19:09:11,610:INFO:Huber w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:11,619:INFO:Starting cross validation
2023-02-02 19:09:11,621:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:09:11,686:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:09:11,803:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-02-02 19:09:11,821:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-02-02 19:09:11,858:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-02-02 19:09:12,058:INFO:Calculating mean and std
2023-02-02 19:09:12,059:INFO:Creating metrics dataframe
2023-02-02 19:09:12,064:INFO:Uploading results into container
2023-02-02 19:09:12,064:INFO:Uploading model into container now
2023-02-02 19:09:12,064:INFO:_master_model_container: 101
2023-02-02 19:09:12,064:INFO:_display_container: 6
2023-02-02 19:09:12,068:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=HuberRegressor(), sp=7, window_length=7)
2023-02-02 19:09:12,068:INFO:create_model() successfully completed......................................
2023-02-02 19:09:12,211:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:12,211:INFO:Creating metrics dataframe
2023-02-02 19:09:12,228:INFO:Initializing Passive Aggressive w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:12,228:INFO:Total runtime is 0.3283156752586364 minutes
2023-02-02 19:09:12,232:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:12,232:INFO:Initializing create_model()
2023-02-02 19:09:12,232:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=par_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:12,232:INFO:Checking exceptions
2023-02-02 19:09:12,232:INFO:Importing libraries
2023-02-02 19:09:12,232:INFO:Copying training dataset
2023-02-02 19:09:12,238:INFO:Defining folds
2023-02-02 19:09:12,238:INFO:Declaring metric variables
2023-02-02 19:09:12,243:INFO:Importing untrained model
2023-02-02 19:09:12,248:INFO:Passive Aggressive w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:12,258:INFO:Starting cross validation
2023-02-02 19:09:12,259:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:09:12,320:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:09:12,599:INFO:Calculating mean and std
2023-02-02 19:09:12,600:INFO:Creating metrics dataframe
2023-02-02 19:09:12,604:INFO:Uploading results into container
2023-02-02 19:09:12,604:INFO:Uploading model into container now
2023-02-02 19:09:12,605:INFO:_master_model_container: 102
2023-02-02 19:09:12,605:INFO:_display_container: 6
2023-02-02 19:09:12,607:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=PassiveAggressiveRegressor(random_state=6043),
                    sp=7, window_length=7)
2023-02-02 19:09:12,607:INFO:create_model() successfully completed......................................
2023-02-02 19:09:12,747:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:12,747:INFO:Creating metrics dataframe
2023-02-02 19:09:12,766:INFO:Initializing Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:12,766:INFO:Total runtime is 0.3372819026311238 minutes
2023-02-02 19:09:12,770:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:12,771:INFO:Initializing create_model()
2023-02-02 19:09:12,771:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=omp_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:12,771:INFO:Checking exceptions
2023-02-02 19:09:12,771:INFO:Importing libraries
2023-02-02 19:09:12,771:INFO:Copying training dataset
2023-02-02 19:09:12,776:INFO:Defining folds
2023-02-02 19:09:12,777:INFO:Declaring metric variables
2023-02-02 19:09:12,781:INFO:Importing untrained model
2023-02-02 19:09:12,787:INFO:Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:12,796:INFO:Starting cross validation
2023-02-02 19:09:12,797:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:09:12,855:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:09:12,907:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:09:12,908:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:09:12,919:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:09:12,920:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:09:12,922:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:09:13,147:INFO:Calculating mean and std
2023-02-02 19:09:13,149:INFO:Creating metrics dataframe
2023-02-02 19:09:13,153:INFO:Uploading results into container
2023-02-02 19:09:13,154:INFO:Uploading model into container now
2023-02-02 19:09:13,154:INFO:_master_model_container: 103
2023-02-02 19:09:13,154:INFO:_display_container: 6
2023-02-02 19:09:13,157:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=OrthogonalMatchingPursuit(), sp=7,
                    window_length=7)
2023-02-02 19:09:13,157:INFO:create_model() successfully completed......................................
2023-02-02 19:09:13,303:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:13,303:INFO:Creating metrics dataframe
2023-02-02 19:09:13,321:INFO:Initializing K Neighbors w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:13,321:INFO:Total runtime is 0.3465262333552042 minutes
2023-02-02 19:09:13,325:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:13,325:INFO:Initializing create_model()
2023-02-02 19:09:13,325:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=knn_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:13,325:INFO:Checking exceptions
2023-02-02 19:09:13,325:INFO:Importing libraries
2023-02-02 19:09:13,325:INFO:Copying training dataset
2023-02-02 19:09:13,331:INFO:Defining folds
2023-02-02 19:09:13,331:INFO:Declaring metric variables
2023-02-02 19:09:13,336:INFO:Importing untrained model
2023-02-02 19:09:13,341:INFO:K Neighbors w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:13,350:INFO:Starting cross validation
2023-02-02 19:09:13,351:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:09:13,414:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:09:13,823:INFO:Calculating mean and std
2023-02-02 19:09:13,824:INFO:Creating metrics dataframe
2023-02-02 19:09:13,829:INFO:Uploading results into container
2023-02-02 19:09:13,829:INFO:Uploading model into container now
2023-02-02 19:09:13,829:INFO:_master_model_container: 104
2023-02-02 19:09:13,829:INFO:_display_container: 6
2023-02-02 19:09:13,831:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=KNeighborsRegressor(n_jobs=-1), sp=7,
                    window_length=7)
2023-02-02 19:09:13,831:INFO:create_model() successfully completed......................................
2023-02-02 19:09:13,976:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:13,976:INFO:Creating metrics dataframe
2023-02-02 19:09:13,996:INFO:Initializing Decision Tree w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:13,996:INFO:Total runtime is 0.3577922304471333 minutes
2023-02-02 19:09:14,000:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:14,000:INFO:Initializing create_model()
2023-02-02 19:09:14,000:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=dt_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:14,000:INFO:Checking exceptions
2023-02-02 19:09:14,000:INFO:Importing libraries
2023-02-02 19:09:14,001:INFO:Copying training dataset
2023-02-02 19:09:14,006:INFO:Defining folds
2023-02-02 19:09:14,006:INFO:Declaring metric variables
2023-02-02 19:09:14,011:INFO:Importing untrained model
2023-02-02 19:09:14,016:INFO:Decision Tree w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:14,038:INFO:Starting cross validation
2023-02-02 19:09:14,041:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:09:14,091:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:09:14,390:INFO:Calculating mean and std
2023-02-02 19:09:14,391:INFO:Creating metrics dataframe
2023-02-02 19:09:14,396:INFO:Uploading results into container
2023-02-02 19:09:14,396:INFO:Uploading model into container now
2023-02-02 19:09:14,396:INFO:_master_model_container: 105
2023-02-02 19:09:14,397:INFO:_display_container: 6
2023-02-02 19:09:14,399:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=DecisionTreeRegressor(random_state=6043), sp=7,
                    window_length=7)
2023-02-02 19:09:14,399:INFO:create_model() successfully completed......................................
2023-02-02 19:09:14,541:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:14,541:INFO:Creating metrics dataframe
2023-02-02 19:09:14,559:INFO:Initializing Random Forest w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:14,560:INFO:Total runtime is 0.36718645890553786 minutes
2023-02-02 19:09:14,563:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:14,564:INFO:Initializing create_model()
2023-02-02 19:09:14,564:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=rf_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:14,564:INFO:Checking exceptions
2023-02-02 19:09:14,564:INFO:Importing libraries
2023-02-02 19:09:14,564:INFO:Copying training dataset
2023-02-02 19:09:14,569:INFO:Defining folds
2023-02-02 19:09:14,570:INFO:Declaring metric variables
2023-02-02 19:09:14,574:INFO:Importing untrained model
2023-02-02 19:09:14,579:INFO:Random Forest w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:14,589:INFO:Starting cross validation
2023-02-02 19:09:14,590:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:09:14,645:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:09:15,261:INFO:Calculating mean and std
2023-02-02 19:09:15,262:INFO:Creating metrics dataframe
2023-02-02 19:09:15,266:INFO:Uploading results into container
2023-02-02 19:09:15,266:INFO:Uploading model into container now
2023-02-02 19:09:15,267:INFO:_master_model_container: 106
2023-02-02 19:09:15,267:INFO:_display_container: 6
2023-02-02 19:09:15,270:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=RandomForestRegressor(n_jobs=-1,
                                                    random_state=6043),
                    sp=7, window_length=7)
2023-02-02 19:09:15,270:INFO:create_model() successfully completed......................................
2023-02-02 19:09:15,412:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:15,412:INFO:Creating metrics dataframe
2023-02-02 19:09:15,432:INFO:Initializing Extra Trees w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:15,433:INFO:Total runtime is 0.38172747294108067 minutes
2023-02-02 19:09:15,437:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:15,437:INFO:Initializing create_model()
2023-02-02 19:09:15,437:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=et_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:15,437:INFO:Checking exceptions
2023-02-02 19:09:15,437:INFO:Importing libraries
2023-02-02 19:09:15,438:INFO:Copying training dataset
2023-02-02 19:09:15,443:INFO:Defining folds
2023-02-02 19:09:15,443:INFO:Declaring metric variables
2023-02-02 19:09:15,448:INFO:Importing untrained model
2023-02-02 19:09:15,453:INFO:Extra Trees w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:15,463:INFO:Starting cross validation
2023-02-02 19:09:15,464:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:09:15,524:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:09:16,099:INFO:Calculating mean and std
2023-02-02 19:09:16,100:INFO:Creating metrics dataframe
2023-02-02 19:09:16,105:INFO:Uploading results into container
2023-02-02 19:09:16,105:INFO:Uploading model into container now
2023-02-02 19:09:16,105:INFO:_master_model_container: 107
2023-02-02 19:09:16,106:INFO:_display_container: 6
2023-02-02 19:09:16,108:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(n_jobs=-1, random_state=6043),
                    sp=7, window_length=7)
2023-02-02 19:09:16,108:INFO:create_model() successfully completed......................................
2023-02-02 19:09:16,252:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:16,253:INFO:Creating metrics dataframe
2023-02-02 19:09:16,271:INFO:Initializing Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:16,272:INFO:Total runtime is 0.39571548700332637 minutes
2023-02-02 19:09:16,276:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:16,276:INFO:Initializing create_model()
2023-02-02 19:09:16,276:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=gbr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:16,276:INFO:Checking exceptions
2023-02-02 19:09:16,276:INFO:Importing libraries
2023-02-02 19:09:16,276:INFO:Copying training dataset
2023-02-02 19:09:16,282:INFO:Defining folds
2023-02-02 19:09:16,282:INFO:Declaring metric variables
2023-02-02 19:09:16,286:INFO:Importing untrained model
2023-02-02 19:09:16,292:INFO:Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:16,302:INFO:Starting cross validation
2023-02-02 19:09:16,303:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:09:16,363:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:09:16,678:INFO:Calculating mean and std
2023-02-02 19:09:16,680:INFO:Creating metrics dataframe
2023-02-02 19:09:16,684:INFO:Uploading results into container
2023-02-02 19:09:16,684:INFO:Uploading model into container now
2023-02-02 19:09:16,685:INFO:_master_model_container: 108
2023-02-02 19:09:16,685:INFO:_display_container: 6
2023-02-02 19:09:16,689:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=GradientBoostingRegressor(random_state=6043),
                    sp=7, window_length=7)
2023-02-02 19:09:16,689:INFO:create_model() successfully completed......................................
2023-02-02 19:09:16,829:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:16,829:INFO:Creating metrics dataframe
2023-02-02 19:09:16,848:INFO:Initializing AdaBoost w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:16,848:INFO:Total runtime is 0.405309518178304 minutes
2023-02-02 19:09:16,852:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:16,852:INFO:Initializing create_model()
2023-02-02 19:09:16,852:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=ada_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:16,852:INFO:Checking exceptions
2023-02-02 19:09:16,853:INFO:Importing libraries
2023-02-02 19:09:16,853:INFO:Copying training dataset
2023-02-02 19:09:16,858:INFO:Defining folds
2023-02-02 19:09:16,858:INFO:Declaring metric variables
2023-02-02 19:09:16,862:INFO:Importing untrained model
2023-02-02 19:09:16,868:INFO:AdaBoost w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:16,877:INFO:Starting cross validation
2023-02-02 19:09:16,878:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:09:16,931:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:09:17,330:INFO:Calculating mean and std
2023-02-02 19:09:17,331:INFO:Creating metrics dataframe
2023-02-02 19:09:17,336:INFO:Uploading results into container
2023-02-02 19:09:17,336:INFO:Uploading model into container now
2023-02-02 19:09:17,336:INFO:_master_model_container: 109
2023-02-02 19:09:17,336:INFO:_display_container: 6
2023-02-02 19:09:17,338:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=AdaBoostRegressor(random_state=6043), sp=7,
                    window_length=7)
2023-02-02 19:09:17,338:INFO:create_model() successfully completed......................................
2023-02-02 19:09:17,480:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:17,480:INFO:Creating metrics dataframe
2023-02-02 19:09:17,501:INFO:Initializing Light Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:17,501:INFO:Total runtime is 0.4162027875582377 minutes
2023-02-02 19:09:17,506:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:17,506:INFO:Initializing create_model()
2023-02-02 19:09:17,506:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=lightgbm_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1286092B0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:17,506:INFO:Checking exceptions
2023-02-02 19:09:17,506:INFO:Importing libraries
2023-02-02 19:09:17,506:INFO:Copying training dataset
2023-02-02 19:09:17,512:INFO:Defining folds
2023-02-02 19:09:17,512:INFO:Declaring metric variables
2023-02-02 19:09:17,516:INFO:Importing untrained model
2023-02-02 19:09:17,522:INFO:Light Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:17,530:INFO:Starting cross validation
2023-02-02 19:09:17,532:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=16, step_length=5), n_jobs=-1
2023-02-02 19:09:17,590:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sktime\utils\seasonality.py:48: UserWarning: Did not perform seasonality test, as `y`` is too short for the given `sp`, returned: False
  warn(

2023-02-02 19:09:17,897:INFO:Calculating mean and std
2023-02-02 19:09:17,898:INFO:Creating metrics dataframe
2023-02-02 19:09:17,902:INFO:Uploading results into container
2023-02-02 19:09:17,902:INFO:Uploading model into container now
2023-02-02 19:09:17,903:INFO:_master_model_container: 110
2023-02-02 19:09:17,903:INFO:_display_container: 6
2023-02-02 19:09:17,906:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LGBMRegressor(random_state=6043), sp=7,
                    window_length=7)
2023-02-02 19:09:17,906:INFO:create_model() successfully completed......................................
2023-02-02 19:09:18,047:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:18,048:INFO:Creating metrics dataframe
2023-02-02 19:09:18,081:INFO:Initializing create_model()
2023-02-02 19:09:18,081:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C124155E80>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:18,081:INFO:Checking exceptions
2023-02-02 19:09:18,083:INFO:Importing libraries
2023-02-02 19:09:18,083:INFO:Copying training dataset
2023-02-02 19:09:18,088:INFO:Defining folds
2023-02-02 19:09:18,088:INFO:Declaring metric variables
2023-02-02 19:09:18,088:INFO:Importing untrained model
2023-02-02 19:09:18,088:INFO:Declaring custom model
2023-02-02 19:09:18,090:INFO:ARIMA Imported successfully
2023-02-02 19:09:18,090:INFO:Cross validation set to False
2023-02-02 19:09:18,090:INFO:Fitting Model
2023-02-02 19:09:18,163:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:09:18,163:INFO:create_model() successfully completed......................................
2023-02-02 19:09:18,359:INFO:_master_model_container: 110
2023-02-02 19:09:18,359:INFO:_display_container: 6
2023-02-02 19:09:18,360:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:09:18,361:INFO:compare_models() successfully completed......................................
2023-02-02 19:09:27,765:INFO:PyCaret TSForecastingExperiment
2023-02-02 19:09:27,765:INFO:Logging name: ts-default-name
2023-02-02 19:09:27,765:INFO:ML Usecase: MLUsecase.TIME_SERIES
2023-02-02 19:09:27,765:INFO:version 3.0.0.rc8
2023-02-02 19:09:27,766:INFO:Initializing setup()
2023-02-02 19:09:27,766:INFO:self.USI: 0ff3
2023-02-02 19:09:27,766:INFO:self._variable_keys: {'gpu_n_jobs_param', 'candidate_sps', 'fold_generator', 'n_jobs_param', 'enforce_exogenous', 'y_test_transformed', 'enforce_pi', 'pipeline', 'X_test', 'fh', 'idx', 'y_test', 'primary_sp_to_use', 'memory', 'html_param', 'gpu_param', 'data', 'approach_type', 'log_plots_param', 'y_transformed', 'X_test_transformed', 'exp_name_log', 'fold_param', 'strictly_positive', 'seed', 'X', 'exp_id', 'X_train_transformed', 'exogenous_present', 'model_engines', 'X_transformed', 'index_type', 'all_sps_to_use', 'seasonality_present', 'y_train', 'USI', 'y', 'X_train', 'significant_sps', 'y_train_transformed', '_available_plots', 'logging_param', 'significant_sps_no_harmonics', '_ml_usecase'}
2023-02-02 19:09:27,766:INFO:Checking environment
2023-02-02 19:09:27,766:INFO:python_version: 3.9.16
2023-02-02 19:09:27,766:INFO:python_build: ('main', 'Jan 11 2023 16:16:36')
2023-02-02 19:09:27,766:INFO:machine: AMD64
2023-02-02 19:09:27,766:INFO:platform: Windows-10-10.0.19045-SP0
2023-02-02 19:09:27,766:INFO:Memory: svmem(total=12825538560, available=3325313024, percent=74.1, used=9500225536, free=3325313024)
2023-02-02 19:09:27,766:INFO:Physical Core: 4
2023-02-02 19:09:27,766:INFO:Logical Core: 8
2023-02-02 19:09:27,766:INFO:Checking libraries
2023-02-02 19:09:27,766:INFO:System:
2023-02-02 19:09:27,766:INFO:    python: 3.9.16 (main, Jan 11 2023, 16:16:36) [MSC v.1916 64 bit (AMD64)]
2023-02-02 19:09:27,767:INFO:executable: C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\python.exe
2023-02-02 19:09:27,767:INFO:   machine: Windows-10-10.0.19045-SP0
2023-02-02 19:09:27,767:INFO:PyCaret required dependencies:
2023-02-02 19:09:27,767:INFO:                 pip: 22.3.1
2023-02-02 19:09:27,767:INFO:          setuptools: 65.6.3
2023-02-02 19:09:27,767:INFO:             pycaret: 3.0.0rc8
2023-02-02 19:09:27,767:INFO:             IPython: 8.9.0
2023-02-02 19:09:27,767:INFO:          ipywidgets: 8.0.4
2023-02-02 19:09:27,767:INFO:                tqdm: 4.64.1
2023-02-02 19:09:27,767:INFO:               numpy: 1.23.5
2023-02-02 19:09:27,767:INFO:              pandas: 1.5.3
2023-02-02 19:09:27,767:INFO:              jinja2: 3.1.2
2023-02-02 19:09:27,767:INFO:               scipy: 1.10.0
2023-02-02 19:09:27,767:INFO:              joblib: 1.2.0
2023-02-02 19:09:27,767:INFO:             sklearn: 1.1.3
2023-02-02 19:09:27,768:INFO:                pyod: 1.0.7
2023-02-02 19:09:27,768:INFO:            imblearn: 0.10.1
2023-02-02 19:09:27,768:INFO:   category_encoders: 2.6.0
2023-02-02 19:09:27,768:INFO:            lightgbm: 3.3.5
2023-02-02 19:09:27,768:INFO:               numba: 0.56.4
2023-02-02 19:09:27,768:INFO:            requests: 2.28.2
2023-02-02 19:09:27,768:INFO:          matplotlib: 3.7.0rc1
2023-02-02 19:09:27,768:INFO:          scikitplot: 0.3.7
2023-02-02 19:09:27,768:INFO:         yellowbrick: 1.5
2023-02-02 19:09:27,768:INFO:              plotly: 5.13.0
2023-02-02 19:09:27,768:INFO:             kaleido: 0.2.1
2023-02-02 19:09:27,768:INFO:         statsmodels: 0.13.5
2023-02-02 19:09:27,768:INFO:              sktime: 0.16.0
2023-02-02 19:09:27,768:INFO:               tbats: 1.1.2
2023-02-02 19:09:27,768:INFO:            pmdarima: 2.0.2
2023-02-02 19:09:27,768:INFO:              psutil: 5.9.4
2023-02-02 19:09:27,768:INFO:PyCaret optional dependencies:
2023-02-02 19:09:27,769:INFO:                shap: Not installed
2023-02-02 19:09:27,769:INFO:           interpret: Not installed
2023-02-02 19:09:27,769:INFO:                umap: Not installed
2023-02-02 19:09:27,769:INFO:    pandas_profiling: Not installed
2023-02-02 19:09:27,769:INFO:  explainerdashboard: Not installed
2023-02-02 19:09:27,769:INFO:             autoviz: Not installed
2023-02-02 19:09:27,769:INFO:           fairlearn: Not installed
2023-02-02 19:09:27,769:INFO:             xgboost: Not installed
2023-02-02 19:09:27,769:INFO:            catboost: Not installed
2023-02-02 19:09:27,769:INFO:              kmodes: Not installed
2023-02-02 19:09:27,769:INFO:             mlxtend: Not installed
2023-02-02 19:09:27,769:INFO:       statsforecast: Not installed
2023-02-02 19:09:27,769:INFO:        tune_sklearn: Not installed
2023-02-02 19:09:27,769:INFO:                 ray: Not installed
2023-02-02 19:09:27,769:INFO:            hyperopt: Not installed
2023-02-02 19:09:27,770:INFO:              optuna: Not installed
2023-02-02 19:09:27,770:INFO:               skopt: Not installed
2023-02-02 19:09:27,770:INFO:              mlflow: Not installed
2023-02-02 19:09:27,770:INFO:              gradio: Not installed
2023-02-02 19:09:27,770:INFO:             fastapi: Not installed
2023-02-02 19:09:27,770:INFO:             uvicorn: Not installed
2023-02-02 19:09:27,770:INFO:              m2cgen: Not installed
2023-02-02 19:09:27,770:INFO:           evidently: Not installed
2023-02-02 19:09:27,770:INFO:                nltk: Not installed
2023-02-02 19:09:27,770:INFO:            pyLDAvis: Not installed
2023-02-02 19:09:27,770:INFO:              gensim: Not installed
2023-02-02 19:09:27,770:INFO:               spacy: Not installed
2023-02-02 19:09:27,770:INFO:           wordcloud: Not installed
2023-02-02 19:09:27,770:INFO:            textblob: Not installed
2023-02-02 19:09:27,770:INFO:               fugue: Not installed
2023-02-02 19:09:27,770:INFO:           streamlit: Not installed
2023-02-02 19:09:27,770:INFO:             prophet: Not installed
2023-02-02 19:09:27,771:INFO:None
2023-02-02 19:09:27,775:INFO:Set Forecast Horizon.
2023-02-02 19:09:27,776:INFO:Set up Train-Test Splits.
2023-02-02 19:09:27,810:INFO:Finished creating preprocessing pipeline.
2023-02-02 19:09:27,812:INFO:Pipeline: ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                DummyForecaster())]))])
2023-02-02 19:09:27,812:INFO:Set up Seasonal Period.
2023-02-02 19:09:27,814:INFO:Set up whether Multiplicative components allowed.
2023-02-02 19:09:27,845:INFO:Creating final display dataframe.
2023-02-02 19:09:27,856:INFO:Setup Display Container:                                          Description                    Value
0                                         session_id                     1322
1                                             Target                   Vendas
2                                           Approach               Univariate
3                                Exogenous Variables              Not Present
4                                Original data shape                  (46, 1)
5                             Transformed data shape                  (46, 1)
6                        Transformed train set shape                  (41, 1)
7                         Transformed test set shape                   (5, 1)
8                           Rows with missing values                     0.0%
9                                     Fold Generator  ExpandingWindowSplitter
10                                       Fold Number                        1
11                       Enforce Prediction Interval                    False
12                   Splits used for hyperparameters                      all
13                        Seasonality Detection Algo                     auto
14                            Max Period to Consider                     None
15                         Seasonal Period(s) Tested                      [7]
16                    Significant Seasonal Period(s)                      [7]
17  Significant Seasonal Period(s) without Harmonics                      [7]
18                                  Remove Harmonics                    False
19                            Harmonics Order Method             harmonic_max
20                          Num Seasonalities to Use                        1
21                          All Seasonalities to Use                      [7]
22                               Primary Seasonality                        7
23                               Seasonality Present                     True
24                          Target Strictly Positive                     True
25                                Target White Noise                       No
26                                     Recommended d                        0
27                            Recommended Seasonal D                        1
28                                        Preprocess                    False
29                                          CPU Jobs                       -1
30                                           Use GPU                    False
31                                    Log Experiment                    False
32                                   Experiment Name          ts-default-name
33                                               USI                     0ff3
2023-02-02 19:09:27,863:INFO:Engine successfully changes for model 'auto_arima' to 'pmdarima'.
2023-02-02 19:09:27,867:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:27,867:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,868:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,868:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,868:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,869:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,869:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,869:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,870:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,870:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,872:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,874:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,874:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,875:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,875:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,875:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,876:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,876:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,876:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,876:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,876:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,877:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,877:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,877:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,880:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:27,880:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,881:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,881:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,881:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,882:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,882:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,882:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,882:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,883:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,885:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,886:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,887:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,887:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,887:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,888:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,888:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,888:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,888:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,888:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,889:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,889:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,889:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,889:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,889:INFO:Engine successfully changes for model 'lr_cds_dt' to 'sklearn'.
2023-02-02 19:09:27,892:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:27,893:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,893:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,893:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,893:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,894:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,894:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,894:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,894:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,896:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,898:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,898:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,898:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,899:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,899:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,899:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,900:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,900:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,900:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,900:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,900:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,900:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,900:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,903:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:27,904:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,904:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,904:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,904:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,905:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,905:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,905:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,906:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,907:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,909:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,909:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,909:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,910:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,910:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,910:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,911:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,911:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,911:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,911:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,911:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,911:INFO:Engine successfully changes for model 'en_cds_dt' to 'sklearn'.
2023-02-02 19:09:27,914:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:27,915:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,915:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,915:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,916:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,916:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,916:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,916:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,918:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,920:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,920:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,920:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,921:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,921:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,921:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,922:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,922:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,922:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,922:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,922:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,922:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,922:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,926:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:27,927:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,927:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,927:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,928:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,928:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,928:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,928:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,930:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,932:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,932:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,933:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,933:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,933:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,933:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,934:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,934:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,934:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,934:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,934:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,934:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,934:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,935:INFO:Engine successfully changes for model 'ridge_cds_dt' to 'sklearn'.
2023-02-02 19:09:27,938:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:27,938:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,939:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,939:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,939:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,939:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,940:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,941:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,943:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,943:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,943:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,944:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,944:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,944:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,945:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,945:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,945:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,945:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,945:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,945:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,945:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,948:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:27,949:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,949:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,950:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,950:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,950:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,950:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,952:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,954:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,954:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,954:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,954:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,955:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,955:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,955:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,956:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,956:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,956:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,956:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,956:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,956:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,956:INFO:Engine successfully changes for model 'lasso_cds_dt' to 'sklearn'.
2023-02-02 19:09:27,959:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:27,960:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,960:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,961:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,961:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,961:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,963:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,964:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,965:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,965:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,965:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,966:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,966:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,966:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,966:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,966:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,966:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,967:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,967:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,967:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,970:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:27,971:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,971:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,971:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,971:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,972:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,973:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,975:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,975:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,976:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,976:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,976:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,977:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,977:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,977:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,977:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,977:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,977:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,977:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,978:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,978:INFO:Engine successfully changes for model 'lar_cds_dt' to 'sklearn'.
2023-02-02 19:09:27,981:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:27,982:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,982:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,983:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,983:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,985:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,986:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,987:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,987:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,987:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,987:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,988:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,988:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,988:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,988:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,988:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,989:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,989:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,989:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,992:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:27,993:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,993:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,993:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,994:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,995:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,997:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,997:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,998:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,998:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,998:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,999:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,999:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,999:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,999:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:27,999:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:27,999:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,000:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,000:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,000:INFO:Engine successfully changes for model 'llar_cds_dt' to 'sklearn'.
2023-02-02 19:09:28,003:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,004:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,004:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,004:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,006:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,008:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,008:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,008:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,009:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,009:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,009:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,010:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,010:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,010:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,010:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,010:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,010:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,010:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,013:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,014:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,015:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,015:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,016:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,018:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,018:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,019:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,019:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,020:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,020:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,021:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,021:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,021:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,021:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,021:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,021:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,021:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,022:INFO:Engine successfully changes for model 'br_cds_dt' to 'sklearn'.
2023-02-02 19:09:28,025:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,026:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,026:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,028:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,030:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,030:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,030:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,031:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,031:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,031:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,031:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,031:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,032:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,032:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,032:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,032:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,032:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,035:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,036:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,037:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,038:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,040:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,040:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,041:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,041:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,041:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,042:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,042:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,042:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,042:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,042:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,042:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,043:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,043:INFO:Engine successfully changes for model 'huber_cds_dt' to 'sklearn'.
2023-02-02 19:09:28,046:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,047:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,049:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,050:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,051:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,051:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,051:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,052:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,052:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,052:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,052:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,052:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,053:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,053:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,053:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,053:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,056:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,058:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,059:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,061:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,061:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,062:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,062:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,062:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,062:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,063:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,063:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,063:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,063:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,063:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,063:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,063:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,064:INFO:Engine successfully changes for model 'par_cds_dt' to 'sklearn'.
2023-02-02 19:09:28,066:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,070:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,071:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,071:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,072:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,072:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,072:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,073:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,073:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,073:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,073:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,073:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,074:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,074:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,074:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,077:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,080:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,081:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,082:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,082:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,082:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,083:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,083:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,083:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,083:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,083:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,083:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,084:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,084:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,084:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,084:INFO:Engine successfully changes for model 'omp_cds_dt' to 'sklearn'.
2023-02-02 19:09:28,087:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,092:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,092:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,092:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,093:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,093:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,093:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,094:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,094:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,094:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,094:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,094:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,094:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,094:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,097:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,102:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,102:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,102:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,103:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,103:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,103:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,104:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,104:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,104:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,104:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,104:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,104:INFO:Engine successfully changes for model 'knn_cds_dt' to 'sklearn'.
2023-02-02 19:09:28,108:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,113:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,113:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,113:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,113:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,114:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,114:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,114:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,114:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,114:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,115:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,115:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,115:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,118:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,123:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,123:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,124:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,124:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,124:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,125:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,125:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,125:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,125:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,125:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,125:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,125:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,125:INFO:Engine successfully changes for model 'dt_cds_dt' to 'sklearn'.
2023-02-02 19:09:28,128:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,133:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,134:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,134:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,134:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,135:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,135:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,135:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,135:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,135:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,135:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,135:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,138:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,144:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,144:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,144:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,144:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,145:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,145:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,145:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,145:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,145:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,145:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,145:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,146:INFO:Engine successfully changes for model 'rf_cds_dt' to 'sklearn'.
2023-02-02 19:09:28,148:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,154:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,154:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,154:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,155:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,155:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,155:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,155:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,155:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,155:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,155:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,158:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,164:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,164:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,164:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,165:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,165:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,165:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,165:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,165:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,165:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,165:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,165:INFO:Engine successfully changes for model 'et_cds_dt' to 'sklearn'.
2023-02-02 19:09:28,169:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,176:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,176:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,176:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,176:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,176:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,176:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,177:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,177:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,177:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,180:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,186:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,187:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,187:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,187:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,187:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,187:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,188:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,188:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,188:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,188:INFO:Engine successfully changes for model 'gbr_cds_dt' to 'sklearn'.
2023-02-02 19:09:28,191:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,197:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,197:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,197:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,197:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,197:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,198:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,198:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,198:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,201:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,207:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,208:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,208:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,208:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,208:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,208:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,208:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,208:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,209:INFO:Engine successfully changes for model 'ada_cds_dt' to 'sklearn'.
2023-02-02 19:09:28,211:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,218:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,218:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,218:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,219:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,219:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,219:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,219:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,223:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,229:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,229:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,229:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,229:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,230:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,230:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,230:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,230:INFO:Engine successfully changes for model 'xgboost_cds_dt' to 'sklearn'.
2023-02-02 19:09:28,233:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,239:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,239:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,239:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,239:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,239:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,240:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,242:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,249:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,249:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,249:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,249:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,249:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,249:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,249:INFO:Engine successfully changes for model 'lightgbm_cds_dt' to 'sklearn'.
2023-02-02 19:09:28,252:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,258:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,259:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,259:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,259:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,259:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,262:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,268:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,268:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,268:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:09:28,268:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,268:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,269:INFO:Engine successfully changes for model 'catboost_cds_dt' to 'sklearn'.
2023-02-02 19:09:28,271:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,278:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,278:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,278:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,278:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,281:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,287:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,287:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,287:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,288:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,291:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,297:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,297:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,297:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,297:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,300:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:09:28,306:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,307:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,307:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,307:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:09:28,308:INFO:setup() successfully completed in 0.54s...............
2023-02-02 19:09:28,324:INFO:Initializing compare_models()
2023-02-02 19:09:28,324:INFO:compare_models(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, include=None, fold=None, round=4, cross_validation=True, sort=MASE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MASE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.time_series.forecasting.oop.TSForecastingExperiment'>}, exclude=None)
2023-02-02 19:09:28,324:INFO:Checking exceptions
2023-02-02 19:09:28,327:INFO:Preparing display monitor
2023-02-02 19:09:28,357:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:709: UserWarning: Unsupported estimator `ensemble_forecaster` for method `compare_models()`, removing from model_library
  warnings.warn(

2023-02-02 19:09:28,359:INFO:Initializing Naive Forecaster
2023-02-02 19:09:28,359:INFO:Total runtime is 0.0 minutes
2023-02-02 19:09:28,364:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:28,364:INFO:Initializing create_model()
2023-02-02 19:09:28,364:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=naive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:28,364:INFO:Checking exceptions
2023-02-02 19:09:28,364:INFO:Importing libraries
2023-02-02 19:09:28,364:INFO:Copying training dataset
2023-02-02 19:09:28,369:INFO:Defining folds
2023-02-02 19:09:28,369:INFO:Declaring metric variables
2023-02-02 19:09:28,373:INFO:Importing untrained model
2023-02-02 19:09:28,378:INFO:Naive Forecaster Imported successfully
2023-02-02 19:09:28,387:INFO:Starting cross validation
2023-02-02 19:09:28,388:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:28,433:INFO:Calculating mean and std
2023-02-02 19:09:28,433:INFO:Creating metrics dataframe
2023-02-02 19:09:28,437:INFO:Uploading results into container
2023-02-02 19:09:28,437:INFO:Uploading model into container now
2023-02-02 19:09:28,438:INFO:_master_model_container: 1
2023-02-02 19:09:28,438:INFO:_display_container: 2
2023-02-02 19:09:28,438:INFO:NaiveForecaster()
2023-02-02 19:09:28,438:INFO:create_model() successfully completed......................................
2023-02-02 19:09:28,582:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:28,582:INFO:Creating metrics dataframe
2023-02-02 19:09:28,593:INFO:Initializing Grand Means Forecaster
2023-02-02 19:09:28,593:INFO:Total runtime is 0.0038975954055786135 minutes
2023-02-02 19:09:28,597:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:28,598:INFO:Initializing create_model()
2023-02-02 19:09:28,598:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=grand_means, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:28,598:INFO:Checking exceptions
2023-02-02 19:09:28,598:INFO:Importing libraries
2023-02-02 19:09:28,598:INFO:Copying training dataset
2023-02-02 19:09:28,603:INFO:Defining folds
2023-02-02 19:09:28,603:INFO:Declaring metric variables
2023-02-02 19:09:28,607:INFO:Importing untrained model
2023-02-02 19:09:28,612:INFO:Grand Means Forecaster Imported successfully
2023-02-02 19:09:28,623:INFO:Starting cross validation
2023-02-02 19:09:28,625:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:28,668:INFO:Calculating mean and std
2023-02-02 19:09:28,669:INFO:Creating metrics dataframe
2023-02-02 19:09:28,673:INFO:Uploading results into container
2023-02-02 19:09:28,673:INFO:Uploading model into container now
2023-02-02 19:09:28,674:INFO:_master_model_container: 2
2023-02-02 19:09:28,674:INFO:_display_container: 2
2023-02-02 19:09:28,674:INFO:NaiveForecaster(strategy='mean')
2023-02-02 19:09:28,674:INFO:create_model() successfully completed......................................
2023-02-02 19:09:28,823:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:28,823:INFO:Creating metrics dataframe
2023-02-02 19:09:28,835:INFO:Initializing Seasonal Naive Forecaster
2023-02-02 19:09:28,835:INFO:Total runtime is 0.007927072048187257 minutes
2023-02-02 19:09:28,839:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:28,839:INFO:Initializing create_model()
2023-02-02 19:09:28,839:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=snaive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:28,840:INFO:Checking exceptions
2023-02-02 19:09:28,840:INFO:Importing libraries
2023-02-02 19:09:28,840:INFO:Copying training dataset
2023-02-02 19:09:28,846:INFO:Defining folds
2023-02-02 19:09:28,846:INFO:Declaring metric variables
2023-02-02 19:09:28,852:INFO:Importing untrained model
2023-02-02 19:09:28,857:INFO:Seasonal Naive Forecaster Imported successfully
2023-02-02 19:09:28,869:INFO:Starting cross validation
2023-02-02 19:09:28,870:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:28,909:INFO:Calculating mean and std
2023-02-02 19:09:28,910:INFO:Creating metrics dataframe
2023-02-02 19:09:28,914:INFO:Uploading results into container
2023-02-02 19:09:28,914:INFO:Uploading model into container now
2023-02-02 19:09:28,915:INFO:_master_model_container: 3
2023-02-02 19:09:28,915:INFO:_display_container: 2
2023-02-02 19:09:28,915:INFO:NaiveForecaster(sp=7)
2023-02-02 19:09:28,915:INFO:create_model() successfully completed......................................
2023-02-02 19:09:29,056:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:29,056:INFO:Creating metrics dataframe
2023-02-02 19:09:29,068:INFO:Initializing Polynomial Trend Forecaster
2023-02-02 19:09:29,068:INFO:Total runtime is 0.0118246595064799 minutes
2023-02-02 19:09:29,072:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:29,072:INFO:Initializing create_model()
2023-02-02 19:09:29,072:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=polytrend, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:29,072:INFO:Checking exceptions
2023-02-02 19:09:29,072:INFO:Importing libraries
2023-02-02 19:09:29,073:INFO:Copying training dataset
2023-02-02 19:09:29,077:INFO:Defining folds
2023-02-02 19:09:29,078:INFO:Declaring metric variables
2023-02-02 19:09:29,082:INFO:Importing untrained model
2023-02-02 19:09:29,087:INFO:Polynomial Trend Forecaster Imported successfully
2023-02-02 19:09:29,097:INFO:Starting cross validation
2023-02-02 19:09:29,099:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:29,132:INFO:Calculating mean and std
2023-02-02 19:09:29,132:INFO:Creating metrics dataframe
2023-02-02 19:09:29,136:INFO:Uploading results into container
2023-02-02 19:09:29,137:INFO:Uploading model into container now
2023-02-02 19:09:29,137:INFO:_master_model_container: 4
2023-02-02 19:09:29,137:INFO:_display_container: 2
2023-02-02 19:09:29,137:INFO:PolynomialTrendForecaster()
2023-02-02 19:09:29,137:INFO:create_model() successfully completed......................................
2023-02-02 19:09:29,281:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:29,281:INFO:Creating metrics dataframe
2023-02-02 19:09:29,293:INFO:Initializing ARIMA
2023-02-02 19:09:29,293:INFO:Total runtime is 0.015572325388590495 minutes
2023-02-02 19:09:29,297:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:29,298:INFO:Initializing create_model()
2023-02-02 19:09:29,298:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:29,298:INFO:Checking exceptions
2023-02-02 19:09:29,298:INFO:Importing libraries
2023-02-02 19:09:29,298:INFO:Copying training dataset
2023-02-02 19:09:29,303:INFO:Defining folds
2023-02-02 19:09:29,303:INFO:Declaring metric variables
2023-02-02 19:09:29,307:INFO:Importing untrained model
2023-02-02 19:09:29,312:INFO:ARIMA Imported successfully
2023-02-02 19:09:29,321:INFO:Starting cross validation
2023-02-02 19:09:29,322:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:29,446:INFO:Calculating mean and std
2023-02-02 19:09:29,448:INFO:Creating metrics dataframe
2023-02-02 19:09:29,452:INFO:Uploading results into container
2023-02-02 19:09:29,452:INFO:Uploading model into container now
2023-02-02 19:09:29,453:INFO:_master_model_container: 5
2023-02-02 19:09:29,453:INFO:_display_container: 2
2023-02-02 19:09:29,453:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:09:29,453:INFO:create_model() successfully completed......................................
2023-02-02 19:09:29,596:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:29,597:INFO:Creating metrics dataframe
2023-02-02 19:09:29,611:INFO:Initializing Auto ARIMA
2023-02-02 19:09:29,611:INFO:Total runtime is 0.020869064331054687 minutes
2023-02-02 19:09:29,616:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:29,617:INFO:Initializing create_model()
2023-02-02 19:09:29,617:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=auto_arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:29,617:INFO:Checking exceptions
2023-02-02 19:09:29,617:INFO:Importing libraries
2023-02-02 19:09:29,617:INFO:Copying training dataset
2023-02-02 19:09:29,622:INFO:Defining folds
2023-02-02 19:09:29,622:INFO:Declaring metric variables
2023-02-02 19:09:29,627:INFO:Importing untrained model
2023-02-02 19:09:29,633:INFO:Auto ARIMA Imported successfully
2023-02-02 19:09:29,649:INFO:Starting cross validation
2023-02-02 19:09:29,651:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:32,979:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pmdarima\arima\_auto_solvers.py:522: ModelFitWarning: Error fitting  ARIMA(2,0,1)(2,1,0)[7] intercept (if you do not want to see these warnings, run with error_action="ignore").
  warnings.warn(warning_str, ModelFitWarning)

2023-02-02 19:09:34,820:INFO:Calculating mean and std
2023-02-02 19:09:34,822:INFO:Creating metrics dataframe
2023-02-02 19:09:34,826:INFO:Uploading results into container
2023-02-02 19:09:34,826:INFO:Uploading model into container now
2023-02-02 19:09:34,826:INFO:_master_model_container: 6
2023-02-02 19:09:34,826:INFO:_display_container: 2
2023-02-02 19:09:34,827:INFO:AutoARIMA(random_state=1322, sp=7, suppress_warnings=True)
2023-02-02 19:09:34,827:INFO:create_model() successfully completed......................................
2023-02-02 19:09:34,968:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:34,968:INFO:Creating metrics dataframe
2023-02-02 19:09:34,983:INFO:Initializing Exponential Smoothing
2023-02-02 19:09:34,983:INFO:Total runtime is 0.11039558251698812 minutes
2023-02-02 19:09:34,988:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:34,988:INFO:Initializing create_model()
2023-02-02 19:09:34,988:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=exp_smooth, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:34,988:INFO:Checking exceptions
2023-02-02 19:09:34,989:INFO:Importing libraries
2023-02-02 19:09:34,989:INFO:Copying training dataset
2023-02-02 19:09:34,994:INFO:Defining folds
2023-02-02 19:09:34,994:INFO:Declaring metric variables
2023-02-02 19:09:34,999:INFO:Importing untrained model
2023-02-02 19:09:35,004:INFO:Exponential Smoothing Imported successfully
2023-02-02 19:09:35,012:INFO:Starting cross validation
2023-02-02 19:09:35,014:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:35,234:INFO:Calculating mean and std
2023-02-02 19:09:35,235:INFO:Creating metrics dataframe
2023-02-02 19:09:35,239:INFO:Uploading results into container
2023-02-02 19:09:35,239:INFO:Uploading model into container now
2023-02-02 19:09:35,240:INFO:_master_model_container: 7
2023-02-02 19:09:35,240:INFO:_display_container: 2
2023-02-02 19:09:35,240:INFO:ExponentialSmoothing(seasonal='mul', sp=7, trend='add')
2023-02-02 19:09:35,240:INFO:create_model() successfully completed......................................
2023-02-02 19:09:35,381:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:35,381:INFO:Creating metrics dataframe
2023-02-02 19:09:35,395:INFO:Initializing Croston
2023-02-02 19:09:35,395:INFO:Total runtime is 0.11726494630177817 minutes
2023-02-02 19:09:35,399:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:35,400:INFO:Initializing create_model()
2023-02-02 19:09:35,400:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=croston, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:35,400:INFO:Checking exceptions
2023-02-02 19:09:35,400:INFO:Importing libraries
2023-02-02 19:09:35,400:INFO:Copying training dataset
2023-02-02 19:09:35,406:INFO:Defining folds
2023-02-02 19:09:35,406:INFO:Declaring metric variables
2023-02-02 19:09:35,411:INFO:Importing untrained model
2023-02-02 19:09:35,415:INFO:Croston Imported successfully
2023-02-02 19:09:35,424:INFO:Starting cross validation
2023-02-02 19:09:35,426:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:35,456:INFO:Calculating mean and std
2023-02-02 19:09:35,457:INFO:Creating metrics dataframe
2023-02-02 19:09:35,461:INFO:Uploading results into container
2023-02-02 19:09:35,461:INFO:Uploading model into container now
2023-02-02 19:09:35,461:INFO:_master_model_container: 8
2023-02-02 19:09:35,461:INFO:_display_container: 2
2023-02-02 19:09:35,462:INFO:Croston()
2023-02-02 19:09:35,462:INFO:create_model() successfully completed......................................
2023-02-02 19:09:35,603:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:35,603:INFO:Creating metrics dataframe
2023-02-02 19:09:35,619:INFO:Initializing ETS
2023-02-02 19:09:35,620:INFO:Total runtime is 0.12101270357767742 minutes
2023-02-02 19:09:35,624:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:35,624:INFO:Initializing create_model()
2023-02-02 19:09:35,625:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=ets, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:35,625:INFO:Checking exceptions
2023-02-02 19:09:35,625:INFO:Importing libraries
2023-02-02 19:09:35,625:INFO:Copying training dataset
2023-02-02 19:09:35,630:INFO:Defining folds
2023-02-02 19:09:35,631:INFO:Declaring metric variables
2023-02-02 19:09:35,638:INFO:Importing untrained model
2023-02-02 19:09:35,643:INFO:ETS Imported successfully
2023-02-02 19:09:35,651:INFO:Starting cross validation
2023-02-02 19:09:35,653:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:35,787:INFO:Calculating mean and std
2023-02-02 19:09:35,788:INFO:Creating metrics dataframe
2023-02-02 19:09:35,792:INFO:Uploading results into container
2023-02-02 19:09:35,792:INFO:Uploading model into container now
2023-02-02 19:09:35,792:INFO:_master_model_container: 9
2023-02-02 19:09:35,793:INFO:_display_container: 2
2023-02-02 19:09:35,793:INFO:AutoETS(seasonal='mul', sp=7, trend='add')
2023-02-02 19:09:35,793:INFO:create_model() successfully completed......................................
2023-02-02 19:09:35,936:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:35,936:INFO:Creating metrics dataframe
2023-02-02 19:09:35,952:INFO:Initializing Theta Forecaster
2023-02-02 19:09:35,952:INFO:Total runtime is 0.1265528957049052 minutes
2023-02-02 19:09:35,956:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:35,956:INFO:Initializing create_model()
2023-02-02 19:09:35,956:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=theta, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:35,956:INFO:Checking exceptions
2023-02-02 19:09:35,957:INFO:Importing libraries
2023-02-02 19:09:35,957:INFO:Copying training dataset
2023-02-02 19:09:35,962:INFO:Defining folds
2023-02-02 19:09:35,962:INFO:Declaring metric variables
2023-02-02 19:09:35,967:INFO:Importing untrained model
2023-02-02 19:09:35,972:INFO:Theta Forecaster Imported successfully
2023-02-02 19:09:35,982:INFO:Starting cross validation
2023-02-02 19:09:35,983:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:36,042:INFO:Calculating mean and std
2023-02-02 19:09:36,043:INFO:Creating metrics dataframe
2023-02-02 19:09:36,047:INFO:Uploading results into container
2023-02-02 19:09:36,047:INFO:Uploading model into container now
2023-02-02 19:09:36,047:INFO:_master_model_container: 10
2023-02-02 19:09:36,047:INFO:_display_container: 2
2023-02-02 19:09:36,048:INFO:ThetaForecaster(sp=7)
2023-02-02 19:09:36,048:INFO:create_model() successfully completed......................................
2023-02-02 19:09:36,189:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:36,189:INFO:Creating metrics dataframe
2023-02-02 19:09:36,203:INFO:Initializing Linear w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:36,203:INFO:Total runtime is 0.13073365290959676 minutes
2023-02-02 19:09:36,207:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:36,208:INFO:Initializing create_model()
2023-02-02 19:09:36,208:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=lr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:36,208:INFO:Checking exceptions
2023-02-02 19:09:36,208:INFO:Importing libraries
2023-02-02 19:09:36,208:INFO:Copying training dataset
2023-02-02 19:09:36,213:INFO:Defining folds
2023-02-02 19:09:36,214:INFO:Declaring metric variables
2023-02-02 19:09:36,218:INFO:Importing untrained model
2023-02-02 19:09:36,224:INFO:Linear w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:36,233:INFO:Starting cross validation
2023-02-02 19:09:36,235:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:36,455:INFO:Calculating mean and std
2023-02-02 19:09:36,456:INFO:Creating metrics dataframe
2023-02-02 19:09:36,461:INFO:Uploading results into container
2023-02-02 19:09:36,461:INFO:Uploading model into container now
2023-02-02 19:09:36,461:INFO:_master_model_container: 11
2023-02-02 19:09:36,461:INFO:_display_container: 2
2023-02-02 19:09:36,463:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LinearRegression(n_jobs=-1), sp=7,
                    window_length=7)
2023-02-02 19:09:36,463:INFO:create_model() successfully completed......................................
2023-02-02 19:09:36,605:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:36,605:INFO:Creating metrics dataframe
2023-02-02 19:09:36,622:INFO:Initializing Elastic Net w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:36,623:INFO:Total runtime is 0.13773924112319946 minutes
2023-02-02 19:09:36,627:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:36,627:INFO:Initializing create_model()
2023-02-02 19:09:36,627:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=en_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:36,627:INFO:Checking exceptions
2023-02-02 19:09:36,627:INFO:Importing libraries
2023-02-02 19:09:36,627:INFO:Copying training dataset
2023-02-02 19:09:36,632:INFO:Defining folds
2023-02-02 19:09:36,632:INFO:Declaring metric variables
2023-02-02 19:09:36,637:INFO:Importing untrained model
2023-02-02 19:09:36,642:INFO:Elastic Net w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:36,651:INFO:Starting cross validation
2023-02-02 19:09:36,652:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:36,870:INFO:Calculating mean and std
2023-02-02 19:09:36,871:INFO:Creating metrics dataframe
2023-02-02 19:09:36,876:INFO:Uploading results into container
2023-02-02 19:09:36,876:INFO:Uploading model into container now
2023-02-02 19:09:36,876:INFO:_master_model_container: 12
2023-02-02 19:09:36,876:INFO:_display_container: 2
2023-02-02 19:09:36,879:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=ElasticNet(random_state=1322), sp=7,
                    window_length=7)
2023-02-02 19:09:36,879:INFO:create_model() successfully completed......................................
2023-02-02 19:09:37,019:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:37,019:INFO:Creating metrics dataframe
2023-02-02 19:09:37,035:INFO:Initializing Ridge w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:37,036:INFO:Total runtime is 0.14461830059687297 minutes
2023-02-02 19:09:37,040:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:37,040:INFO:Initializing create_model()
2023-02-02 19:09:37,040:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=ridge_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:37,040:INFO:Checking exceptions
2023-02-02 19:09:37,040:INFO:Importing libraries
2023-02-02 19:09:37,040:INFO:Copying training dataset
2023-02-02 19:09:37,045:INFO:Defining folds
2023-02-02 19:09:37,045:INFO:Declaring metric variables
2023-02-02 19:09:37,050:INFO:Importing untrained model
2023-02-02 19:09:37,055:INFO:Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:37,063:INFO:Starting cross validation
2023-02-02 19:09:37,065:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:37,285:INFO:Calculating mean and std
2023-02-02 19:09:37,286:INFO:Creating metrics dataframe
2023-02-02 19:09:37,290:INFO:Uploading results into container
2023-02-02 19:09:37,291:INFO:Uploading model into container now
2023-02-02 19:09:37,291:INFO:_master_model_container: 13
2023-02-02 19:09:37,291:INFO:_display_container: 2
2023-02-02 19:09:37,293:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Ridge(random_state=1322), sp=7, window_length=7)
2023-02-02 19:09:37,293:INFO:create_model() successfully completed......................................
2023-02-02 19:09:37,433:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:37,434:INFO:Creating metrics dataframe
2023-02-02 19:09:37,450:INFO:Initializing Lasso w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:37,451:INFO:Total runtime is 0.1515307068824768 minutes
2023-02-02 19:09:37,455:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:37,455:INFO:Initializing create_model()
2023-02-02 19:09:37,455:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=lasso_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:37,456:INFO:Checking exceptions
2023-02-02 19:09:37,456:INFO:Importing libraries
2023-02-02 19:09:37,456:INFO:Copying training dataset
2023-02-02 19:09:37,461:INFO:Defining folds
2023-02-02 19:09:37,461:INFO:Declaring metric variables
2023-02-02 19:09:37,466:INFO:Importing untrained model
2023-02-02 19:09:37,471:INFO:Lasso w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:37,480:INFO:Starting cross validation
2023-02-02 19:09:37,482:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:37,706:INFO:Calculating mean and std
2023-02-02 19:09:37,708:INFO:Creating metrics dataframe
2023-02-02 19:09:37,712:INFO:Uploading results into container
2023-02-02 19:09:37,712:INFO:Uploading model into container now
2023-02-02 19:09:37,712:INFO:_master_model_container: 14
2023-02-02 19:09:37,712:INFO:_display_container: 2
2023-02-02 19:09:37,714:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Lasso(random_state=1322), sp=7, window_length=7)
2023-02-02 19:09:37,715:INFO:create_model() successfully completed......................................
2023-02-02 19:09:37,856:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:37,856:INFO:Creating metrics dataframe
2023-02-02 19:09:37,873:INFO:Initializing Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:37,874:INFO:Total runtime is 0.15857640902201334 minutes
2023-02-02 19:09:37,878:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:37,878:INFO:Initializing create_model()
2023-02-02 19:09:37,878:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=lar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:37,878:INFO:Checking exceptions
2023-02-02 19:09:37,878:INFO:Importing libraries
2023-02-02 19:09:37,878:INFO:Copying training dataset
2023-02-02 19:09:37,883:INFO:Defining folds
2023-02-02 19:09:37,883:INFO:Declaring metric variables
2023-02-02 19:09:37,888:INFO:Importing untrained model
2023-02-02 19:09:37,893:INFO:Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:37,903:INFO:Starting cross validation
2023-02-02 19:09:37,904:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:37,989:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:09:38,128:INFO:Calculating mean and std
2023-02-02 19:09:38,129:INFO:Creating metrics dataframe
2023-02-02 19:09:38,134:INFO:Uploading results into container
2023-02-02 19:09:38,134:INFO:Uploading model into container now
2023-02-02 19:09:38,135:INFO:_master_model_container: 15
2023-02-02 19:09:38,135:INFO:_display_container: 2
2023-02-02 19:09:38,137:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Lars(random_state=1322), sp=7, window_length=7)
2023-02-02 19:09:38,137:INFO:create_model() successfully completed......................................
2023-02-02 19:09:38,284:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:38,285:INFO:Creating metrics dataframe
2023-02-02 19:09:38,302:INFO:Initializing Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:38,302:INFO:Total runtime is 0.16572198470433552 minutes
2023-02-02 19:09:38,306:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:38,306:INFO:Initializing create_model()
2023-02-02 19:09:38,306:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=llar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:38,307:INFO:Checking exceptions
2023-02-02 19:09:38,307:INFO:Importing libraries
2023-02-02 19:09:38,307:INFO:Copying training dataset
2023-02-02 19:09:38,312:INFO:Defining folds
2023-02-02 19:09:38,312:INFO:Declaring metric variables
2023-02-02 19:09:38,317:INFO:Importing untrained model
2023-02-02 19:09:38,323:INFO:Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:38,333:INFO:Starting cross validation
2023-02-02 19:09:38,335:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:38,416:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 19:09:38,555:INFO:Calculating mean and std
2023-02-02 19:09:38,556:INFO:Creating metrics dataframe
2023-02-02 19:09:38,561:INFO:Uploading results into container
2023-02-02 19:09:38,561:INFO:Uploading model into container now
2023-02-02 19:09:38,561:INFO:_master_model_container: 16
2023-02-02 19:09:38,561:INFO:_display_container: 2
2023-02-02 19:09:38,563:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LassoLars(random_state=1322), sp=7,
                    window_length=7)
2023-02-02 19:09:38,563:INFO:create_model() successfully completed......................................
2023-02-02 19:09:38,712:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:38,712:INFO:Creating metrics dataframe
2023-02-02 19:09:38,730:INFO:Initializing Bayesian Ridge w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:38,730:INFO:Total runtime is 0.1728508989016215 minutes
2023-02-02 19:09:38,734:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:38,734:INFO:Initializing create_model()
2023-02-02 19:09:38,735:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=br_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:38,735:INFO:Checking exceptions
2023-02-02 19:09:38,735:INFO:Importing libraries
2023-02-02 19:09:38,735:INFO:Copying training dataset
2023-02-02 19:09:38,740:INFO:Defining folds
2023-02-02 19:09:38,740:INFO:Declaring metric variables
2023-02-02 19:09:38,745:INFO:Importing untrained model
2023-02-02 19:09:38,752:INFO:Bayesian Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:38,774:INFO:Starting cross validation
2023-02-02 19:09:38,776:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:39,072:INFO:Calculating mean and std
2023-02-02 19:09:39,074:INFO:Creating metrics dataframe
2023-02-02 19:09:39,077:INFO:Uploading results into container
2023-02-02 19:09:39,078:INFO:Uploading model into container now
2023-02-02 19:09:39,078:INFO:_master_model_container: 17
2023-02-02 19:09:39,078:INFO:_display_container: 2
2023-02-02 19:09:39,081:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=BayesianRidge(), sp=7, window_length=7)
2023-02-02 19:09:39,081:INFO:create_model() successfully completed......................................
2023-02-02 19:09:39,224:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:39,224:INFO:Creating metrics dataframe
2023-02-02 19:09:39,243:INFO:Initializing Huber w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:39,244:INFO:Total runtime is 0.18141228755315145 minutes
2023-02-02 19:09:39,248:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:39,248:INFO:Initializing create_model()
2023-02-02 19:09:39,248:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=huber_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:39,248:INFO:Checking exceptions
2023-02-02 19:09:39,248:INFO:Importing libraries
2023-02-02 19:09:39,248:INFO:Copying training dataset
2023-02-02 19:09:39,253:INFO:Defining folds
2023-02-02 19:09:39,254:INFO:Declaring metric variables
2023-02-02 19:09:39,258:INFO:Importing untrained model
2023-02-02 19:09:39,264:INFO:Huber w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:39,273:INFO:Starting cross validation
2023-02-02 19:09:39,274:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:39,384:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-02-02 19:09:39,522:INFO:Calculating mean and std
2023-02-02 19:09:39,523:INFO:Creating metrics dataframe
2023-02-02 19:09:39,527:INFO:Uploading results into container
2023-02-02 19:09:39,527:INFO:Uploading model into container now
2023-02-02 19:09:39,528:INFO:_master_model_container: 18
2023-02-02 19:09:39,528:INFO:_display_container: 2
2023-02-02 19:09:39,530:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=HuberRegressor(), sp=7, window_length=7)
2023-02-02 19:09:39,530:INFO:create_model() successfully completed......................................
2023-02-02 19:09:39,673:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:39,673:INFO:Creating metrics dataframe
2023-02-02 19:09:39,692:INFO:Initializing Passive Aggressive w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:39,693:INFO:Total runtime is 0.18890767494837443 minutes
2023-02-02 19:09:39,697:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:39,697:INFO:Initializing create_model()
2023-02-02 19:09:39,697:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=par_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:39,697:INFO:Checking exceptions
2023-02-02 19:09:39,697:INFO:Importing libraries
2023-02-02 19:09:39,698:INFO:Copying training dataset
2023-02-02 19:09:39,703:INFO:Defining folds
2023-02-02 19:09:39,703:INFO:Declaring metric variables
2023-02-02 19:09:39,708:INFO:Importing untrained model
2023-02-02 19:09:39,712:INFO:Passive Aggressive w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:39,721:INFO:Starting cross validation
2023-02-02 19:09:39,722:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:39,944:INFO:Calculating mean and std
2023-02-02 19:09:39,945:INFO:Creating metrics dataframe
2023-02-02 19:09:39,949:INFO:Uploading results into container
2023-02-02 19:09:39,949:INFO:Uploading model into container now
2023-02-02 19:09:39,950:INFO:_master_model_container: 19
2023-02-02 19:09:39,950:INFO:_display_container: 2
2023-02-02 19:09:39,952:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=PassiveAggressiveRegressor(random_state=1322),
                    sp=7, window_length=7)
2023-02-02 19:09:39,952:INFO:create_model() successfully completed......................................
2023-02-02 19:09:40,094:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:40,094:INFO:Creating metrics dataframe
2023-02-02 19:09:40,113:INFO:Initializing Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:40,114:INFO:Total runtime is 0.19592001438140869 minutes
2023-02-02 19:09:40,118:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:40,118:INFO:Initializing create_model()
2023-02-02 19:09:40,118:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=omp_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:40,119:INFO:Checking exceptions
2023-02-02 19:09:40,119:INFO:Importing libraries
2023-02-02 19:09:40,119:INFO:Copying training dataset
2023-02-02 19:09:40,124:INFO:Defining folds
2023-02-02 19:09:40,124:INFO:Declaring metric variables
2023-02-02 19:09:40,128:INFO:Importing untrained model
2023-02-02 19:09:40,133:INFO:Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:40,141:INFO:Starting cross validation
2023-02-02 19:09:40,143:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:40,229:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:09:40,369:INFO:Calculating mean and std
2023-02-02 19:09:40,370:INFO:Creating metrics dataframe
2023-02-02 19:09:40,374:INFO:Uploading results into container
2023-02-02 19:09:40,374:INFO:Uploading model into container now
2023-02-02 19:09:40,375:INFO:_master_model_container: 20
2023-02-02 19:09:40,375:INFO:_display_container: 2
2023-02-02 19:09:40,377:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=OrthogonalMatchingPursuit(), sp=7,
                    window_length=7)
2023-02-02 19:09:40,377:INFO:create_model() successfully completed......................................
2023-02-02 19:09:40,518:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:40,518:INFO:Creating metrics dataframe
2023-02-02 19:09:40,538:INFO:Initializing K Neighbors w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:40,538:INFO:Total runtime is 0.20298232237497965 minutes
2023-02-02 19:09:40,542:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:40,542:INFO:Initializing create_model()
2023-02-02 19:09:40,542:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=knn_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:40,542:INFO:Checking exceptions
2023-02-02 19:09:40,543:INFO:Importing libraries
2023-02-02 19:09:40,543:INFO:Copying training dataset
2023-02-02 19:09:40,548:INFO:Defining folds
2023-02-02 19:09:40,548:INFO:Declaring metric variables
2023-02-02 19:09:40,552:INFO:Importing untrained model
2023-02-02 19:09:40,557:INFO:K Neighbors w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:40,567:INFO:Starting cross validation
2023-02-02 19:09:40,569:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:40,825:INFO:Calculating mean and std
2023-02-02 19:09:40,826:INFO:Creating metrics dataframe
2023-02-02 19:09:40,830:INFO:Uploading results into container
2023-02-02 19:09:40,830:INFO:Uploading model into container now
2023-02-02 19:09:40,831:INFO:_master_model_container: 21
2023-02-02 19:09:40,831:INFO:_display_container: 2
2023-02-02 19:09:40,833:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=KNeighborsRegressor(n_jobs=-1), sp=7,
                    window_length=7)
2023-02-02 19:09:40,833:INFO:create_model() successfully completed......................................
2023-02-02 19:09:40,974:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:40,974:INFO:Creating metrics dataframe
2023-02-02 19:09:40,994:INFO:Initializing Decision Tree w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:40,994:INFO:Total runtime is 0.21058172384897866 minutes
2023-02-02 19:09:40,998:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:40,998:INFO:Initializing create_model()
2023-02-02 19:09:40,999:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=dt_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:40,999:INFO:Checking exceptions
2023-02-02 19:09:40,999:INFO:Importing libraries
2023-02-02 19:09:40,999:INFO:Copying training dataset
2023-02-02 19:09:41,004:INFO:Defining folds
2023-02-02 19:09:41,005:INFO:Declaring metric variables
2023-02-02 19:09:41,009:INFO:Importing untrained model
2023-02-02 19:09:41,014:INFO:Decision Tree w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:41,024:INFO:Starting cross validation
2023-02-02 19:09:41,026:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:41,270:INFO:Calculating mean and std
2023-02-02 19:09:41,271:INFO:Creating metrics dataframe
2023-02-02 19:09:41,275:INFO:Uploading results into container
2023-02-02 19:09:41,275:INFO:Uploading model into container now
2023-02-02 19:09:41,276:INFO:_master_model_container: 22
2023-02-02 19:09:41,276:INFO:_display_container: 2
2023-02-02 19:09:41,278:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=DecisionTreeRegressor(random_state=1322), sp=7,
                    window_length=7)
2023-02-02 19:09:41,278:INFO:create_model() successfully completed......................................
2023-02-02 19:09:41,420:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:41,420:INFO:Creating metrics dataframe
2023-02-02 19:09:41,440:INFO:Initializing Random Forest w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:41,441:INFO:Total runtime is 0.2180271546045939 minutes
2023-02-02 19:09:41,445:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:41,446:INFO:Initializing create_model()
2023-02-02 19:09:41,446:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=rf_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:41,446:INFO:Checking exceptions
2023-02-02 19:09:41,446:INFO:Importing libraries
2023-02-02 19:09:41,446:INFO:Copying training dataset
2023-02-02 19:09:41,451:INFO:Defining folds
2023-02-02 19:09:41,451:INFO:Declaring metric variables
2023-02-02 19:09:41,456:INFO:Importing untrained model
2023-02-02 19:09:41,461:INFO:Random Forest w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:41,469:INFO:Starting cross validation
2023-02-02 19:09:41,471:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:41,920:INFO:Calculating mean and std
2023-02-02 19:09:41,922:INFO:Creating metrics dataframe
2023-02-02 19:09:41,926:INFO:Uploading results into container
2023-02-02 19:09:41,926:INFO:Uploading model into container now
2023-02-02 19:09:41,927:INFO:_master_model_container: 23
2023-02-02 19:09:41,927:INFO:_display_container: 2
2023-02-02 19:09:41,929:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=RandomForestRegressor(n_jobs=-1,
                                                    random_state=1322),
                    sp=7, window_length=7)
2023-02-02 19:09:41,930:INFO:create_model() successfully completed......................................
2023-02-02 19:09:42,072:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:42,072:INFO:Creating metrics dataframe
2023-02-02 19:09:42,092:INFO:Initializing Extra Trees w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:42,092:INFO:Total runtime is 0.22888797918955484 minutes
2023-02-02 19:09:42,096:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:42,097:INFO:Initializing create_model()
2023-02-02 19:09:42,097:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=et_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:42,097:INFO:Checking exceptions
2023-02-02 19:09:42,097:INFO:Importing libraries
2023-02-02 19:09:42,097:INFO:Copying training dataset
2023-02-02 19:09:42,102:INFO:Defining folds
2023-02-02 19:09:42,102:INFO:Declaring metric variables
2023-02-02 19:09:42,107:INFO:Importing untrained model
2023-02-02 19:09:42,112:INFO:Extra Trees w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:42,120:INFO:Starting cross validation
2023-02-02 19:09:42,122:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:42,541:INFO:Calculating mean and std
2023-02-02 19:09:42,542:INFO:Creating metrics dataframe
2023-02-02 19:09:42,547:INFO:Uploading results into container
2023-02-02 19:09:42,547:INFO:Uploading model into container now
2023-02-02 19:09:42,547:INFO:_master_model_container: 24
2023-02-02 19:09:42,547:INFO:_display_container: 2
2023-02-02 19:09:42,549:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(n_jobs=-1, random_state=1322),
                    sp=7, window_length=7)
2023-02-02 19:09:42,549:INFO:create_model() successfully completed......................................
2023-02-02 19:09:42,692:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:42,692:INFO:Creating metrics dataframe
2023-02-02 19:09:42,715:INFO:Initializing Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:42,715:INFO:Total runtime is 0.2392718990643819 minutes
2023-02-02 19:09:42,720:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:42,720:INFO:Initializing create_model()
2023-02-02 19:09:42,721:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=gbr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:42,721:INFO:Checking exceptions
2023-02-02 19:09:42,721:INFO:Importing libraries
2023-02-02 19:09:42,721:INFO:Copying training dataset
2023-02-02 19:09:42,730:INFO:Defining folds
2023-02-02 19:09:42,733:INFO:Declaring metric variables
2023-02-02 19:09:42,737:INFO:Importing untrained model
2023-02-02 19:09:42,743:INFO:Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:42,751:INFO:Starting cross validation
2023-02-02 19:09:42,753:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:43,005:INFO:Calculating mean and std
2023-02-02 19:09:43,007:INFO:Creating metrics dataframe
2023-02-02 19:09:43,011:INFO:Uploading results into container
2023-02-02 19:09:43,011:INFO:Uploading model into container now
2023-02-02 19:09:43,011:INFO:_master_model_container: 25
2023-02-02 19:09:43,011:INFO:_display_container: 2
2023-02-02 19:09:43,014:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=GradientBoostingRegressor(random_state=1322),
                    sp=7, window_length=7)
2023-02-02 19:09:43,014:INFO:create_model() successfully completed......................................
2023-02-02 19:09:43,155:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:43,155:INFO:Creating metrics dataframe
2023-02-02 19:09:43,177:INFO:Initializing AdaBoost w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:43,177:INFO:Total runtime is 0.2469671527544657 minutes
2023-02-02 19:09:43,182:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:43,182:INFO:Initializing create_model()
2023-02-02 19:09:43,183:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=ada_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:43,183:INFO:Checking exceptions
2023-02-02 19:09:43,183:INFO:Importing libraries
2023-02-02 19:09:43,183:INFO:Copying training dataset
2023-02-02 19:09:43,189:INFO:Defining folds
2023-02-02 19:09:43,189:INFO:Declaring metric variables
2023-02-02 19:09:43,194:INFO:Importing untrained model
2023-02-02 19:09:43,199:INFO:AdaBoost w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:43,208:INFO:Starting cross validation
2023-02-02 19:09:43,209:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:43,512:INFO:Calculating mean and std
2023-02-02 19:09:43,513:INFO:Creating metrics dataframe
2023-02-02 19:09:43,518:INFO:Uploading results into container
2023-02-02 19:09:43,518:INFO:Uploading model into container now
2023-02-02 19:09:43,518:INFO:_master_model_container: 26
2023-02-02 19:09:43,518:INFO:_display_container: 2
2023-02-02 19:09:43,520:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=AdaBoostRegressor(random_state=1322), sp=7,
                    window_length=7)
2023-02-02 19:09:43,520:INFO:create_model() successfully completed......................................
2023-02-02 19:09:43,662:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:43,662:INFO:Creating metrics dataframe
2023-02-02 19:09:43,683:INFO:Initializing Light Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-02-02 19:09:43,684:INFO:Total runtime is 0.2554119229316711 minutes
2023-02-02 19:09:43,688:INFO:SubProcess create_model() called ==================================
2023-02-02 19:09:43,688:INFO:Initializing create_model()
2023-02-02 19:09:43,688:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=lightgbm_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1263F79D0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:43,688:INFO:Checking exceptions
2023-02-02 19:09:43,688:INFO:Importing libraries
2023-02-02 19:09:43,688:INFO:Copying training dataset
2023-02-02 19:09:43,693:INFO:Defining folds
2023-02-02 19:09:43,694:INFO:Declaring metric variables
2023-02-02 19:09:43,698:INFO:Importing untrained model
2023-02-02 19:09:43,703:INFO:Light Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:09:43,711:INFO:Starting cross validation
2023-02-02 19:09:43,713:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:43,932:INFO:Calculating mean and std
2023-02-02 19:09:43,934:INFO:Creating metrics dataframe
2023-02-02 19:09:43,938:INFO:Uploading results into container
2023-02-02 19:09:43,938:INFO:Uploading model into container now
2023-02-02 19:09:43,939:INFO:_master_model_container: 27
2023-02-02 19:09:43,939:INFO:_display_container: 2
2023-02-02 19:09:43,941:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LGBMRegressor(random_state=1322), sp=7,
                    window_length=7)
2023-02-02 19:09:43,941:INFO:create_model() successfully completed......................................
2023-02-02 19:09:44,082:INFO:SubProcess create_model() end ==================================
2023-02-02 19:09:44,082:INFO:Creating metrics dataframe
2023-02-02 19:09:44,115:INFO:Initializing create_model()
2023-02-02 19:09:44,116:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:44,116:INFO:Checking exceptions
2023-02-02 19:09:44,118:INFO:Importing libraries
2023-02-02 19:09:44,118:INFO:Copying training dataset
2023-02-02 19:09:44,122:INFO:Defining folds
2023-02-02 19:09:44,122:INFO:Declaring metric variables
2023-02-02 19:09:44,122:INFO:Importing untrained model
2023-02-02 19:09:44,122:INFO:Declaring custom model
2023-02-02 19:09:44,124:INFO:ARIMA Imported successfully
2023-02-02 19:09:44,124:INFO:Cross validation set to False
2023-02-02 19:09:44,124:INFO:Fitting Model
2023-02-02 19:09:44,187:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:09:44,187:INFO:create_model() successfully completed......................................
2023-02-02 19:09:44,383:INFO:_master_model_container: 27
2023-02-02 19:09:44,384:INFO:_display_container: 2
2023-02-02 19:09:44,384:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:09:44,384:INFO:compare_models() successfully completed......................................
2023-02-02 19:09:44,399:INFO:Initializing create_model()
2023-02-02 19:09:44,400:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:09:44,400:INFO:Checking exceptions
2023-02-02 19:09:44,422:INFO:Importing libraries
2023-02-02 19:09:44,422:INFO:Copying training dataset
2023-02-02 19:09:44,428:INFO:Defining folds
2023-02-02 19:09:44,428:INFO:Declaring metric variables
2023-02-02 19:09:44,434:INFO:Importing untrained model
2023-02-02 19:09:44,440:INFO:ARIMA Imported successfully
2023-02-02 19:09:44,453:INFO:Starting cross validation
2023-02-02 19:09:44,454:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:09:44,577:INFO:Calculating mean and std
2023-02-02 19:09:44,577:INFO:Creating metrics dataframe
2023-02-02 19:09:44,585:INFO:Finalizing model
2023-02-02 19:09:44,650:INFO:Uploading results into container
2023-02-02 19:09:44,650:INFO:Uploading model into container now
2023-02-02 19:09:44,660:INFO:_master_model_container: 28
2023-02-02 19:09:44,660:INFO:_display_container: 3
2023-02-02 19:09:44,661:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:09:44,661:INFO:create_model() successfully completed......................................
2023-02-02 19:15:39,031:INFO:Initializing finalize_model()
2023-02-02 19:15:39,031:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 19:15:39,031:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:15:39,036:INFO:Initializing create_model()
2023-02-02 19:15:39,036:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 19:15:39,036:INFO:Checking exceptions
2023-02-02 19:15:39,038:INFO:Importing libraries
2023-02-02 19:15:39,039:INFO:Copying training dataset
2023-02-02 19:15:39,042:INFO:Defining folds
2023-02-02 19:15:39,042:INFO:Declaring metric variables
2023-02-02 19:15:39,042:INFO:Importing untrained model
2023-02-02 19:15:39,043:INFO:Declaring custom model
2023-02-02 19:15:39,044:INFO:ARIMA Imported successfully
2023-02-02 19:15:39,044:INFO:Cross validation set to False
2023-02-02 19:15:39,044:INFO:Fitting Model
2023-02-02 19:15:39,116:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:15:39,116:INFO:create_model() successfully completed......................................
2023-02-02 19:15:39,263:INFO:_master_model_container: 28
2023-02-02 19:15:39,264:INFO:_display_container: 3
2023-02-02 19:15:39,270:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:15:39,270:INFO:finalize_model() successfully completed......................................
2023-02-02 19:15:39,502:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 19:15:40,680:INFO:Visual Rendered Successfully
2023-02-02 19:15:55,535:INFO:Initializing finalize_model()
2023-02-02 19:15:55,536:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 19:15:55,536:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:15:55,541:INFO:Initializing create_model()
2023-02-02 19:15:55,541:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C128643640>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 19:15:55,541:INFO:Checking exceptions
2023-02-02 19:15:55,543:INFO:Importing libraries
2023-02-02 19:15:55,544:INFO:Copying training dataset
2023-02-02 19:15:55,547:INFO:Defining folds
2023-02-02 19:15:55,548:INFO:Declaring metric variables
2023-02-02 19:15:55,548:INFO:Importing untrained model
2023-02-02 19:15:55,548:INFO:Declaring custom model
2023-02-02 19:15:55,550:INFO:ARIMA Imported successfully
2023-02-02 19:15:55,550:INFO:Cross validation set to False
2023-02-02 19:15:55,550:INFO:Fitting Model
2023-02-02 19:15:55,616:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:15:55,616:INFO:create_model() successfully completed......................................
2023-02-02 19:15:55,768:INFO:_master_model_container: 28
2023-02-02 19:15:55,768:INFO:_display_container: 4
2023-02-02 19:15:55,774:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:15:55,774:INFO:finalize_model() successfully completed......................................
2023-02-02 19:15:56,003:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 19:15:56,237:INFO:Visual Rendered Successfully
2023-02-02 19:16:25,090:INFO:PyCaret TSForecastingExperiment
2023-02-02 19:16:25,090:INFO:Logging name: ts-default-name
2023-02-02 19:16:25,090:INFO:ML Usecase: MLUsecase.TIME_SERIES
2023-02-02 19:16:25,090:INFO:version 3.0.0.rc8
2023-02-02 19:16:25,090:INFO:Initializing setup()
2023-02-02 19:16:25,090:INFO:self.USI: fe37
2023-02-02 19:16:25,091:INFO:self._variable_keys: {'gpu_n_jobs_param', 'candidate_sps', 'fold_generator', 'n_jobs_param', 'enforce_exogenous', 'y_test_transformed', 'enforce_pi', 'pipeline', 'X_test', 'fh', 'idx', 'y_test', 'primary_sp_to_use', 'memory', 'html_param', 'gpu_param', 'data', 'approach_type', 'log_plots_param', 'y_transformed', 'X_test_transformed', 'exp_name_log', 'fold_param', 'strictly_positive', 'seed', 'X', 'exp_id', 'X_train_transformed', 'exogenous_present', 'model_engines', 'X_transformed', 'index_type', 'all_sps_to_use', 'seasonality_present', 'y_train', 'USI', 'y', 'X_train', 'significant_sps', 'y_train_transformed', '_available_plots', 'logging_param', 'significant_sps_no_harmonics', '_ml_usecase'}
2023-02-02 19:16:25,091:INFO:Checking environment
2023-02-02 19:16:25,091:INFO:python_version: 3.9.16
2023-02-02 19:16:25,091:INFO:python_build: ('main', 'Jan 11 2023 16:16:36')
2023-02-02 19:16:25,091:INFO:machine: AMD64
2023-02-02 19:16:25,091:INFO:platform: Windows-10-10.0.19045-SP0
2023-02-02 19:16:25,091:INFO:Memory: svmem(total=12825538560, available=4481777664, percent=65.1, used=8343760896, free=4481777664)
2023-02-02 19:16:25,091:INFO:Physical Core: 4
2023-02-02 19:16:25,091:INFO:Logical Core: 8
2023-02-02 19:16:25,091:INFO:Checking libraries
2023-02-02 19:16:25,091:INFO:System:
2023-02-02 19:16:25,091:INFO:    python: 3.9.16 (main, Jan 11 2023, 16:16:36) [MSC v.1916 64 bit (AMD64)]
2023-02-02 19:16:25,091:INFO:executable: C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\python.exe
2023-02-02 19:16:25,091:INFO:   machine: Windows-10-10.0.19045-SP0
2023-02-02 19:16:25,092:INFO:PyCaret required dependencies:
2023-02-02 19:16:25,092:INFO:                 pip: 22.3.1
2023-02-02 19:16:25,092:INFO:          setuptools: 65.6.3
2023-02-02 19:16:25,092:INFO:             pycaret: 3.0.0rc8
2023-02-02 19:16:25,092:INFO:             IPython: 8.9.0
2023-02-02 19:16:25,092:INFO:          ipywidgets: 8.0.4
2023-02-02 19:16:25,092:INFO:                tqdm: 4.64.1
2023-02-02 19:16:25,092:INFO:               numpy: 1.23.5
2023-02-02 19:16:25,092:INFO:              pandas: 1.5.3
2023-02-02 19:16:25,092:INFO:              jinja2: 3.1.2
2023-02-02 19:16:25,092:INFO:               scipy: 1.10.0
2023-02-02 19:16:25,092:INFO:              joblib: 1.2.0
2023-02-02 19:16:25,092:INFO:             sklearn: 1.1.3
2023-02-02 19:16:25,092:INFO:                pyod: 1.0.7
2023-02-02 19:16:25,092:INFO:            imblearn: 0.10.1
2023-02-02 19:16:25,093:INFO:   category_encoders: 2.6.0
2023-02-02 19:16:25,093:INFO:            lightgbm: 3.3.5
2023-02-02 19:16:25,093:INFO:               numba: 0.56.4
2023-02-02 19:16:25,093:INFO:            requests: 2.28.2
2023-02-02 19:16:25,093:INFO:          matplotlib: 3.7.0rc1
2023-02-02 19:16:25,093:INFO:          scikitplot: 0.3.7
2023-02-02 19:16:25,093:INFO:         yellowbrick: 1.5
2023-02-02 19:16:25,093:INFO:              plotly: 5.13.0
2023-02-02 19:16:25,093:INFO:             kaleido: 0.2.1
2023-02-02 19:16:25,093:INFO:         statsmodels: 0.13.5
2023-02-02 19:16:25,093:INFO:              sktime: 0.16.0
2023-02-02 19:16:25,093:INFO:               tbats: 1.1.2
2023-02-02 19:16:25,093:INFO:            pmdarima: 2.0.2
2023-02-02 19:16:25,093:INFO:              psutil: 5.9.4
2023-02-02 19:16:25,093:INFO:PyCaret optional dependencies:
2023-02-02 19:16:25,094:INFO:                shap: Not installed
2023-02-02 19:16:25,094:INFO:           interpret: Not installed
2023-02-02 19:16:25,094:INFO:                umap: Not installed
2023-02-02 19:16:25,094:INFO:    pandas_profiling: Not installed
2023-02-02 19:16:25,094:INFO:  explainerdashboard: Not installed
2023-02-02 19:16:25,094:INFO:             autoviz: Not installed
2023-02-02 19:16:25,094:INFO:           fairlearn: Not installed
2023-02-02 19:16:25,094:INFO:             xgboost: Not installed
2023-02-02 19:16:25,094:INFO:            catboost: Not installed
2023-02-02 19:16:25,094:INFO:              kmodes: Not installed
2023-02-02 19:16:25,094:INFO:             mlxtend: Not installed
2023-02-02 19:16:25,094:INFO:       statsforecast: Not installed
2023-02-02 19:16:25,094:INFO:        tune_sklearn: Not installed
2023-02-02 19:16:25,094:INFO:                 ray: Not installed
2023-02-02 19:16:25,094:INFO:            hyperopt: Not installed
2023-02-02 19:16:25,095:INFO:              optuna: Not installed
2023-02-02 19:16:25,095:INFO:               skopt: Not installed
2023-02-02 19:16:25,095:INFO:              mlflow: Not installed
2023-02-02 19:16:25,095:INFO:              gradio: Not installed
2023-02-02 19:16:25,095:INFO:             fastapi: Not installed
2023-02-02 19:16:25,095:INFO:             uvicorn: Not installed
2023-02-02 19:16:25,095:INFO:              m2cgen: Not installed
2023-02-02 19:16:25,095:INFO:           evidently: Not installed
2023-02-02 19:16:25,095:INFO:                nltk: Not installed
2023-02-02 19:16:25,095:INFO:            pyLDAvis: Not installed
2023-02-02 19:16:25,095:INFO:              gensim: Not installed
2023-02-02 19:16:25,095:INFO:               spacy: Not installed
2023-02-02 19:16:25,095:INFO:           wordcloud: Not installed
2023-02-02 19:16:25,095:INFO:            textblob: Not installed
2023-02-02 19:16:25,095:INFO:               fugue: Not installed
2023-02-02 19:16:25,095:INFO:           streamlit: Not installed
2023-02-02 19:16:25,096:INFO:             prophet: Not installed
2023-02-02 19:16:25,096:INFO:None
2023-02-02 19:16:25,100:INFO:Set Forecast Horizon.
2023-02-02 19:16:25,100:INFO:Set up Train-Test Splits.
2023-02-02 19:16:25,136:INFO:Finished creating preprocessing pipeline.
2023-02-02 19:16:25,138:INFO:Pipeline: ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                DummyForecaster())]))])
2023-02-02 19:16:25,138:INFO:Set up Seasonal Period.
2023-02-02 19:16:25,141:INFO:Set up whether Multiplicative components allowed.
2023-02-02 19:16:25,172:INFO:Creating final display dataframe.
2023-02-02 19:16:25,184:INFO:Setup Display Container:                                          Description                    Value
0                                         session_id                     4374
1                                             Target                   Vendas
2                                           Approach               Univariate
3                                Exogenous Variables              Not Present
4                                Original data shape                  (46, 1)
5                             Transformed data shape                  (46, 1)
6                        Transformed train set shape                  (41, 1)
7                         Transformed test set shape                   (5, 1)
8                           Rows with missing values                     0.0%
9                                     Fold Generator  ExpandingWindowSplitter
10                                       Fold Number                        1
11                       Enforce Prediction Interval                    False
12                   Splits used for hyperparameters                      all
13                        Seasonality Detection Algo                     auto
14                            Max Period to Consider                     None
15                         Seasonal Period(s) Tested                      [7]
16                    Significant Seasonal Period(s)                      [7]
17  Significant Seasonal Period(s) without Harmonics                      [7]
18                                  Remove Harmonics                    False
19                            Harmonics Order Method             harmonic_max
20                          Num Seasonalities to Use                        1
21                          All Seasonalities to Use                      [7]
22                               Primary Seasonality                        7
23                               Seasonality Present                     True
24                          Target Strictly Positive                     True
25                                Target White Noise                       No
26                                     Recommended d                        0
27                            Recommended Seasonal D                        1
28                                        Preprocess                    False
29                                          CPU Jobs                       -1
30                                           Use GPU                    False
31                                    Log Experiment                    False
32                                   Experiment Name          ts-default-name
33                                               USI                     fe37
2023-02-02 19:16:25,192:INFO:Engine successfully changes for model 'auto_arima' to 'pmdarima'.
2023-02-02 19:16:25,196:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,197:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,197:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,197:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,198:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,198:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,198:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,199:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,199:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,199:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,202:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,204:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,205:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,205:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,205:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,206:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,206:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,206:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,206:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,206:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,206:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,207:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,207:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,207:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,211:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,211:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,211:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,211:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,212:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,212:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,212:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,213:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,213:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,213:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,216:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,217:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,218:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,218:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,218:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,219:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,219:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,219:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,220:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,220:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,220:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,220:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,220:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,221:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,221:INFO:Engine successfully changes for model 'lr_cds_dt' to 'sklearn'.
2023-02-02 19:16:25,224:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,224:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,225:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,225:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,225:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,225:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,226:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,226:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,226:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,228:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,230:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,230:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,230:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,230:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,231:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,231:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,231:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,231:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,232:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,232:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,232:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,232:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,232:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,235:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,235:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,236:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,236:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,236:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,238:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,238:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,238:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,238:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,240:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,242:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,242:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,242:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,243:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,243:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,243:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,244:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,244:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,244:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,244:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,244:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,244:INFO:Engine successfully changes for model 'en_cds_dt' to 'sklearn'.
2023-02-02 19:16:25,248:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,248:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,248:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,249:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,249:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,249:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,249:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,250:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,251:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,253:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,254:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,254:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,254:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,254:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,255:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,255:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,255:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,255:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,255:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,256:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,256:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,256:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,259:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,259:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,260:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,260:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,260:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,260:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,261:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,261:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,263:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,264:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,265:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,265:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,265:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,265:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,266:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,266:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,266:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,266:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,266:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,267:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,267:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,267:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,267:INFO:Engine successfully changes for model 'ridge_cds_dt' to 'sklearn'.
2023-02-02 19:16:25,271:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,271:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,272:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,272:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,272:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,272:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,273:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,275:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,276:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,277:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,277:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,277:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,278:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,278:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,278:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,278:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,278:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,278:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,279:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,279:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,279:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,282:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,282:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,283:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,283:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,283:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,283:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,284:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,285:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,287:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,288:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,288:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,288:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,289:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,289:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,289:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,289:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,289:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,289:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,290:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,290:INFO:Engine successfully changes for model 'lasso_cds_dt' to 'sklearn'.
2023-02-02 19:16:25,293:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,294:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,294:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,295:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,295:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,295:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,297:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,299:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,299:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,299:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,299:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,300:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,300:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,300:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,301:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,301:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,301:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,301:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,301:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,301:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,305:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,305:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,306:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,306:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,306:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,307:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,308:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,310:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,310:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,311:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,311:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,311:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,311:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,312:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,312:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,312:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,312:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,312:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,312:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,313:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,313:INFO:Engine successfully changes for model 'lar_cds_dt' to 'sklearn'.
2023-02-02 19:16:25,316:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,317:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,317:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,317:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,317:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,319:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,321:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,321:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,322:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,322:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,322:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,323:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,323:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,323:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,323:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,323:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,323:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,324:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,324:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,327:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,328:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,328:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,328:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,329:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,330:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,332:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,332:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,333:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,333:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,334:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,334:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,334:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,334:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,334:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,334:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,335:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,335:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,335:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,335:INFO:Engine successfully changes for model 'llar_cds_dt' to 'sklearn'.
2023-02-02 19:16:25,338:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,340:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,340:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,340:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,342:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,344:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,344:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,344:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,345:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,345:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,345:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,345:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,345:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,346:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,346:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,346:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,346:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,346:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,349:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,350:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,351:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,351:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,353:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,355:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,355:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,355:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,356:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,356:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,356:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,356:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,357:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,357:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,357:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,357:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,357:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,357:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,357:INFO:Engine successfully changes for model 'br_cds_dt' to 'sklearn'.
2023-02-02 19:16:25,360:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,362:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,362:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,364:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,366:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,366:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,366:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,367:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,367:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,367:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,367:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,368:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,368:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,368:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,368:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,368:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,368:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,371:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,373:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,373:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,375:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,377:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,377:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,377:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,377:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,378:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,378:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,378:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,378:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,378:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,379:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,379:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,379:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,379:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,379:INFO:Engine successfully changes for model 'huber_cds_dt' to 'sklearn'.
2023-02-02 19:16:25,382:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,384:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,387:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,388:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,389:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,389:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,389:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,389:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,390:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,390:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,390:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,391:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,394:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,395:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,397:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,399:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,399:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,399:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,400:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,400:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,400:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,401:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,401:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,401:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,401:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,401:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,402:INFO:Engine successfully changes for model 'par_cds_dt' to 'sklearn'.
2023-02-02 19:16:25,405:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,408:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,410:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,410:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,410:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,411:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,411:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,411:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,412:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,412:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,412:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,412:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,412:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,412:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,412:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,416:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,419:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,421:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,421:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,421:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,422:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,422:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,422:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,423:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,423:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,423:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,423:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,423:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,423:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,423:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,423:INFO:Engine successfully changes for model 'omp_cds_dt' to 'sklearn'.
2023-02-02 19:16:25,427:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,432:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,432:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,432:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,432:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,433:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,433:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,433:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,433:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,433:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,434:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,434:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,434:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,434:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,438:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,443:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,443:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,443:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,444:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,444:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,444:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,444:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,445:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,445:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,445:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,445:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,445:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,445:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,445:INFO:Engine successfully changes for model 'knn_cds_dt' to 'sklearn'.
2023-02-02 19:16:25,448:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,454:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,454:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,454:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,455:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,455:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,455:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,455:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,455:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,456:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,456:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,456:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,456:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,459:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,465:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,465:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,465:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,465:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,466:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,466:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,466:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,466:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,466:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,467:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,467:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,467:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,467:INFO:Engine successfully changes for model 'dt_cds_dt' to 'sklearn'.
2023-02-02 19:16:25,470:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,476:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,476:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,476:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,477:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,477:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,477:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,477:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,477:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,477:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,478:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,478:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,481:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,486:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,486:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,487:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,487:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,487:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,488:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,488:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,488:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,488:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,488:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,488:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,488:INFO:Engine successfully changes for model 'rf_cds_dt' to 'sklearn'.
2023-02-02 19:16:25,492:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,498:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,498:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,498:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,498:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,498:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,499:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,499:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,499:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,499:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,499:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,502:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,509:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,509:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,509:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,509:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,509:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,510:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,510:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,510:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,510:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,510:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,510:INFO:Engine successfully changes for model 'et_cds_dt' to 'sklearn'.
2023-02-02 19:16:25,514:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,519:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,520:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,520:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,520:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,520:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,520:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,521:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,521:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,521:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,524:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,530:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,530:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,531:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,531:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,531:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,531:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,531:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,531:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,531:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,532:INFO:Engine successfully changes for model 'gbr_cds_dt' to 'sklearn'.
2023-02-02 19:16:25,535:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,542:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,542:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,542:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,542:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,542:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,543:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,543:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,543:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,547:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,553:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,554:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,554:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,554:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,554:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,554:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,555:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,555:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,555:INFO:Engine successfully changes for model 'ada_cds_dt' to 'sklearn'.
2023-02-02 19:16:25,558:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,565:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,566:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,566:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,566:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,566:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,566:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,566:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,570:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,577:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,577:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,577:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,578:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,578:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,578:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,578:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,578:INFO:Engine successfully changes for model 'xgboost_cds_dt' to 'sklearn'.
2023-02-02 19:16:25,582:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,589:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,589:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,589:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,589:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,589:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,589:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,593:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,599:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,599:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,599:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,599:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,599:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,600:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,600:INFO:Engine successfully changes for model 'lightgbm_cds_dt' to 'sklearn'.
2023-02-02 19:16:25,603:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,609:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,609:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,610:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,610:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,610:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,613:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,619:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,620:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,620:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:16:25,620:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,620:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,620:INFO:Engine successfully changes for model 'catboost_cds_dt' to 'sklearn'.
2023-02-02 19:16:25,624:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,630:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,630:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,631:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,631:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,634:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,640:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,640:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,641:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,641:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,644:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,651:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,651:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,652:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,652:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,656:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:25,663:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,663:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,663:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,663:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:16:25,664:INFO:setup() successfully completed in 0.57s...............
2023-02-02 19:16:25,686:INFO:Initializing compare_models()
2023-02-02 19:16:25,687:INFO:compare_models(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, include=None, fold=None, round=4, cross_validation=True, sort=MASE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MASE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.time_series.forecasting.oop.TSForecastingExperiment'>}, exclude=None)
2023-02-02 19:16:25,687:INFO:Checking exceptions
2023-02-02 19:16:25,689:INFO:Preparing display monitor
2023-02-02 19:16:25,720:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:709: UserWarning:

Unsupported estimator `ensemble_forecaster` for method `compare_models()`, removing from model_library


2023-02-02 19:16:25,721:INFO:Initializing Naive Forecaster
2023-02-02 19:16:25,721:INFO:Total runtime is 0.0 minutes
2023-02-02 19:16:25,726:INFO:SubProcess create_model() called ==================================
2023-02-02 19:16:25,726:INFO:Initializing create_model()
2023-02-02 19:16:25,726:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=naive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:16:25,726:INFO:Checking exceptions
2023-02-02 19:16:25,726:INFO:Importing libraries
2023-02-02 19:16:25,726:INFO:Copying training dataset
2023-02-02 19:16:25,731:INFO:Defining folds
2023-02-02 19:16:25,731:INFO:Declaring metric variables
2023-02-02 19:16:25,736:INFO:Importing untrained model
2023-02-02 19:16:25,742:INFO:Naive Forecaster Imported successfully
2023-02-02 19:16:25,751:INFO:Starting cross validation
2023-02-02 19:16:25,753:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:16:30,635:INFO:Calculating mean and std
2023-02-02 19:16:30,636:INFO:Creating metrics dataframe
2023-02-02 19:16:30,644:INFO:Uploading results into container
2023-02-02 19:16:30,644:INFO:Uploading model into container now
2023-02-02 19:16:30,645:INFO:_master_model_container: 1
2023-02-02 19:16:30,645:INFO:_display_container: 2
2023-02-02 19:16:30,645:INFO:NaiveForecaster()
2023-02-02 19:16:30,645:INFO:create_model() successfully completed......................................
2023-02-02 19:16:30,805:INFO:SubProcess create_model() end ==================================
2023-02-02 19:16:30,806:INFO:Creating metrics dataframe
2023-02-02 19:16:30,815:INFO:Initializing Grand Means Forecaster
2023-02-02 19:16:30,815:INFO:Total runtime is 0.08491170803705851 minutes
2023-02-02 19:16:30,819:INFO:SubProcess create_model() called ==================================
2023-02-02 19:16:30,819:INFO:Initializing create_model()
2023-02-02 19:16:30,819:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=grand_means, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:16:30,820:INFO:Checking exceptions
2023-02-02 19:16:30,820:INFO:Importing libraries
2023-02-02 19:16:30,820:INFO:Copying training dataset
2023-02-02 19:16:30,827:INFO:Defining folds
2023-02-02 19:16:30,827:INFO:Declaring metric variables
2023-02-02 19:16:30,833:INFO:Importing untrained model
2023-02-02 19:16:30,838:INFO:Grand Means Forecaster Imported successfully
2023-02-02 19:16:30,847:INFO:Starting cross validation
2023-02-02 19:16:30,848:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:16:33,431:INFO:Calculating mean and std
2023-02-02 19:16:33,432:INFO:Creating metrics dataframe
2023-02-02 19:16:33,438:INFO:Uploading results into container
2023-02-02 19:16:33,439:INFO:Uploading model into container now
2023-02-02 19:16:33,440:INFO:_master_model_container: 2
2023-02-02 19:16:33,440:INFO:_display_container: 2
2023-02-02 19:16:33,440:INFO:NaiveForecaster(strategy='mean')
2023-02-02 19:16:33,441:INFO:create_model() successfully completed......................................
2023-02-02 19:16:33,603:INFO:SubProcess create_model() end ==================================
2023-02-02 19:16:33,604:INFO:Creating metrics dataframe
2023-02-02 19:16:33,615:INFO:Initializing Seasonal Naive Forecaster
2023-02-02 19:16:33,616:INFO:Total runtime is 0.13159183661142984 minutes
2023-02-02 19:16:33,619:INFO:SubProcess create_model() called ==================================
2023-02-02 19:16:33,619:INFO:Initializing create_model()
2023-02-02 19:16:33,620:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=snaive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:16:33,620:INFO:Checking exceptions
2023-02-02 19:16:33,620:INFO:Importing libraries
2023-02-02 19:16:33,620:INFO:Copying training dataset
2023-02-02 19:16:33,626:INFO:Defining folds
2023-02-02 19:16:33,626:INFO:Declaring metric variables
2023-02-02 19:16:33,631:INFO:Importing untrained model
2023-02-02 19:16:33,636:INFO:Seasonal Naive Forecaster Imported successfully
2023-02-02 19:16:33,646:INFO:Starting cross validation
2023-02-02 19:16:33,647:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:16:36,263:INFO:Calculating mean and std
2023-02-02 19:16:36,264:INFO:Creating metrics dataframe
2023-02-02 19:16:36,269:INFO:Uploading results into container
2023-02-02 19:16:36,269:INFO:Uploading model into container now
2023-02-02 19:16:36,270:INFO:_master_model_container: 3
2023-02-02 19:16:36,271:INFO:_display_container: 2
2023-02-02 19:16:36,271:INFO:NaiveForecaster(sp=7)
2023-02-02 19:16:36,271:INFO:create_model() successfully completed......................................
2023-02-02 19:16:36,432:INFO:SubProcess create_model() end ==================================
2023-02-02 19:16:36,432:INFO:Creating metrics dataframe
2023-02-02 19:16:36,444:INFO:Initializing Polynomial Trend Forecaster
2023-02-02 19:16:36,444:INFO:Total runtime is 0.1787223935127258 minutes
2023-02-02 19:16:36,448:INFO:SubProcess create_model() called ==================================
2023-02-02 19:16:36,448:INFO:Initializing create_model()
2023-02-02 19:16:36,448:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=polytrend, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:16:36,449:INFO:Checking exceptions
2023-02-02 19:16:36,449:INFO:Importing libraries
2023-02-02 19:16:36,449:INFO:Copying training dataset
2023-02-02 19:16:36,454:INFO:Defining folds
2023-02-02 19:16:36,455:INFO:Declaring metric variables
2023-02-02 19:16:36,459:INFO:Importing untrained model
2023-02-02 19:16:36,464:INFO:Polynomial Trend Forecaster Imported successfully
2023-02-02 19:16:36,475:INFO:Starting cross validation
2023-02-02 19:16:36,477:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:16:39,028:INFO:Calculating mean and std
2023-02-02 19:16:39,030:INFO:Creating metrics dataframe
2023-02-02 19:16:39,035:INFO:Uploading results into container
2023-02-02 19:16:39,036:INFO:Uploading model into container now
2023-02-02 19:16:39,036:INFO:_master_model_container: 4
2023-02-02 19:16:39,037:INFO:_display_container: 2
2023-02-02 19:16:39,037:INFO:PolynomialTrendForecaster()
2023-02-02 19:16:39,037:INFO:create_model() successfully completed......................................
2023-02-02 19:16:39,200:INFO:SubProcess create_model() end ==================================
2023-02-02 19:16:39,200:INFO:Creating metrics dataframe
2023-02-02 19:16:39,212:INFO:Initializing ARIMA
2023-02-02 19:16:39,212:INFO:Total runtime is 0.22485145727793374 minutes
2023-02-02 19:16:39,216:INFO:SubProcess create_model() called ==================================
2023-02-02 19:16:39,216:INFO:Initializing create_model()
2023-02-02 19:16:39,216:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:16:39,217:INFO:Checking exceptions
2023-02-02 19:16:39,217:INFO:Importing libraries
2023-02-02 19:16:39,217:INFO:Copying training dataset
2023-02-02 19:16:39,222:INFO:Defining folds
2023-02-02 19:16:39,222:INFO:Declaring metric variables
2023-02-02 19:16:39,229:INFO:Importing untrained model
2023-02-02 19:16:39,243:INFO:ARIMA Imported successfully
2023-02-02 19:16:39,253:INFO:Starting cross validation
2023-02-02 19:16:39,255:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:16:41,905:INFO:Calculating mean and std
2023-02-02 19:16:41,906:INFO:Creating metrics dataframe
2023-02-02 19:16:41,913:INFO:Uploading results into container
2023-02-02 19:16:41,913:INFO:Uploading model into container now
2023-02-02 19:16:41,914:INFO:_master_model_container: 5
2023-02-02 19:16:41,914:INFO:_display_container: 2
2023-02-02 19:16:41,914:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:16:41,914:INFO:create_model() successfully completed......................................
2023-02-02 19:16:42,074:INFO:SubProcess create_model() end ==================================
2023-02-02 19:16:42,075:INFO:Creating metrics dataframe
2023-02-02 19:16:42,089:INFO:Initializing Auto ARIMA
2023-02-02 19:16:42,089:INFO:Total runtime is 0.27280536890029905 minutes
2023-02-02 19:16:42,094:INFO:SubProcess create_model() called ==================================
2023-02-02 19:16:42,094:INFO:Initializing create_model()
2023-02-02 19:16:42,094:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=auto_arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:16:42,094:INFO:Checking exceptions
2023-02-02 19:16:42,094:INFO:Importing libraries
2023-02-02 19:16:42,094:INFO:Copying training dataset
2023-02-02 19:16:42,101:INFO:Defining folds
2023-02-02 19:16:42,101:INFO:Declaring metric variables
2023-02-02 19:16:42,106:INFO:Importing untrained model
2023-02-02 19:16:42,112:INFO:Auto ARIMA Imported successfully
2023-02-02 19:16:42,123:INFO:Starting cross validation
2023-02-02 19:16:42,124:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:16:47,905:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pmdarima\arima\_auto_solvers.py:522: ModelFitWarning: Error fitting  ARIMA(2,0,1)(2,1,0)[7] intercept (if you do not want to see these warnings, run with error_action="ignore").
  warnings.warn(warning_str, ModelFitWarning)

2023-02-02 19:16:49,714:INFO:Calculating mean and std
2023-02-02 19:16:49,716:INFO:Creating metrics dataframe
2023-02-02 19:16:49,720:INFO:Uploading results into container
2023-02-02 19:16:49,721:INFO:Uploading model into container now
2023-02-02 19:16:49,721:INFO:_master_model_container: 6
2023-02-02 19:16:49,721:INFO:_display_container: 2
2023-02-02 19:16:49,722:INFO:AutoARIMA(random_state=4374, sp=7, suppress_warnings=True)
2023-02-02 19:16:49,722:INFO:create_model() successfully completed......................................
2023-02-02 19:16:49,881:INFO:SubProcess create_model() end ==================================
2023-02-02 19:16:49,881:INFO:Creating metrics dataframe
2023-02-02 19:16:49,896:INFO:Initializing Exponential Smoothing
2023-02-02 19:16:49,896:INFO:Total runtime is 0.4029260834058126 minutes
2023-02-02 19:16:49,900:INFO:SubProcess create_model() called ==================================
2023-02-02 19:16:49,900:INFO:Initializing create_model()
2023-02-02 19:16:49,901:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=exp_smooth, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:16:49,901:INFO:Checking exceptions
2023-02-02 19:16:49,901:INFO:Importing libraries
2023-02-02 19:16:49,901:INFO:Copying training dataset
2023-02-02 19:16:49,906:INFO:Defining folds
2023-02-02 19:16:49,906:INFO:Declaring metric variables
2023-02-02 19:16:49,912:INFO:Importing untrained model
2023-02-02 19:16:49,917:INFO:Exponential Smoothing Imported successfully
2023-02-02 19:16:49,926:INFO:Starting cross validation
2023-02-02 19:16:49,928:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:16:52,670:INFO:Calculating mean and std
2023-02-02 19:16:52,671:INFO:Creating metrics dataframe
2023-02-02 19:16:52,676:INFO:Uploading results into container
2023-02-02 19:16:52,676:INFO:Uploading model into container now
2023-02-02 19:16:52,677:INFO:_master_model_container: 7
2023-02-02 19:16:52,677:INFO:_display_container: 2
2023-02-02 19:16:52,678:INFO:ExponentialSmoothing(seasonal='mul', sp=7, trend='add')
2023-02-02 19:16:52,678:INFO:create_model() successfully completed......................................
2023-02-02 19:16:52,841:INFO:SubProcess create_model() end ==================================
2023-02-02 19:16:52,841:INFO:Creating metrics dataframe
2023-02-02 19:16:52,855:INFO:Initializing Croston
2023-02-02 19:16:52,855:INFO:Total runtime is 0.4522302746772766 minutes
2023-02-02 19:16:52,859:INFO:SubProcess create_model() called ==================================
2023-02-02 19:16:52,859:INFO:Initializing create_model()
2023-02-02 19:16:52,859:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=croston, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:16:52,860:INFO:Checking exceptions
2023-02-02 19:16:52,860:INFO:Importing libraries
2023-02-02 19:16:52,860:INFO:Copying training dataset
2023-02-02 19:16:52,865:INFO:Defining folds
2023-02-02 19:16:52,865:INFO:Declaring metric variables
2023-02-02 19:16:52,870:INFO:Importing untrained model
2023-02-02 19:16:52,875:INFO:Croston Imported successfully
2023-02-02 19:16:52,883:INFO:Starting cross validation
2023-02-02 19:16:52,885:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:16:55,433:INFO:Calculating mean and std
2023-02-02 19:16:55,435:INFO:Creating metrics dataframe
2023-02-02 19:16:55,439:INFO:Uploading results into container
2023-02-02 19:16:55,440:INFO:Uploading model into container now
2023-02-02 19:16:55,440:INFO:_master_model_container: 8
2023-02-02 19:16:55,440:INFO:_display_container: 2
2023-02-02 19:16:55,440:INFO:Croston()
2023-02-02 19:16:55,441:INFO:create_model() successfully completed......................................
2023-02-02 19:16:55,599:INFO:SubProcess create_model() end ==================================
2023-02-02 19:16:55,599:INFO:Creating metrics dataframe
2023-02-02 19:16:55,613:INFO:Initializing ETS
2023-02-02 19:16:55,614:INFO:Total runtime is 0.4982271154721578 minutes
2023-02-02 19:16:55,618:INFO:SubProcess create_model() called ==================================
2023-02-02 19:16:55,619:INFO:Initializing create_model()
2023-02-02 19:16:55,619:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=ets, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:16:55,619:INFO:Checking exceptions
2023-02-02 19:16:55,619:INFO:Importing libraries
2023-02-02 19:16:55,619:INFO:Copying training dataset
2023-02-02 19:16:55,624:INFO:Defining folds
2023-02-02 19:16:55,624:INFO:Declaring metric variables
2023-02-02 19:16:55,629:INFO:Importing untrained model
2023-02-02 19:16:55,634:INFO:ETS Imported successfully
2023-02-02 19:16:55,645:INFO:Starting cross validation
2023-02-02 19:16:55,647:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:16:55,783:INFO:Calculating mean and std
2023-02-02 19:16:55,784:INFO:Creating metrics dataframe
2023-02-02 19:16:55,788:INFO:Uploading results into container
2023-02-02 19:16:55,788:INFO:Uploading model into container now
2023-02-02 19:16:55,789:INFO:_master_model_container: 9
2023-02-02 19:16:55,789:INFO:_display_container: 2
2023-02-02 19:16:55,789:INFO:AutoETS(seasonal='mul', sp=7, trend='add')
2023-02-02 19:16:55,789:INFO:create_model() successfully completed......................................
2023-02-02 19:16:55,943:INFO:SubProcess create_model() end ==================================
2023-02-02 19:16:55,943:INFO:Creating metrics dataframe
2023-02-02 19:16:55,959:INFO:Initializing Theta Forecaster
2023-02-02 19:16:55,959:INFO:Total runtime is 0.5039735515912374 minutes
2023-02-02 19:16:55,963:INFO:SubProcess create_model() called ==================================
2023-02-02 19:16:55,963:INFO:Initializing create_model()
2023-02-02 19:16:55,963:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=theta, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:16:55,964:INFO:Checking exceptions
2023-02-02 19:16:55,964:INFO:Importing libraries
2023-02-02 19:16:55,964:INFO:Copying training dataset
2023-02-02 19:16:55,970:INFO:Defining folds
2023-02-02 19:16:55,970:INFO:Declaring metric variables
2023-02-02 19:16:55,974:INFO:Importing untrained model
2023-02-02 19:16:55,979:INFO:Theta Forecaster Imported successfully
2023-02-02 19:16:55,988:INFO:Starting cross validation
2023-02-02 19:16:55,989:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:16:56,058:INFO:Calculating mean and std
2023-02-02 19:16:56,059:INFO:Creating metrics dataframe
2023-02-02 19:16:56,063:INFO:Uploading results into container
2023-02-02 19:16:56,063:INFO:Uploading model into container now
2023-02-02 19:16:56,063:INFO:_master_model_container: 10
2023-02-02 19:16:56,063:INFO:_display_container: 2
2023-02-02 19:16:56,064:INFO:ThetaForecaster(sp=7)
2023-02-02 19:16:56,064:INFO:create_model() successfully completed......................................
2023-02-02 19:16:56,219:INFO:SubProcess create_model() end ==================================
2023-02-02 19:16:56,219:INFO:Creating metrics dataframe
2023-02-02 19:16:56,233:INFO:Initializing Linear w/ Cond. Deseasonalize & Detrending
2023-02-02 19:16:56,234:INFO:Total runtime is 0.5085542400677998 minutes
2023-02-02 19:16:56,238:INFO:SubProcess create_model() called ==================================
2023-02-02 19:16:56,238:INFO:Initializing create_model()
2023-02-02 19:16:56,238:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=lr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:16:56,238:INFO:Checking exceptions
2023-02-02 19:16:56,238:INFO:Importing libraries
2023-02-02 19:16:56,239:INFO:Copying training dataset
2023-02-02 19:16:56,244:INFO:Defining folds
2023-02-02 19:16:56,244:INFO:Declaring metric variables
2023-02-02 19:16:56,249:INFO:Importing untrained model
2023-02-02 19:16:56,254:INFO:Linear w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:16:56,262:INFO:Starting cross validation
2023-02-02 19:16:56,263:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:16:56,571:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:16:56,571:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:16:56,571:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:16:56,571:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:16:56,648:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:56,861:INFO:Calculating mean and std
2023-02-02 19:16:56,862:INFO:Creating metrics dataframe
2023-02-02 19:16:56,866:INFO:Uploading results into container
2023-02-02 19:16:56,866:INFO:Uploading model into container now
2023-02-02 19:16:56,866:INFO:_master_model_container: 11
2023-02-02 19:16:56,866:INFO:_display_container: 2
2023-02-02 19:16:56,869:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LinearRegression(n_jobs=-1), sp=7,
                    window_length=7)
2023-02-02 19:16:56,869:INFO:create_model() successfully completed......................................
2023-02-02 19:16:57,019:INFO:SubProcess create_model() end ==================================
2023-02-02 19:16:57,019:INFO:Creating metrics dataframe
2023-02-02 19:16:57,035:INFO:Initializing Elastic Net w/ Cond. Deseasonalize & Detrending
2023-02-02 19:16:57,035:INFO:Total runtime is 0.5219051599502563 minutes
2023-02-02 19:16:57,039:INFO:SubProcess create_model() called ==================================
2023-02-02 19:16:57,040:INFO:Initializing create_model()
2023-02-02 19:16:57,040:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=en_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:16:57,040:INFO:Checking exceptions
2023-02-02 19:16:57,040:INFO:Importing libraries
2023-02-02 19:16:57,040:INFO:Copying training dataset
2023-02-02 19:16:57,045:INFO:Defining folds
2023-02-02 19:16:57,045:INFO:Declaring metric variables
2023-02-02 19:16:57,050:INFO:Importing untrained model
2023-02-02 19:16:57,055:INFO:Elastic Net w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:16:57,064:INFO:Starting cross validation
2023-02-02 19:16:57,066:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:16:57,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:16:57,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:16:57,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:16:57,372:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:16:57,438:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:57,660:INFO:Calculating mean and std
2023-02-02 19:16:57,661:INFO:Creating metrics dataframe
2023-02-02 19:16:57,665:INFO:Uploading results into container
2023-02-02 19:16:57,665:INFO:Uploading model into container now
2023-02-02 19:16:57,666:INFO:_master_model_container: 12
2023-02-02 19:16:57,666:INFO:_display_container: 2
2023-02-02 19:16:57,668:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=ElasticNet(random_state=4374), sp=7,
                    window_length=7)
2023-02-02 19:16:57,668:INFO:create_model() successfully completed......................................
2023-02-02 19:16:57,819:INFO:SubProcess create_model() end ==================================
2023-02-02 19:16:57,820:INFO:Creating metrics dataframe
2023-02-02 19:16:57,836:INFO:Initializing Ridge w/ Cond. Deseasonalize & Detrending
2023-02-02 19:16:57,836:INFO:Total runtime is 0.5352469404538472 minutes
2023-02-02 19:16:57,843:INFO:SubProcess create_model() called ==================================
2023-02-02 19:16:57,843:INFO:Initializing create_model()
2023-02-02 19:16:57,843:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=ridge_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:16:57,843:INFO:Checking exceptions
2023-02-02 19:16:57,844:INFO:Importing libraries
2023-02-02 19:16:57,844:INFO:Copying training dataset
2023-02-02 19:16:57,848:INFO:Defining folds
2023-02-02 19:16:57,849:INFO:Declaring metric variables
2023-02-02 19:16:57,853:INFO:Importing untrained model
2023-02-02 19:16:57,859:INFO:Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:16:57,867:INFO:Starting cross validation
2023-02-02 19:16:57,869:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:16:58,151:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:16:58,151:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:16:58,151:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:16:58,152:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:16:58,225:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:58,437:INFO:Calculating mean and std
2023-02-02 19:16:58,439:INFO:Creating metrics dataframe
2023-02-02 19:16:58,443:INFO:Uploading results into container
2023-02-02 19:16:58,443:INFO:Uploading model into container now
2023-02-02 19:16:58,443:INFO:_master_model_container: 13
2023-02-02 19:16:58,443:INFO:_display_container: 2
2023-02-02 19:16:58,445:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Ridge(random_state=4374), sp=7, window_length=7)
2023-02-02 19:16:58,445:INFO:create_model() successfully completed......................................
2023-02-02 19:16:58,599:INFO:SubProcess create_model() end ==================================
2023-02-02 19:16:58,600:INFO:Creating metrics dataframe
2023-02-02 19:16:58,616:INFO:Initializing Lasso w/ Cond. Deseasonalize & Detrending
2023-02-02 19:16:58,617:INFO:Total runtime is 0.5482697089513143 minutes
2023-02-02 19:16:58,622:INFO:SubProcess create_model() called ==================================
2023-02-02 19:16:58,622:INFO:Initializing create_model()
2023-02-02 19:16:58,622:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=lasso_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:16:58,622:INFO:Checking exceptions
2023-02-02 19:16:58,622:INFO:Importing libraries
2023-02-02 19:16:58,623:INFO:Copying training dataset
2023-02-02 19:16:58,628:INFO:Defining folds
2023-02-02 19:16:58,628:INFO:Declaring metric variables
2023-02-02 19:16:58,633:INFO:Importing untrained model
2023-02-02 19:16:58,638:INFO:Lasso w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:16:58,648:INFO:Starting cross validation
2023-02-02 19:16:58,650:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:16:58,931:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:16:58,931:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:16:58,931:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:16:58,931:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:16:58,997:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:59,217:INFO:Calculating mean and std
2023-02-02 19:16:59,218:INFO:Creating metrics dataframe
2023-02-02 19:16:59,224:INFO:Uploading results into container
2023-02-02 19:16:59,224:INFO:Uploading model into container now
2023-02-02 19:16:59,225:INFO:_master_model_container: 14
2023-02-02 19:16:59,225:INFO:_display_container: 2
2023-02-02 19:16:59,228:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Lasso(random_state=4374), sp=7, window_length=7)
2023-02-02 19:16:59,228:INFO:create_model() successfully completed......................................
2023-02-02 19:16:59,381:INFO:SubProcess create_model() end ==================================
2023-02-02 19:16:59,381:INFO:Creating metrics dataframe
2023-02-02 19:16:59,399:INFO:Initializing Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-02-02 19:16:59,399:INFO:Total runtime is 0.5612985968589783 minutes
2023-02-02 19:16:59,403:INFO:SubProcess create_model() called ==================================
2023-02-02 19:16:59,403:INFO:Initializing create_model()
2023-02-02 19:16:59,403:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=lar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:16:59,403:INFO:Checking exceptions
2023-02-02 19:16:59,403:INFO:Importing libraries
2023-02-02 19:16:59,403:INFO:Copying training dataset
2023-02-02 19:16:59,409:INFO:Defining folds
2023-02-02 19:16:59,409:INFO:Declaring metric variables
2023-02-02 19:16:59,413:INFO:Importing untrained model
2023-02-02 19:16:59,419:INFO:Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:16:59,430:INFO:Starting cross validation
2023-02-02 19:16:59,431:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:16:59,711:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:16:59,712:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:16:59,712:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:16:59,712:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:16:59,777:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:16:59,853:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:16:59,998:INFO:Calculating mean and std
2023-02-02 19:17:00,000:INFO:Creating metrics dataframe
2023-02-02 19:17:00,004:INFO:Uploading results into container
2023-02-02 19:17:00,004:INFO:Uploading model into container now
2023-02-02 19:17:00,004:INFO:_master_model_container: 15
2023-02-02 19:17:00,004:INFO:_display_container: 2
2023-02-02 19:17:00,006:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Lars(random_state=4374), sp=7, window_length=7)
2023-02-02 19:17:00,006:INFO:create_model() successfully completed......................................
2023-02-02 19:17:00,160:INFO:SubProcess create_model() end ==================================
2023-02-02 19:17:00,160:INFO:Creating metrics dataframe
2023-02-02 19:17:00,180:INFO:Initializing Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-02-02 19:17:00,180:INFO:Total runtime is 0.5743260025978089 minutes
2023-02-02 19:17:00,185:INFO:SubProcess create_model() called ==================================
2023-02-02 19:17:00,185:INFO:Initializing create_model()
2023-02-02 19:17:00,185:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=llar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:17:00,185:INFO:Checking exceptions
2023-02-02 19:17:00,185:INFO:Importing libraries
2023-02-02 19:17:00,185:INFO:Copying training dataset
2023-02-02 19:17:00,190:INFO:Defining folds
2023-02-02 19:17:00,190:INFO:Declaring metric variables
2023-02-02 19:17:00,207:INFO:Importing untrained model
2023-02-02 19:17:00,214:INFO:Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:17:00,226:INFO:Starting cross validation
2023-02-02 19:17:00,228:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:17:00,516:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:17:00,517:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:17:00,517:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:17:00,517:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:17:00,585:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:17:00,658:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 19:17:00,801:INFO:Calculating mean and std
2023-02-02 19:17:00,803:INFO:Creating metrics dataframe
2023-02-02 19:17:00,807:INFO:Uploading results into container
2023-02-02 19:17:00,807:INFO:Uploading model into container now
2023-02-02 19:17:00,807:INFO:_master_model_container: 16
2023-02-02 19:17:00,807:INFO:_display_container: 2
2023-02-02 19:17:00,810:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LassoLars(random_state=4374), sp=7,
                    window_length=7)
2023-02-02 19:17:00,810:INFO:create_model() successfully completed......................................
2023-02-02 19:17:00,962:INFO:SubProcess create_model() end ==================================
2023-02-02 19:17:00,962:INFO:Creating metrics dataframe
2023-02-02 19:17:00,979:INFO:Initializing Bayesian Ridge w/ Cond. Deseasonalize & Detrending
2023-02-02 19:17:00,979:INFO:Total runtime is 0.5876422127087911 minutes
2023-02-02 19:17:00,984:INFO:SubProcess create_model() called ==================================
2023-02-02 19:17:00,985:INFO:Initializing create_model()
2023-02-02 19:17:00,985:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=br_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:17:00,985:INFO:Checking exceptions
2023-02-02 19:17:00,985:INFO:Importing libraries
2023-02-02 19:17:00,985:INFO:Copying training dataset
2023-02-02 19:17:00,991:INFO:Defining folds
2023-02-02 19:17:00,991:INFO:Declaring metric variables
2023-02-02 19:17:00,995:INFO:Importing untrained model
2023-02-02 19:17:01,001:INFO:Bayesian Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:17:01,009:INFO:Starting cross validation
2023-02-02 19:17:01,011:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:17:01,294:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:17:01,294:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:17:01,294:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:17:01,294:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:17:01,361:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:17:01,575:INFO:Calculating mean and std
2023-02-02 19:17:01,577:INFO:Creating metrics dataframe
2023-02-02 19:17:01,581:INFO:Uploading results into container
2023-02-02 19:17:01,581:INFO:Uploading model into container now
2023-02-02 19:17:01,581:INFO:_master_model_container: 17
2023-02-02 19:17:01,581:INFO:_display_container: 2
2023-02-02 19:17:01,583:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=BayesianRidge(), sp=7, window_length=7)
2023-02-02 19:17:01,583:INFO:create_model() successfully completed......................................
2023-02-02 19:17:01,734:INFO:SubProcess create_model() end ==================================
2023-02-02 19:17:01,735:INFO:Creating metrics dataframe
2023-02-02 19:17:01,752:INFO:Initializing Huber w/ Cond. Deseasonalize & Detrending
2023-02-02 19:17:01,752:INFO:Total runtime is 0.6005176266034444 minutes
2023-02-02 19:17:01,757:INFO:SubProcess create_model() called ==================================
2023-02-02 19:17:01,757:INFO:Initializing create_model()
2023-02-02 19:17:01,757:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=huber_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:17:01,757:INFO:Checking exceptions
2023-02-02 19:17:01,757:INFO:Importing libraries
2023-02-02 19:17:01,757:INFO:Copying training dataset
2023-02-02 19:17:01,763:INFO:Defining folds
2023-02-02 19:17:01,763:INFO:Declaring metric variables
2023-02-02 19:17:01,768:INFO:Importing untrained model
2023-02-02 19:17:01,773:INFO:Huber w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:17:01,783:INFO:Starting cross validation
2023-02-02 19:17:01,784:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:17:02,065:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:17:02,065:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:17:02,065:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:17:02,065:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:17:02,128:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:17:02,238:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-02-02 19:17:02,384:INFO:Calculating mean and std
2023-02-02 19:17:02,386:INFO:Creating metrics dataframe
2023-02-02 19:17:02,390:INFO:Uploading results into container
2023-02-02 19:17:02,390:INFO:Uploading model into container now
2023-02-02 19:17:02,390:INFO:_master_model_container: 18
2023-02-02 19:17:02,390:INFO:_display_container: 2
2023-02-02 19:17:02,392:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=HuberRegressor(), sp=7, window_length=7)
2023-02-02 19:17:02,392:INFO:create_model() successfully completed......................................
2023-02-02 19:17:02,543:INFO:SubProcess create_model() end ==================================
2023-02-02 19:17:02,543:INFO:Creating metrics dataframe
2023-02-02 19:17:02,565:INFO:Initializing Passive Aggressive w/ Cond. Deseasonalize & Detrending
2023-02-02 19:17:02,565:INFO:Total runtime is 0.6140718102455139 minutes
2023-02-02 19:17:02,570:INFO:SubProcess create_model() called ==================================
2023-02-02 19:17:02,570:INFO:Initializing create_model()
2023-02-02 19:17:02,570:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=par_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:17:02,570:INFO:Checking exceptions
2023-02-02 19:17:02,570:INFO:Importing libraries
2023-02-02 19:17:02,570:INFO:Copying training dataset
2023-02-02 19:17:02,575:INFO:Defining folds
2023-02-02 19:17:02,576:INFO:Declaring metric variables
2023-02-02 19:17:02,580:INFO:Importing untrained model
2023-02-02 19:17:02,587:INFO:Passive Aggressive w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:17:02,597:INFO:Starting cross validation
2023-02-02 19:17:02,598:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:17:02,819:INFO:Calculating mean and std
2023-02-02 19:17:02,820:INFO:Creating metrics dataframe
2023-02-02 19:17:02,824:INFO:Uploading results into container
2023-02-02 19:17:02,825:INFO:Uploading model into container now
2023-02-02 19:17:02,825:INFO:_master_model_container: 19
2023-02-02 19:17:02,825:INFO:_display_container: 2
2023-02-02 19:17:02,827:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=PassiveAggressiveRegressor(random_state=4374),
                    sp=7, window_length=7)
2023-02-02 19:17:02,827:INFO:create_model() successfully completed......................................
2023-02-02 19:17:02,978:INFO:SubProcess create_model() end ==================================
2023-02-02 19:17:02,979:INFO:Creating metrics dataframe
2023-02-02 19:17:02,998:INFO:Initializing Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending
2023-02-02 19:17:02,998:INFO:Total runtime is 0.6212840795516968 minutes
2023-02-02 19:17:03,002:INFO:SubProcess create_model() called ==================================
2023-02-02 19:17:03,002:INFO:Initializing create_model()
2023-02-02 19:17:03,002:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=omp_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:17:03,002:INFO:Checking exceptions
2023-02-02 19:17:03,003:INFO:Importing libraries
2023-02-02 19:17:03,003:INFO:Copying training dataset
2023-02-02 19:17:03,008:INFO:Defining folds
2023-02-02 19:17:03,008:INFO:Declaring metric variables
2023-02-02 19:17:03,014:INFO:Importing untrained model
2023-02-02 19:17:03,019:INFO:Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:17:03,029:INFO:Starting cross validation
2023-02-02 19:17:03,030:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:17:03,112:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:17:03,257:INFO:Calculating mean and std
2023-02-02 19:17:03,258:INFO:Creating metrics dataframe
2023-02-02 19:17:03,262:INFO:Uploading results into container
2023-02-02 19:17:03,262:INFO:Uploading model into container now
2023-02-02 19:17:03,263:INFO:_master_model_container: 20
2023-02-02 19:17:03,263:INFO:_display_container: 2
2023-02-02 19:17:03,265:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=OrthogonalMatchingPursuit(), sp=7,
                    window_length=7)
2023-02-02 19:17:03,265:INFO:create_model() successfully completed......................................
2023-02-02 19:17:03,416:INFO:SubProcess create_model() end ==================================
2023-02-02 19:17:03,416:INFO:Creating metrics dataframe
2023-02-02 19:17:03,437:INFO:Initializing K Neighbors w/ Cond. Deseasonalize & Detrending
2023-02-02 19:17:03,437:INFO:Total runtime is 0.628595761458079 minutes
2023-02-02 19:17:03,443:INFO:SubProcess create_model() called ==================================
2023-02-02 19:17:03,443:INFO:Initializing create_model()
2023-02-02 19:17:03,443:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=knn_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:17:03,443:INFO:Checking exceptions
2023-02-02 19:17:03,443:INFO:Importing libraries
2023-02-02 19:17:03,443:INFO:Copying training dataset
2023-02-02 19:17:03,449:INFO:Defining folds
2023-02-02 19:17:03,449:INFO:Declaring metric variables
2023-02-02 19:17:03,453:INFO:Importing untrained model
2023-02-02 19:17:03,459:INFO:K Neighbors w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:17:03,467:INFO:Starting cross validation
2023-02-02 19:17:03,469:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:17:03,730:INFO:Calculating mean and std
2023-02-02 19:17:03,732:INFO:Creating metrics dataframe
2023-02-02 19:17:03,736:INFO:Uploading results into container
2023-02-02 19:17:03,736:INFO:Uploading model into container now
2023-02-02 19:17:03,736:INFO:_master_model_container: 21
2023-02-02 19:17:03,736:INFO:_display_container: 2
2023-02-02 19:17:03,738:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=KNeighborsRegressor(n_jobs=-1), sp=7,
                    window_length=7)
2023-02-02 19:17:03,738:INFO:create_model() successfully completed......................................
2023-02-02 19:17:03,889:INFO:SubProcess create_model() end ==================================
2023-02-02 19:17:03,890:INFO:Creating metrics dataframe
2023-02-02 19:17:03,910:INFO:Initializing Decision Tree w/ Cond. Deseasonalize & Detrending
2023-02-02 19:17:03,910:INFO:Total runtime is 0.6364924192428589 minutes
2023-02-02 19:17:03,914:INFO:SubProcess create_model() called ==================================
2023-02-02 19:17:03,915:INFO:Initializing create_model()
2023-02-02 19:17:03,915:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=dt_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:17:03,915:INFO:Checking exceptions
2023-02-02 19:17:03,915:INFO:Importing libraries
2023-02-02 19:17:03,915:INFO:Copying training dataset
2023-02-02 19:17:03,920:INFO:Defining folds
2023-02-02 19:17:03,920:INFO:Declaring metric variables
2023-02-02 19:17:03,925:INFO:Importing untrained model
2023-02-02 19:17:03,930:INFO:Decision Tree w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:17:03,939:INFO:Starting cross validation
2023-02-02 19:17:03,941:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:17:04,166:INFO:Calculating mean and std
2023-02-02 19:17:04,168:INFO:Creating metrics dataframe
2023-02-02 19:17:04,173:INFO:Uploading results into container
2023-02-02 19:17:04,173:INFO:Uploading model into container now
2023-02-02 19:17:04,174:INFO:_master_model_container: 22
2023-02-02 19:17:04,174:INFO:_display_container: 2
2023-02-02 19:17:04,177:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=DecisionTreeRegressor(random_state=4374), sp=7,
                    window_length=7)
2023-02-02 19:17:04,178:INFO:create_model() successfully completed......................................
2023-02-02 19:17:04,332:INFO:SubProcess create_model() end ==================================
2023-02-02 19:17:04,332:INFO:Creating metrics dataframe
2023-02-02 19:17:04,350:INFO:Initializing Random Forest w/ Cond. Deseasonalize & Detrending
2023-02-02 19:17:04,350:INFO:Total runtime is 0.643818728129069 minutes
2023-02-02 19:17:04,354:INFO:SubProcess create_model() called ==================================
2023-02-02 19:17:04,355:INFO:Initializing create_model()
2023-02-02 19:17:04,355:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=rf_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:17:04,355:INFO:Checking exceptions
2023-02-02 19:17:04,355:INFO:Importing libraries
2023-02-02 19:17:04,355:INFO:Copying training dataset
2023-02-02 19:17:04,360:INFO:Defining folds
2023-02-02 19:17:04,361:INFO:Declaring metric variables
2023-02-02 19:17:04,365:INFO:Importing untrained model
2023-02-02 19:17:04,370:INFO:Random Forest w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:17:04,380:INFO:Starting cross validation
2023-02-02 19:17:04,382:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:17:04,831:INFO:Calculating mean and std
2023-02-02 19:17:04,833:INFO:Creating metrics dataframe
2023-02-02 19:17:04,837:INFO:Uploading results into container
2023-02-02 19:17:04,837:INFO:Uploading model into container now
2023-02-02 19:17:04,837:INFO:_master_model_container: 23
2023-02-02 19:17:04,837:INFO:_display_container: 2
2023-02-02 19:17:04,840:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=RandomForestRegressor(n_jobs=-1,
                                                    random_state=4374),
                    sp=7, window_length=7)
2023-02-02 19:17:04,840:INFO:create_model() successfully completed......................................
2023-02-02 19:17:04,991:INFO:SubProcess create_model() end ==================================
2023-02-02 19:17:04,991:INFO:Creating metrics dataframe
2023-02-02 19:17:05,011:INFO:Initializing Extra Trees w/ Cond. Deseasonalize & Detrending
2023-02-02 19:17:05,011:INFO:Total runtime is 0.6548319419225057 minutes
2023-02-02 19:17:05,016:INFO:SubProcess create_model() called ==================================
2023-02-02 19:17:05,016:INFO:Initializing create_model()
2023-02-02 19:17:05,016:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=et_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:17:05,016:INFO:Checking exceptions
2023-02-02 19:17:05,017:INFO:Importing libraries
2023-02-02 19:17:05,017:INFO:Copying training dataset
2023-02-02 19:17:05,022:INFO:Defining folds
2023-02-02 19:17:05,022:INFO:Declaring metric variables
2023-02-02 19:17:05,027:INFO:Importing untrained model
2023-02-02 19:17:05,032:INFO:Extra Trees w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:17:05,042:INFO:Starting cross validation
2023-02-02 19:17:05,049:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:17:05,478:INFO:Calculating mean and std
2023-02-02 19:17:05,480:INFO:Creating metrics dataframe
2023-02-02 19:17:05,484:INFO:Uploading results into container
2023-02-02 19:17:05,484:INFO:Uploading model into container now
2023-02-02 19:17:05,484:INFO:_master_model_container: 24
2023-02-02 19:17:05,484:INFO:_display_container: 2
2023-02-02 19:17:05,487:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(n_jobs=-1, random_state=4374),
                    sp=7, window_length=7)
2023-02-02 19:17:05,487:INFO:create_model() successfully completed......................................
2023-02-02 19:17:05,639:INFO:SubProcess create_model() end ==================================
2023-02-02 19:17:05,639:INFO:Creating metrics dataframe
2023-02-02 19:17:05,661:INFO:Initializing Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-02-02 19:17:05,661:INFO:Total runtime is 0.665677551428477 minutes
2023-02-02 19:17:05,666:INFO:SubProcess create_model() called ==================================
2023-02-02 19:17:05,666:INFO:Initializing create_model()
2023-02-02 19:17:05,666:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=gbr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:17:05,666:INFO:Checking exceptions
2023-02-02 19:17:05,666:INFO:Importing libraries
2023-02-02 19:17:05,666:INFO:Copying training dataset
2023-02-02 19:17:05,671:INFO:Defining folds
2023-02-02 19:17:05,672:INFO:Declaring metric variables
2023-02-02 19:17:05,676:INFO:Importing untrained model
2023-02-02 19:17:05,682:INFO:Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:17:05,690:INFO:Starting cross validation
2023-02-02 19:17:05,691:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:17:05,941:INFO:Calculating mean and std
2023-02-02 19:17:05,942:INFO:Creating metrics dataframe
2023-02-02 19:17:05,946:INFO:Uploading results into container
2023-02-02 19:17:05,946:INFO:Uploading model into container now
2023-02-02 19:17:05,947:INFO:_master_model_container: 25
2023-02-02 19:17:05,947:INFO:_display_container: 2
2023-02-02 19:17:05,949:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=GradientBoostingRegressor(random_state=4374),
                    sp=7, window_length=7)
2023-02-02 19:17:05,950:INFO:create_model() successfully completed......................................
2023-02-02 19:17:06,101:INFO:SubProcess create_model() end ==================================
2023-02-02 19:17:06,101:INFO:Creating metrics dataframe
2023-02-02 19:17:06,123:INFO:Initializing AdaBoost w/ Cond. Deseasonalize & Detrending
2023-02-02 19:17:06,123:INFO:Total runtime is 0.6733727892239888 minutes
2023-02-02 19:17:06,128:INFO:SubProcess create_model() called ==================================
2023-02-02 19:17:06,128:INFO:Initializing create_model()
2023-02-02 19:17:06,128:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=ada_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:17:06,128:INFO:Checking exceptions
2023-02-02 19:17:06,128:INFO:Importing libraries
2023-02-02 19:17:06,129:INFO:Copying training dataset
2023-02-02 19:17:06,135:INFO:Defining folds
2023-02-02 19:17:06,135:INFO:Declaring metric variables
2023-02-02 19:17:06,139:INFO:Importing untrained model
2023-02-02 19:17:06,145:INFO:AdaBoost w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:17:06,154:INFO:Starting cross validation
2023-02-02 19:17:06,156:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:17:06,462:INFO:Calculating mean and std
2023-02-02 19:17:06,463:INFO:Creating metrics dataframe
2023-02-02 19:17:06,467:INFO:Uploading results into container
2023-02-02 19:17:06,467:INFO:Uploading model into container now
2023-02-02 19:17:06,467:INFO:_master_model_container: 26
2023-02-02 19:17:06,467:INFO:_display_container: 2
2023-02-02 19:17:06,469:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=AdaBoostRegressor(random_state=4374), sp=7,
                    window_length=7)
2023-02-02 19:17:06,470:INFO:create_model() successfully completed......................................
2023-02-02 19:17:06,622:INFO:SubProcess create_model() end ==================================
2023-02-02 19:17:06,622:INFO:Creating metrics dataframe
2023-02-02 19:17:06,643:INFO:Initializing Light Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-02-02 19:17:06,644:INFO:Total runtime is 0.6820507725079854 minutes
2023-02-02 19:17:06,649:INFO:SubProcess create_model() called ==================================
2023-02-02 19:17:06,649:INFO:Initializing create_model()
2023-02-02 19:17:06,649:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=lightgbm_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128F90DF0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:17:06,650:INFO:Checking exceptions
2023-02-02 19:17:06,650:INFO:Importing libraries
2023-02-02 19:17:06,650:INFO:Copying training dataset
2023-02-02 19:17:06,655:INFO:Defining folds
2023-02-02 19:17:06,656:INFO:Declaring metric variables
2023-02-02 19:17:06,660:INFO:Importing untrained model
2023-02-02 19:17:06,667:INFO:Light Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:17:06,680:INFO:Starting cross validation
2023-02-02 19:17:06,681:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:17:06,924:INFO:Calculating mean and std
2023-02-02 19:17:06,926:INFO:Creating metrics dataframe
2023-02-02 19:17:06,929:INFO:Uploading results into container
2023-02-02 19:17:06,929:INFO:Uploading model into container now
2023-02-02 19:17:06,929:INFO:_master_model_container: 27
2023-02-02 19:17:06,929:INFO:_display_container: 2
2023-02-02 19:17:06,931:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LGBMRegressor(random_state=4374), sp=7,
                    window_length=7)
2023-02-02 19:17:06,931:INFO:create_model() successfully completed......................................
2023-02-02 19:17:07,083:INFO:SubProcess create_model() end ==================================
2023-02-02 19:17:07,083:INFO:Creating metrics dataframe
2023-02-02 19:17:07,115:INFO:Initializing create_model()
2023-02-02 19:17:07,115:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:17:07,116:INFO:Checking exceptions
2023-02-02 19:17:07,118:INFO:Importing libraries
2023-02-02 19:17:07,119:INFO:Copying training dataset
2023-02-02 19:17:07,123:INFO:Defining folds
2023-02-02 19:17:07,123:INFO:Declaring metric variables
2023-02-02 19:17:07,124:INFO:Importing untrained model
2023-02-02 19:17:07,124:INFO:Declaring custom model
2023-02-02 19:17:07,125:INFO:ARIMA Imported successfully
2023-02-02 19:17:07,125:INFO:Cross validation set to False
2023-02-02 19:17:07,125:INFO:Fitting Model
2023-02-02 19:17:07,186:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:17:07,186:INFO:create_model() successfully completed......................................
2023-02-02 19:17:07,389:INFO:_master_model_container: 27
2023-02-02 19:17:07,390:INFO:_display_container: 2
2023-02-02 19:17:07,390:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:17:07,391:INFO:compare_models() successfully completed......................................
2023-02-02 19:17:07,402:INFO:Initializing create_model()
2023-02-02 19:17:07,403:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:17:07,403:INFO:Checking exceptions
2023-02-02 19:17:07,428:INFO:Importing libraries
2023-02-02 19:17:07,428:INFO:Copying training dataset
2023-02-02 19:17:07,433:INFO:Defining folds
2023-02-02 19:17:07,434:INFO:Declaring metric variables
2023-02-02 19:17:07,440:INFO:Importing untrained model
2023-02-02 19:17:07,445:INFO:ARIMA Imported successfully
2023-02-02 19:17:07,455:INFO:Starting cross validation
2023-02-02 19:17:07,456:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:17:07,578:INFO:Calculating mean and std
2023-02-02 19:17:07,579:INFO:Creating metrics dataframe
2023-02-02 19:17:07,586:INFO:Finalizing model
2023-02-02 19:17:07,649:INFO:Uploading results into container
2023-02-02 19:17:07,649:INFO:Uploading model into container now
2023-02-02 19:17:07,659:INFO:_master_model_container: 28
2023-02-02 19:17:07,660:INFO:_display_container: 3
2023-02-02 19:17:07,660:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:17:07,660:INFO:create_model() successfully completed......................................
2023-02-02 19:17:07,831:INFO:Initializing finalize_model()
2023-02-02 19:17:07,832:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 19:17:07,832:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:17:07,836:INFO:Initializing create_model()
2023-02-02 19:17:07,836:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C1292D5550>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 19:17:07,836:INFO:Checking exceptions
2023-02-02 19:17:07,839:INFO:Importing libraries
2023-02-02 19:17:07,839:INFO:Copying training dataset
2023-02-02 19:17:07,842:INFO:Defining folds
2023-02-02 19:17:07,842:INFO:Declaring metric variables
2023-02-02 19:17:07,843:INFO:Importing untrained model
2023-02-02 19:17:07,843:INFO:Declaring custom model
2023-02-02 19:17:07,844:INFO:ARIMA Imported successfully
2023-02-02 19:17:07,844:INFO:Cross validation set to False
2023-02-02 19:17:07,844:INFO:Fitting Model
2023-02-02 19:17:07,909:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:17:07,910:INFO:create_model() successfully completed......................................
2023-02-02 19:17:08,061:INFO:_master_model_container: 28
2023-02-02 19:17:08,061:INFO:_display_container: 3
2023-02-02 19:17:08,067:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:17:08,067:INFO:finalize_model() successfully completed......................................
2023-02-02 19:17:08,283:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 19:17:08,522:INFO:Visual Rendered Successfully
2023-02-02 19:23:10,233:INFO:Visual Rendered Successfully
2023-02-02 19:29:22,365:INFO:Visual Rendered Successfully
2023-02-02 19:31:32,307:INFO:Visual Rendered Successfully
2023-02-02 19:32:10,344:INFO:PyCaret TSForecastingExperiment
2023-02-02 19:32:10,345:INFO:Logging name: ts-default-name
2023-02-02 19:32:10,345:INFO:ML Usecase: MLUsecase.TIME_SERIES
2023-02-02 19:32:10,345:INFO:version 3.0.0.rc8
2023-02-02 19:32:10,345:INFO:Initializing setup()
2023-02-02 19:32:10,345:INFO:self.USI: 97f5
2023-02-02 19:32:10,345:INFO:self._variable_keys: {'gpu_n_jobs_param', 'candidate_sps', 'fold_generator', 'n_jobs_param', 'enforce_exogenous', 'y_test_transformed', 'enforce_pi', 'pipeline', 'X_test', 'fh', 'idx', 'y_test', 'primary_sp_to_use', 'memory', 'html_param', 'gpu_param', 'data', 'approach_type', 'log_plots_param', 'y_transformed', 'X_test_transformed', 'exp_name_log', 'fold_param', 'strictly_positive', 'seed', 'X', 'exp_id', 'X_train_transformed', 'exogenous_present', 'model_engines', 'X_transformed', 'index_type', 'all_sps_to_use', 'seasonality_present', 'y_train', 'USI', 'y', 'X_train', 'significant_sps', 'y_train_transformed', '_available_plots', 'logging_param', 'significant_sps_no_harmonics', '_ml_usecase'}
2023-02-02 19:32:10,345:INFO:Checking environment
2023-02-02 19:32:10,345:INFO:python_version: 3.9.16
2023-02-02 19:32:10,345:INFO:python_build: ('main', 'Jan 11 2023 16:16:36')
2023-02-02 19:32:10,345:INFO:machine: AMD64
2023-02-02 19:32:10,345:INFO:platform: Windows-10-10.0.19045-SP0
2023-02-02 19:32:10,345:INFO:Memory: svmem(total=12825538560, available=4321988608, percent=66.3, used=8503549952, free=4321988608)
2023-02-02 19:32:10,345:INFO:Physical Core: 4
2023-02-02 19:32:10,345:INFO:Logical Core: 8
2023-02-02 19:32:10,346:INFO:Checking libraries
2023-02-02 19:32:10,346:INFO:System:
2023-02-02 19:32:10,346:INFO:    python: 3.9.16 (main, Jan 11 2023, 16:16:36) [MSC v.1916 64 bit (AMD64)]
2023-02-02 19:32:10,346:INFO:executable: C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\python.exe
2023-02-02 19:32:10,346:INFO:   machine: Windows-10-10.0.19045-SP0
2023-02-02 19:32:10,346:INFO:PyCaret required dependencies:
2023-02-02 19:32:10,346:INFO:                 pip: 22.3.1
2023-02-02 19:32:10,346:INFO:          setuptools: 65.6.3
2023-02-02 19:32:10,346:INFO:             pycaret: 3.0.0rc8
2023-02-02 19:32:10,346:INFO:             IPython: 8.9.0
2023-02-02 19:32:10,346:INFO:          ipywidgets: 8.0.4
2023-02-02 19:32:10,346:INFO:                tqdm: 4.64.1
2023-02-02 19:32:10,346:INFO:               numpy: 1.23.5
2023-02-02 19:32:10,346:INFO:              pandas: 1.5.3
2023-02-02 19:32:10,346:INFO:              jinja2: 3.1.2
2023-02-02 19:32:10,347:INFO:               scipy: 1.10.0
2023-02-02 19:32:10,347:INFO:              joblib: 1.2.0
2023-02-02 19:32:10,347:INFO:             sklearn: 1.1.3
2023-02-02 19:32:10,347:INFO:                pyod: 1.0.7
2023-02-02 19:32:10,347:INFO:            imblearn: 0.10.1
2023-02-02 19:32:10,347:INFO:   category_encoders: 2.6.0
2023-02-02 19:32:10,347:INFO:            lightgbm: 3.3.5
2023-02-02 19:32:10,347:INFO:               numba: 0.56.4
2023-02-02 19:32:10,347:INFO:            requests: 2.28.2
2023-02-02 19:32:10,347:INFO:          matplotlib: 3.7.0rc1
2023-02-02 19:32:10,347:INFO:          scikitplot: 0.3.7
2023-02-02 19:32:10,347:INFO:         yellowbrick: 1.5
2023-02-02 19:32:10,347:INFO:              plotly: 5.13.0
2023-02-02 19:32:10,347:INFO:             kaleido: 0.2.1
2023-02-02 19:32:10,347:INFO:         statsmodels: 0.13.5
2023-02-02 19:32:10,347:INFO:              sktime: 0.16.0
2023-02-02 19:32:10,347:INFO:               tbats: 1.1.2
2023-02-02 19:32:10,348:INFO:            pmdarima: 2.0.2
2023-02-02 19:32:10,348:INFO:              psutil: 5.9.4
2023-02-02 19:32:10,348:INFO:PyCaret optional dependencies:
2023-02-02 19:32:10,348:INFO:                shap: Not installed
2023-02-02 19:32:10,348:INFO:           interpret: Not installed
2023-02-02 19:32:10,348:INFO:                umap: Not installed
2023-02-02 19:32:10,348:INFO:    pandas_profiling: Not installed
2023-02-02 19:32:10,348:INFO:  explainerdashboard: Not installed
2023-02-02 19:32:10,348:INFO:             autoviz: Not installed
2023-02-02 19:32:10,348:INFO:           fairlearn: Not installed
2023-02-02 19:32:10,348:INFO:             xgboost: Not installed
2023-02-02 19:32:10,348:INFO:            catboost: Not installed
2023-02-02 19:32:10,348:INFO:              kmodes: Not installed
2023-02-02 19:32:10,348:INFO:             mlxtend: Not installed
2023-02-02 19:32:10,349:INFO:       statsforecast: Not installed
2023-02-02 19:32:10,349:INFO:        tune_sklearn: Not installed
2023-02-02 19:32:10,349:INFO:                 ray: Not installed
2023-02-02 19:32:10,349:INFO:            hyperopt: Not installed
2023-02-02 19:32:10,349:INFO:              optuna: Not installed
2023-02-02 19:32:10,349:INFO:               skopt: Not installed
2023-02-02 19:32:10,349:INFO:              mlflow: Not installed
2023-02-02 19:32:10,349:INFO:              gradio: Not installed
2023-02-02 19:32:10,349:INFO:             fastapi: Not installed
2023-02-02 19:32:10,349:INFO:             uvicorn: Not installed
2023-02-02 19:32:10,349:INFO:              m2cgen: Not installed
2023-02-02 19:32:10,349:INFO:           evidently: Not installed
2023-02-02 19:32:10,349:INFO:                nltk: Not installed
2023-02-02 19:32:10,349:INFO:            pyLDAvis: Not installed
2023-02-02 19:32:10,349:INFO:              gensim: Not installed
2023-02-02 19:32:10,349:INFO:               spacy: Not installed
2023-02-02 19:32:10,350:INFO:           wordcloud: Not installed
2023-02-02 19:32:10,350:INFO:            textblob: Not installed
2023-02-02 19:32:10,350:INFO:               fugue: Not installed
2023-02-02 19:32:10,350:INFO:           streamlit: Not installed
2023-02-02 19:32:10,350:INFO:             prophet: Not installed
2023-02-02 19:32:10,350:INFO:None
2023-02-02 19:32:10,354:INFO:Set Forecast Horizon.
2023-02-02 19:32:10,354:INFO:Set up Train-Test Splits.
2023-02-02 19:32:10,391:INFO:Finished creating preprocessing pipeline.
2023-02-02 19:32:10,393:INFO:Pipeline: ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                DummyForecaster())]))])
2023-02-02 19:32:10,393:INFO:Set up Seasonal Period.
2023-02-02 19:32:10,395:INFO:Set up whether Multiplicative components allowed.
2023-02-02 19:32:10,426:INFO:Creating final display dataframe.
2023-02-02 19:32:10,436:INFO:Setup Display Container:                                          Description                    Value
0                                         session_id                     5002
1                                             Target                   Vendas
2                                           Approach               Univariate
3                                Exogenous Variables              Not Present
4                                Original data shape                  (46, 1)
5                             Transformed data shape                  (46, 1)
6                        Transformed train set shape                  (41, 1)
7                         Transformed test set shape                   (5, 1)
8                           Rows with missing values                     0.0%
9                                     Fold Generator  ExpandingWindowSplitter
10                                       Fold Number                        1
11                       Enforce Prediction Interval                    False
12                   Splits used for hyperparameters                      all
13                        Seasonality Detection Algo                     auto
14                            Max Period to Consider                     None
15                         Seasonal Period(s) Tested                      [7]
16                    Significant Seasonal Period(s)                      [7]
17  Significant Seasonal Period(s) without Harmonics                      [7]
18                                  Remove Harmonics                    False
19                            Harmonics Order Method             harmonic_max
20                          Num Seasonalities to Use                        1
21                          All Seasonalities to Use                      [7]
22                               Primary Seasonality                        7
23                               Seasonality Present                     True
24                          Target Strictly Positive                     True
25                                Target White Noise                       No
26                                     Recommended d                        0
27                            Recommended Seasonal D                        1
28                                        Preprocess                    False
29                                          CPU Jobs                       -1
30                                           Use GPU                    False
31                                    Log Experiment                    False
32                                   Experiment Name          ts-default-name
33                                               USI                     97f5
2023-02-02 19:32:10,444:INFO:Engine successfully changes for model 'auto_arima' to 'pmdarima'.
2023-02-02 19:32:10,448:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,448:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,449:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,449:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,449:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,450:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,450:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,450:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,450:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,451:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,453:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,455:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,455:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,455:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,456:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,456:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,456:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,457:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,457:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,457:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,457:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,458:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,458:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,458:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,461:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,461:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,461:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,462:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,462:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,462:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,463:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,463:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,463:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,463:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,466:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,467:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,468:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,468:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,468:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,469:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,469:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,469:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,469:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,469:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,469:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,470:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,470:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,470:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,470:INFO:Engine successfully changes for model 'lr_cds_dt' to 'sklearn'.
2023-02-02 19:32:10,474:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,475:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,475:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,475:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,475:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,476:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,476:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,476:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,476:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,478:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,480:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,480:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,481:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,481:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,481:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,481:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,482:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,482:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,482:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,482:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,482:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,482:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,482:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,485:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,486:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,486:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,486:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,486:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,487:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,487:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,487:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,487:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,489:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,491:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,491:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,492:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,492:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,492:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,493:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,493:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,493:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,493:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,493:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,493:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,494:INFO:Engine successfully changes for model 'en_cds_dt' to 'sklearn'.
2023-02-02 19:32:10,497:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,497:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,497:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,498:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,498:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,498:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,498:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,499:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,500:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,502:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,502:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,502:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,503:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,503:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,503:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,504:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,504:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,504:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,504:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,504:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,504:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,504:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,507:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,508:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,508:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,508:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,509:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,509:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,509:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,509:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,511:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,513:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,513:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,513:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,514:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,514:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,514:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,514:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,515:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,515:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,515:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,515:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,515:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,515:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,515:INFO:Engine successfully changes for model 'ridge_cds_dt' to 'sklearn'.
2023-02-02 19:32:10,518:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,519:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,519:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,520:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,520:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,520:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,520:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,522:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,524:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,524:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,524:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,525:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,525:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,525:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,526:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,526:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,526:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,526:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,526:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,526:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,526:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,529:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,530:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,530:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,531:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,531:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,531:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,531:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,533:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,535:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,535:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,535:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,536:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,536:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,536:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,536:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,537:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,537:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,537:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,537:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,537:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,537:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,537:INFO:Engine successfully changes for model 'lasso_cds_dt' to 'sklearn'.
2023-02-02 19:32:10,541:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,541:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,542:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,542:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,542:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,543:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,545:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,546:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,547:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,547:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,547:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,547:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,548:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,548:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,548:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,548:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,548:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,549:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,549:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,549:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,552:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,553:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,554:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,554:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,554:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,554:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,556:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,558:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,558:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,559:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,559:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,559:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,560:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,560:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,560:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,560:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,560:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,561:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,561:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,561:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,561:INFO:Engine successfully changes for model 'lar_cds_dt' to 'sklearn'.
2023-02-02 19:32:10,564:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,565:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,565:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,566:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,566:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,568:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,569:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,569:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,570:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,570:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,570:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,571:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,571:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,571:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,571:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,571:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,572:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,572:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,572:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,575:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,577:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,577:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,577:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,578:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,579:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,581:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,581:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,582:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,582:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,583:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,583:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,584:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,584:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,584:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,584:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,584:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,584:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,584:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,584:INFO:Engine successfully changes for model 'llar_cds_dt' to 'sklearn'.
2023-02-02 19:32:10,588:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,589:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,589:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,589:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,591:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,593:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,593:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,594:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,594:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,594:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,595:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,595:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,595:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,595:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,595:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,596:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,596:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,596:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,599:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,600:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,600:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,601:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,602:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,604:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,604:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,605:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,605:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,605:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,605:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,606:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,606:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,606:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,606:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,606:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,606:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,606:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,606:INFO:Engine successfully changes for model 'br_cds_dt' to 'sklearn'.
2023-02-02 19:32:10,610:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,611:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,611:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,613:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,615:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,615:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,615:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,616:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,616:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,616:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,617:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,617:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,617:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,617:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,617:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,617:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,617:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,620:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,622:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,622:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,624:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,626:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,626:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,626:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,627:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,627:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,627:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,628:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,628:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,628:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,628:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,628:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,628:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,628:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,629:INFO:Engine successfully changes for model 'huber_cds_dt' to 'sklearn'.
2023-02-02 19:32:10,632:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,633:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,635:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,636:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,637:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,637:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,637:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,638:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,638:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,638:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,638:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,638:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,639:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,639:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,639:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,639:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,642:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,644:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,646:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,647:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,648:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,648:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,648:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,648:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,649:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,649:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,649:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,649:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,649:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,650:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,650:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,650:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,650:INFO:Engine successfully changes for model 'par_cds_dt' to 'sklearn'.
2023-02-02 19:32:10,653:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,656:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,658:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,658:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,658:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,659:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,659:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,659:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,659:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,660:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,660:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,660:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,660:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,660:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,660:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,663:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,667:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,668:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,669:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,669:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,669:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,670:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,670:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,670:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,670:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,670:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,670:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,671:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,671:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,671:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,671:INFO:Engine successfully changes for model 'omp_cds_dt' to 'sklearn'.
2023-02-02 19:32:10,674:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,679:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,679:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,680:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,680:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,680:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,681:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,681:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,681:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,681:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,681:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,681:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,681:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,682:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,685:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,691:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,691:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,691:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,692:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,692:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,693:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,693:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,693:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,693:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,693:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,694:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,694:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,694:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,694:INFO:Engine successfully changes for model 'knn_cds_dt' to 'sklearn'.
2023-02-02 19:32:10,697:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,702:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,703:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,703:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,703:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,704:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,704:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,704:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,704:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,704:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,704:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,704:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,705:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,708:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,713:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,713:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,714:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,714:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,714:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,715:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,715:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,715:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,715:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,715:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,715:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,715:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,716:INFO:Engine successfully changes for model 'dt_cds_dt' to 'sklearn'.
2023-02-02 19:32:10,719:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,724:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,725:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,725:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,725:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,726:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,726:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,726:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,726:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,726:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,726:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,726:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,730:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,735:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,735:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,736:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,736:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,736:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,736:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,736:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,736:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,737:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,737:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,737:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,737:INFO:Engine successfully changes for model 'rf_cds_dt' to 'sklearn'.
2023-02-02 19:32:10,740:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,746:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,746:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,747:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,747:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,747:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,747:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,747:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,747:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,747:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,748:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,751:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,756:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,757:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,757:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,757:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,757:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,757:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,757:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,758:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,758:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,758:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,758:INFO:Engine successfully changes for model 'et_cds_dt' to 'sklearn'.
2023-02-02 19:32:10,761:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,767:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,767:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,768:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,768:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,768:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,768:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,768:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,768:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,768:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,772:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,777:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,778:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,778:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,778:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,778:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,778:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,779:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,779:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,779:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,779:INFO:Engine successfully changes for model 'gbr_cds_dt' to 'sklearn'.
2023-02-02 19:32:10,782:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,788:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,788:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,788:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,788:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,788:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,789:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,789:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,789:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,792:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,799:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,799:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,799:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,799:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,799:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,800:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,800:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,800:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,800:INFO:Engine successfully changes for model 'ada_cds_dt' to 'sklearn'.
2023-02-02 19:32:10,803:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,810:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,810:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,810:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,810:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,810:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,810:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,810:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,814:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,820:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,820:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,820:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,820:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,820:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,821:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,821:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,821:INFO:Engine successfully changes for model 'xgboost_cds_dt' to 'sklearn'.
2023-02-02 19:32:10,824:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,831:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,831:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,831:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,831:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,831:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,831:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,834:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,841:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,841:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,841:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,841:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,841:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,841:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,841:INFO:Engine successfully changes for model 'lightgbm_cds_dt' to 'sklearn'.
2023-02-02 19:32:10,845:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,851:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,851:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,852:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,852:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,852:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,855:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,861:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,861:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,862:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:32:10,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,862:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,862:INFO:Engine successfully changes for model 'catboost_cds_dt' to 'sklearn'.
2023-02-02 19:32:10,865:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,872:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,872:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,872:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,872:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,875:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,882:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,882:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,882:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,882:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,885:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,892:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,892:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,892:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,893:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,896:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:10,902:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,902:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,903:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,903:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:32:10,904:INFO:setup() successfully completed in 0.56s...............
2023-02-02 19:32:10,927:INFO:Initializing compare_models()
2023-02-02 19:32:10,927:INFO:compare_models(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, include=None, fold=None, round=4, cross_validation=True, sort=MASE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MASE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.time_series.forecasting.oop.TSForecastingExperiment'>}, exclude=None)
2023-02-02 19:32:10,927:INFO:Checking exceptions
2023-02-02 19:32:10,930:INFO:Preparing display monitor
2023-02-02 19:32:10,966:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:709: UserWarning:

Unsupported estimator `ensemble_forecaster` for method `compare_models()`, removing from model_library


2023-02-02 19:32:10,966:INFO:Initializing Naive Forecaster
2023-02-02 19:32:10,967:INFO:Total runtime is 0.0 minutes
2023-02-02 19:32:10,971:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:10,971:INFO:Initializing create_model()
2023-02-02 19:32:10,971:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=naive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:10,971:INFO:Checking exceptions
2023-02-02 19:32:10,971:INFO:Importing libraries
2023-02-02 19:32:10,972:INFO:Copying training dataset
2023-02-02 19:32:10,977:INFO:Defining folds
2023-02-02 19:32:10,977:INFO:Declaring metric variables
2023-02-02 19:32:10,983:INFO:Importing untrained model
2023-02-02 19:32:10,987:INFO:Naive Forecaster Imported successfully
2023-02-02 19:32:10,999:INFO:Starting cross validation
2023-02-02 19:32:11,001:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:15,973:INFO:Calculating mean and std
2023-02-02 19:32:15,974:INFO:Creating metrics dataframe
2023-02-02 19:32:15,980:INFO:Uploading results into container
2023-02-02 19:32:15,980:INFO:Uploading model into container now
2023-02-02 19:32:15,981:INFO:_master_model_container: 1
2023-02-02 19:32:15,981:INFO:_display_container: 2
2023-02-02 19:32:15,981:INFO:NaiveForecaster()
2023-02-02 19:32:15,982:INFO:create_model() successfully completed......................................
2023-02-02 19:32:16,190:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:16,190:INFO:Creating metrics dataframe
2023-02-02 19:32:16,201:INFO:Initializing Grand Means Forecaster
2023-02-02 19:32:16,201:INFO:Total runtime is 0.08724831740061442 minutes
2023-02-02 19:32:16,205:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:16,205:INFO:Initializing create_model()
2023-02-02 19:32:16,205:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=grand_means, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:16,205:INFO:Checking exceptions
2023-02-02 19:32:16,205:INFO:Importing libraries
2023-02-02 19:32:16,205:INFO:Copying training dataset
2023-02-02 19:32:16,211:INFO:Defining folds
2023-02-02 19:32:16,211:INFO:Declaring metric variables
2023-02-02 19:32:16,216:INFO:Importing untrained model
2023-02-02 19:32:16,222:INFO:Grand Means Forecaster Imported successfully
2023-02-02 19:32:16,231:INFO:Starting cross validation
2023-02-02 19:32:16,232:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:18,791:INFO:Calculating mean and std
2023-02-02 19:32:18,792:INFO:Creating metrics dataframe
2023-02-02 19:32:18,798:INFO:Uploading results into container
2023-02-02 19:32:18,798:INFO:Uploading model into container now
2023-02-02 19:32:18,799:INFO:_master_model_container: 2
2023-02-02 19:32:18,799:INFO:_display_container: 2
2023-02-02 19:32:18,799:INFO:NaiveForecaster(strategy='mean')
2023-02-02 19:32:18,799:INFO:create_model() successfully completed......................................
2023-02-02 19:32:18,998:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:18,998:INFO:Creating metrics dataframe
2023-02-02 19:32:19,011:INFO:Initializing Seasonal Naive Forecaster
2023-02-02 19:32:19,011:INFO:Total runtime is 0.13407870133717856 minutes
2023-02-02 19:32:19,016:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:19,016:INFO:Initializing create_model()
2023-02-02 19:32:19,017:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=snaive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:19,017:INFO:Checking exceptions
2023-02-02 19:32:19,017:INFO:Importing libraries
2023-02-02 19:32:19,017:INFO:Copying training dataset
2023-02-02 19:32:19,022:INFO:Defining folds
2023-02-02 19:32:19,023:INFO:Declaring metric variables
2023-02-02 19:32:19,028:INFO:Importing untrained model
2023-02-02 19:32:19,032:INFO:Seasonal Naive Forecaster Imported successfully
2023-02-02 19:32:19,041:INFO:Starting cross validation
2023-02-02 19:32:19,043:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:21,611:INFO:Calculating mean and std
2023-02-02 19:32:21,612:INFO:Creating metrics dataframe
2023-02-02 19:32:21,619:INFO:Uploading results into container
2023-02-02 19:32:21,619:INFO:Uploading model into container now
2023-02-02 19:32:21,620:INFO:_master_model_container: 3
2023-02-02 19:32:21,620:INFO:_display_container: 2
2023-02-02 19:32:21,620:INFO:NaiveForecaster(sp=7)
2023-02-02 19:32:21,620:INFO:create_model() successfully completed......................................
2023-02-02 19:32:21,820:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:21,820:INFO:Creating metrics dataframe
2023-02-02 19:32:21,833:INFO:Initializing Polynomial Trend Forecaster
2023-02-02 19:32:21,833:INFO:Total runtime is 0.18111672401428225 minutes
2023-02-02 19:32:21,837:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:21,838:INFO:Initializing create_model()
2023-02-02 19:32:21,838:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=polytrend, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:21,838:INFO:Checking exceptions
2023-02-02 19:32:21,838:INFO:Importing libraries
2023-02-02 19:32:21,838:INFO:Copying training dataset
2023-02-02 19:32:21,843:INFO:Defining folds
2023-02-02 19:32:21,844:INFO:Declaring metric variables
2023-02-02 19:32:21,849:INFO:Importing untrained model
2023-02-02 19:32:21,854:INFO:Polynomial Trend Forecaster Imported successfully
2023-02-02 19:32:21,862:INFO:Starting cross validation
2023-02-02 19:32:21,864:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:24,443:INFO:Calculating mean and std
2023-02-02 19:32:24,444:INFO:Creating metrics dataframe
2023-02-02 19:32:24,450:INFO:Uploading results into container
2023-02-02 19:32:24,451:INFO:Uploading model into container now
2023-02-02 19:32:24,451:INFO:_master_model_container: 4
2023-02-02 19:32:24,452:INFO:_display_container: 2
2023-02-02 19:32:24,452:INFO:PolynomialTrendForecaster()
2023-02-02 19:32:24,452:INFO:create_model() successfully completed......................................
2023-02-02 19:32:24,653:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:24,653:INFO:Creating metrics dataframe
2023-02-02 19:32:24,665:INFO:Initializing ARIMA
2023-02-02 19:32:24,665:INFO:Total runtime is 0.2283168911933899 minutes
2023-02-02 19:32:24,669:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:24,669:INFO:Initializing create_model()
2023-02-02 19:32:24,669:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:24,669:INFO:Checking exceptions
2023-02-02 19:32:24,670:INFO:Importing libraries
2023-02-02 19:32:24,670:INFO:Copying training dataset
2023-02-02 19:32:24,675:INFO:Defining folds
2023-02-02 19:32:24,676:INFO:Declaring metric variables
2023-02-02 19:32:24,680:INFO:Importing untrained model
2023-02-02 19:32:24,686:INFO:ARIMA Imported successfully
2023-02-02 19:32:24,697:INFO:Starting cross validation
2023-02-02 19:32:24,698:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:27,374:INFO:Calculating mean and std
2023-02-02 19:32:27,376:INFO:Creating metrics dataframe
2023-02-02 19:32:27,380:INFO:Uploading results into container
2023-02-02 19:32:27,380:INFO:Uploading model into container now
2023-02-02 19:32:27,381:INFO:_master_model_container: 5
2023-02-02 19:32:27,381:INFO:_display_container: 2
2023-02-02 19:32:27,381:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:32:27,382:INFO:create_model() successfully completed......................................
2023-02-02 19:32:27,586:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:27,586:INFO:Creating metrics dataframe
2023-02-02 19:32:27,599:INFO:Initializing Auto ARIMA
2023-02-02 19:32:27,600:INFO:Total runtime is 0.2772384285926819 minutes
2023-02-02 19:32:27,604:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:27,604:INFO:Initializing create_model()
2023-02-02 19:32:27,604:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=auto_arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:27,604:INFO:Checking exceptions
2023-02-02 19:32:27,604:INFO:Importing libraries
2023-02-02 19:32:27,605:INFO:Copying training dataset
2023-02-02 19:32:27,610:INFO:Defining folds
2023-02-02 19:32:27,610:INFO:Declaring metric variables
2023-02-02 19:32:27,614:INFO:Importing untrained model
2023-02-02 19:32:27,620:INFO:Auto ARIMA Imported successfully
2023-02-02 19:32:27,629:INFO:Starting cross validation
2023-02-02 19:32:27,630:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:33,546:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pmdarima\arima\_auto_solvers.py:522: ModelFitWarning: Error fitting  ARIMA(2,0,1)(2,1,0)[7] intercept (if you do not want to see these warnings, run with error_action="ignore").
  warnings.warn(warning_str, ModelFitWarning)

2023-02-02 19:32:35,384:INFO:Calculating mean and std
2023-02-02 19:32:35,386:INFO:Creating metrics dataframe
2023-02-02 19:32:35,391:INFO:Uploading results into container
2023-02-02 19:32:35,392:INFO:Uploading model into container now
2023-02-02 19:32:35,393:INFO:_master_model_container: 6
2023-02-02 19:32:35,393:INFO:_display_container: 2
2023-02-02 19:32:35,394:INFO:AutoARIMA(random_state=5002, sp=7, suppress_warnings=True)
2023-02-02 19:32:35,394:INFO:create_model() successfully completed......................................
2023-02-02 19:32:35,611:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:35,611:INFO:Creating metrics dataframe
2023-02-02 19:32:35,624:INFO:Initializing Exponential Smoothing
2023-02-02 19:32:35,624:INFO:Total runtime is 0.4109726548194885 minutes
2023-02-02 19:32:35,628:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:35,628:INFO:Initializing create_model()
2023-02-02 19:32:35,628:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=exp_smooth, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:35,629:INFO:Checking exceptions
2023-02-02 19:32:35,629:INFO:Importing libraries
2023-02-02 19:32:35,629:INFO:Copying training dataset
2023-02-02 19:32:35,634:INFO:Defining folds
2023-02-02 19:32:35,634:INFO:Declaring metric variables
2023-02-02 19:32:35,639:INFO:Importing untrained model
2023-02-02 19:32:35,645:INFO:Exponential Smoothing Imported successfully
2023-02-02 19:32:35,658:INFO:Starting cross validation
2023-02-02 19:32:35,659:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:38,481:INFO:Calculating mean and std
2023-02-02 19:32:38,482:INFO:Creating metrics dataframe
2023-02-02 19:32:38,488:INFO:Uploading results into container
2023-02-02 19:32:38,488:INFO:Uploading model into container now
2023-02-02 19:32:38,488:INFO:_master_model_container: 7
2023-02-02 19:32:38,489:INFO:_display_container: 2
2023-02-02 19:32:38,489:INFO:ExponentialSmoothing(seasonal='mul', sp=7, trend='add')
2023-02-02 19:32:38,489:INFO:create_model() successfully completed......................................
2023-02-02 19:32:38,691:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:38,692:INFO:Creating metrics dataframe
2023-02-02 19:32:38,705:INFO:Initializing Croston
2023-02-02 19:32:38,706:INFO:Total runtime is 0.4623409827550252 minutes
2023-02-02 19:32:38,710:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:38,710:INFO:Initializing create_model()
2023-02-02 19:32:38,710:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=croston, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:38,710:INFO:Checking exceptions
2023-02-02 19:32:38,711:INFO:Importing libraries
2023-02-02 19:32:38,711:INFO:Copying training dataset
2023-02-02 19:32:38,716:INFO:Defining folds
2023-02-02 19:32:38,716:INFO:Declaring metric variables
2023-02-02 19:32:38,722:INFO:Importing untrained model
2023-02-02 19:32:38,726:INFO:Croston Imported successfully
2023-02-02 19:32:38,735:INFO:Starting cross validation
2023-02-02 19:32:38,736:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:41,303:INFO:Calculating mean and std
2023-02-02 19:32:41,305:INFO:Creating metrics dataframe
2023-02-02 19:32:41,312:INFO:Uploading results into container
2023-02-02 19:32:41,313:INFO:Uploading model into container now
2023-02-02 19:32:41,313:INFO:_master_model_container: 8
2023-02-02 19:32:41,314:INFO:_display_container: 2
2023-02-02 19:32:41,314:INFO:Croston()
2023-02-02 19:32:41,314:INFO:create_model() successfully completed......................................
2023-02-02 19:32:41,513:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:41,513:INFO:Creating metrics dataframe
2023-02-02 19:32:41,527:INFO:Initializing ETS
2023-02-02 19:32:41,527:INFO:Total runtime is 0.5093454043070476 minutes
2023-02-02 19:32:41,531:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:41,531:INFO:Initializing create_model()
2023-02-02 19:32:41,531:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=ets, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:41,531:INFO:Checking exceptions
2023-02-02 19:32:41,531:INFO:Importing libraries
2023-02-02 19:32:41,531:INFO:Copying training dataset
2023-02-02 19:32:41,537:INFO:Defining folds
2023-02-02 19:32:41,537:INFO:Declaring metric variables
2023-02-02 19:32:41,541:INFO:Importing untrained model
2023-02-02 19:32:41,549:INFO:ETS Imported successfully
2023-02-02 19:32:41,558:INFO:Starting cross validation
2023-02-02 19:32:41,560:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:41,697:INFO:Calculating mean and std
2023-02-02 19:32:41,698:INFO:Creating metrics dataframe
2023-02-02 19:32:41,702:INFO:Uploading results into container
2023-02-02 19:32:41,702:INFO:Uploading model into container now
2023-02-02 19:32:41,703:INFO:_master_model_container: 9
2023-02-02 19:32:41,703:INFO:_display_container: 2
2023-02-02 19:32:41,703:INFO:AutoETS(seasonal='mul', sp=7, trend='add')
2023-02-02 19:32:41,703:INFO:create_model() successfully completed......................................
2023-02-02 19:32:41,892:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:41,893:INFO:Creating metrics dataframe
2023-02-02 19:32:41,907:INFO:Initializing Theta Forecaster
2023-02-02 19:32:41,907:INFO:Total runtime is 0.5156914393107097 minutes
2023-02-02 19:32:41,913:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:41,913:INFO:Initializing create_model()
2023-02-02 19:32:41,913:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=theta, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:41,913:INFO:Checking exceptions
2023-02-02 19:32:41,914:INFO:Importing libraries
2023-02-02 19:32:41,914:INFO:Copying training dataset
2023-02-02 19:32:41,919:INFO:Defining folds
2023-02-02 19:32:41,919:INFO:Declaring metric variables
2023-02-02 19:32:41,924:INFO:Importing untrained model
2023-02-02 19:32:41,929:INFO:Theta Forecaster Imported successfully
2023-02-02 19:32:41,938:INFO:Starting cross validation
2023-02-02 19:32:41,939:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:42,006:INFO:Calculating mean and std
2023-02-02 19:32:42,006:INFO:Creating metrics dataframe
2023-02-02 19:32:42,010:INFO:Uploading results into container
2023-02-02 19:32:42,010:INFO:Uploading model into container now
2023-02-02 19:32:42,011:INFO:_master_model_container: 10
2023-02-02 19:32:42,011:INFO:_display_container: 2
2023-02-02 19:32:42,011:INFO:ThetaForecaster(sp=7)
2023-02-02 19:32:42,011:INFO:create_model() successfully completed......................................
2023-02-02 19:32:42,201:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:42,201:INFO:Creating metrics dataframe
2023-02-02 19:32:42,216:INFO:Initializing Linear w/ Cond. Deseasonalize & Detrending
2023-02-02 19:32:42,216:INFO:Total runtime is 0.5208382646242778 minutes
2023-02-02 19:32:42,220:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:42,220:INFO:Initializing create_model()
2023-02-02 19:32:42,220:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=lr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:42,220:INFO:Checking exceptions
2023-02-02 19:32:42,220:INFO:Importing libraries
2023-02-02 19:32:42,220:INFO:Copying training dataset
2023-02-02 19:32:42,226:INFO:Defining folds
2023-02-02 19:32:42,226:INFO:Declaring metric variables
2023-02-02 19:32:42,231:INFO:Importing untrained model
2023-02-02 19:32:42,236:INFO:Linear w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:32:42,246:INFO:Starting cross validation
2023-02-02 19:32:42,248:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:42,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:42,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:42,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:42,553:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:42,630:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:42,844:INFO:Calculating mean and std
2023-02-02 19:32:42,845:INFO:Creating metrics dataframe
2023-02-02 19:32:42,849:INFO:Uploading results into container
2023-02-02 19:32:42,850:INFO:Uploading model into container now
2023-02-02 19:32:42,850:INFO:_master_model_container: 11
2023-02-02 19:32:42,850:INFO:_display_container: 2
2023-02-02 19:32:42,852:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LinearRegression(n_jobs=-1), sp=7,
                    window_length=7)
2023-02-02 19:32:42,852:INFO:create_model() successfully completed......................................
2023-02-02 19:32:43,043:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:43,043:INFO:Creating metrics dataframe
2023-02-02 19:32:43,059:INFO:Initializing Elastic Net w/ Cond. Deseasonalize & Detrending
2023-02-02 19:32:43,059:INFO:Total runtime is 0.5348774711290997 minutes
2023-02-02 19:32:43,063:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:43,064:INFO:Initializing create_model()
2023-02-02 19:32:43,064:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=en_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:43,064:INFO:Checking exceptions
2023-02-02 19:32:43,064:INFO:Importing libraries
2023-02-02 19:32:43,064:INFO:Copying training dataset
2023-02-02 19:32:43,069:INFO:Defining folds
2023-02-02 19:32:43,069:INFO:Declaring metric variables
2023-02-02 19:32:43,074:INFO:Importing untrained model
2023-02-02 19:32:43,079:INFO:Elastic Net w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:32:43,088:INFO:Starting cross validation
2023-02-02 19:32:43,089:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:43,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:43,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:43,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:43,371:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:43,438:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:43,652:INFO:Calculating mean and std
2023-02-02 19:32:43,653:INFO:Creating metrics dataframe
2023-02-02 19:32:43,657:INFO:Uploading results into container
2023-02-02 19:32:43,657:INFO:Uploading model into container now
2023-02-02 19:32:43,657:INFO:_master_model_container: 12
2023-02-02 19:32:43,657:INFO:_display_container: 2
2023-02-02 19:32:43,659:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=ElasticNet(random_state=5002), sp=7,
                    window_length=7)
2023-02-02 19:32:43,660:INFO:create_model() successfully completed......................................
2023-02-02 19:32:43,850:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:43,850:INFO:Creating metrics dataframe
2023-02-02 19:32:43,866:INFO:Initializing Ridge w/ Cond. Deseasonalize & Detrending
2023-02-02 19:32:43,866:INFO:Total runtime is 0.5483358144760133 minutes
2023-02-02 19:32:43,870:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:43,870:INFO:Initializing create_model()
2023-02-02 19:32:43,871:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=ridge_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:43,871:INFO:Checking exceptions
2023-02-02 19:32:43,871:INFO:Importing libraries
2023-02-02 19:32:43,871:INFO:Copying training dataset
2023-02-02 19:32:43,876:INFO:Defining folds
2023-02-02 19:32:43,876:INFO:Declaring metric variables
2023-02-02 19:32:43,881:INFO:Importing untrained model
2023-02-02 19:32:43,885:INFO:Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:32:43,895:INFO:Starting cross validation
2023-02-02 19:32:43,896:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:44,177:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:44,177:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:44,177:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:44,177:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:44,246:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:44,460:INFO:Calculating mean and std
2023-02-02 19:32:44,461:INFO:Creating metrics dataframe
2023-02-02 19:32:44,465:INFO:Uploading results into container
2023-02-02 19:32:44,466:INFO:Uploading model into container now
2023-02-02 19:32:44,466:INFO:_master_model_container: 13
2023-02-02 19:32:44,466:INFO:_display_container: 2
2023-02-02 19:32:44,468:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Ridge(random_state=5002), sp=7, window_length=7)
2023-02-02 19:32:44,468:INFO:create_model() successfully completed......................................
2023-02-02 19:32:44,662:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:44,662:INFO:Creating metrics dataframe
2023-02-02 19:32:44,679:INFO:Initializing Lasso w/ Cond. Deseasonalize & Detrending
2023-02-02 19:32:44,680:INFO:Total runtime is 0.5618941068649294 minutes
2023-02-02 19:32:44,684:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:44,684:INFO:Initializing create_model()
2023-02-02 19:32:44,684:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=lasso_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:44,684:INFO:Checking exceptions
2023-02-02 19:32:44,684:INFO:Importing libraries
2023-02-02 19:32:44,685:INFO:Copying training dataset
2023-02-02 19:32:44,690:INFO:Defining folds
2023-02-02 19:32:44,690:INFO:Declaring metric variables
2023-02-02 19:32:44,694:INFO:Importing untrained model
2023-02-02 19:32:44,700:INFO:Lasso w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:32:44,709:INFO:Starting cross validation
2023-02-02 19:32:44,710:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:44,992:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:44,992:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:44,992:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:44,992:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:45,058:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:45,275:INFO:Calculating mean and std
2023-02-02 19:32:45,276:INFO:Creating metrics dataframe
2023-02-02 19:32:45,280:INFO:Uploading results into container
2023-02-02 19:32:45,280:INFO:Uploading model into container now
2023-02-02 19:32:45,281:INFO:_master_model_container: 14
2023-02-02 19:32:45,281:INFO:_display_container: 2
2023-02-02 19:32:45,283:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Lasso(random_state=5002), sp=7, window_length=7)
2023-02-02 19:32:45,283:INFO:create_model() successfully completed......................................
2023-02-02 19:32:45,472:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:45,473:INFO:Creating metrics dataframe
2023-02-02 19:32:45,490:INFO:Initializing Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-02-02 19:32:45,490:INFO:Total runtime is 0.5754024624824525 minutes
2023-02-02 19:32:45,495:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:45,495:INFO:Initializing create_model()
2023-02-02 19:32:45,495:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=lar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:45,495:INFO:Checking exceptions
2023-02-02 19:32:45,495:INFO:Importing libraries
2023-02-02 19:32:45,495:INFO:Copying training dataset
2023-02-02 19:32:45,501:INFO:Defining folds
2023-02-02 19:32:45,501:INFO:Declaring metric variables
2023-02-02 19:32:45,505:INFO:Importing untrained model
2023-02-02 19:32:45,510:INFO:Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:32:45,519:INFO:Starting cross validation
2023-02-02 19:32:45,521:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:45,805:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:45,805:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:45,805:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:45,805:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:45,871:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:45,945:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:32:46,090:INFO:Calculating mean and std
2023-02-02 19:32:46,091:INFO:Creating metrics dataframe
2023-02-02 19:32:46,095:INFO:Uploading results into container
2023-02-02 19:32:46,096:INFO:Uploading model into container now
2023-02-02 19:32:46,096:INFO:_master_model_container: 15
2023-02-02 19:32:46,096:INFO:_display_container: 2
2023-02-02 19:32:46,098:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Lars(random_state=5002), sp=7, window_length=7)
2023-02-02 19:32:46,098:INFO:create_model() successfully completed......................................
2023-02-02 19:32:46,290:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:46,291:INFO:Creating metrics dataframe
2023-02-02 19:32:46,309:INFO:Initializing Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-02-02 19:32:46,309:INFO:Total runtime is 0.5890501737594606 minutes
2023-02-02 19:32:46,315:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:46,315:INFO:Initializing create_model()
2023-02-02 19:32:46,315:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=llar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:46,315:INFO:Checking exceptions
2023-02-02 19:32:46,315:INFO:Importing libraries
2023-02-02 19:32:46,315:INFO:Copying training dataset
2023-02-02 19:32:46,320:INFO:Defining folds
2023-02-02 19:32:46,321:INFO:Declaring metric variables
2023-02-02 19:32:46,326:INFO:Importing untrained model
2023-02-02 19:32:46,331:INFO:Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:32:46,340:INFO:Starting cross validation
2023-02-02 19:32:46,341:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:46,627:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:46,627:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:46,627:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:46,627:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:46,694:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:46,771:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 19:32:46,921:INFO:Calculating mean and std
2023-02-02 19:32:46,923:INFO:Creating metrics dataframe
2023-02-02 19:32:46,927:INFO:Uploading results into container
2023-02-02 19:32:46,927:INFO:Uploading model into container now
2023-02-02 19:32:46,928:INFO:_master_model_container: 16
2023-02-02 19:32:46,928:INFO:_display_container: 2
2023-02-02 19:32:46,930:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LassoLars(random_state=5002), sp=7,
                    window_length=7)
2023-02-02 19:32:46,930:INFO:create_model() successfully completed......................................
2023-02-02 19:32:47,118:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:47,119:INFO:Creating metrics dataframe
2023-02-02 19:32:47,136:INFO:Initializing Bayesian Ridge w/ Cond. Deseasonalize & Detrending
2023-02-02 19:32:47,137:INFO:Total runtime is 0.6028547803560894 minutes
2023-02-02 19:32:47,141:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:47,141:INFO:Initializing create_model()
2023-02-02 19:32:47,141:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=br_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:47,141:INFO:Checking exceptions
2023-02-02 19:32:47,142:INFO:Importing libraries
2023-02-02 19:32:47,142:INFO:Copying training dataset
2023-02-02 19:32:47,147:INFO:Defining folds
2023-02-02 19:32:47,147:INFO:Declaring metric variables
2023-02-02 19:32:47,151:INFO:Importing untrained model
2023-02-02 19:32:47,156:INFO:Bayesian Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:32:47,165:INFO:Starting cross validation
2023-02-02 19:32:47,168:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:47,464:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:47,464:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:47,464:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:47,464:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:47,532:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:47,751:INFO:Calculating mean and std
2023-02-02 19:32:47,752:INFO:Creating metrics dataframe
2023-02-02 19:32:47,756:INFO:Uploading results into container
2023-02-02 19:32:47,756:INFO:Uploading model into container now
2023-02-02 19:32:47,757:INFO:_master_model_container: 17
2023-02-02 19:32:47,757:INFO:_display_container: 2
2023-02-02 19:32:47,759:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=BayesianRidge(), sp=7, window_length=7)
2023-02-02 19:32:47,760:INFO:create_model() successfully completed......................................
2023-02-02 19:32:47,950:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:47,950:INFO:Creating metrics dataframe
2023-02-02 19:32:47,968:INFO:Initializing Huber w/ Cond. Deseasonalize & Detrending
2023-02-02 19:32:47,968:INFO:Total runtime is 0.6166958610216778 minutes
2023-02-02 19:32:47,972:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:47,973:INFO:Initializing create_model()
2023-02-02 19:32:47,973:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=huber_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:47,973:INFO:Checking exceptions
2023-02-02 19:32:47,973:INFO:Importing libraries
2023-02-02 19:32:47,973:INFO:Copying training dataset
2023-02-02 19:32:47,978:INFO:Defining folds
2023-02-02 19:32:47,978:INFO:Declaring metric variables
2023-02-02 19:32:47,983:INFO:Importing untrained model
2023-02-02 19:32:47,989:INFO:Huber w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:32:47,998:INFO:Starting cross validation
2023-02-02 19:32:47,999:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:48,291:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:48,291:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:48,292:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:48,292:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:32:48,355:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:32:48,461:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-02-02 19:32:48,609:INFO:Calculating mean and std
2023-02-02 19:32:48,610:INFO:Creating metrics dataframe
2023-02-02 19:32:48,615:INFO:Uploading results into container
2023-02-02 19:32:48,615:INFO:Uploading model into container now
2023-02-02 19:32:48,615:INFO:_master_model_container: 18
2023-02-02 19:32:48,615:INFO:_display_container: 2
2023-02-02 19:32:48,617:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=HuberRegressor(), sp=7, window_length=7)
2023-02-02 19:32:48,617:INFO:create_model() successfully completed......................................
2023-02-02 19:32:48,809:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:48,809:INFO:Creating metrics dataframe
2023-02-02 19:32:48,827:INFO:Initializing Passive Aggressive w/ Cond. Deseasonalize & Detrending
2023-02-02 19:32:48,828:INFO:Total runtime is 0.6310328404108685 minutes
2023-02-02 19:32:48,831:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:48,832:INFO:Initializing create_model()
2023-02-02 19:32:48,832:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=par_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:48,832:INFO:Checking exceptions
2023-02-02 19:32:48,832:INFO:Importing libraries
2023-02-02 19:32:48,832:INFO:Copying training dataset
2023-02-02 19:32:48,837:INFO:Defining folds
2023-02-02 19:32:48,837:INFO:Declaring metric variables
2023-02-02 19:32:48,842:INFO:Importing untrained model
2023-02-02 19:32:48,849:INFO:Passive Aggressive w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:32:48,858:INFO:Starting cross validation
2023-02-02 19:32:48,859:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:49,079:INFO:Calculating mean and std
2023-02-02 19:32:49,080:INFO:Creating metrics dataframe
2023-02-02 19:32:49,084:INFO:Uploading results into container
2023-02-02 19:32:49,084:INFO:Uploading model into container now
2023-02-02 19:32:49,084:INFO:_master_model_container: 19
2023-02-02 19:32:49,084:INFO:_display_container: 2
2023-02-02 19:32:49,087:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=PassiveAggressiveRegressor(random_state=5002),
                    sp=7, window_length=7)
2023-02-02 19:32:49,087:INFO:create_model() successfully completed......................................
2023-02-02 19:32:49,279:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:49,279:INFO:Creating metrics dataframe
2023-02-02 19:32:49,298:INFO:Initializing Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending
2023-02-02 19:32:49,298:INFO:Total runtime is 0.6388762593269349 minutes
2023-02-02 19:32:49,302:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:49,303:INFO:Initializing create_model()
2023-02-02 19:32:49,303:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=omp_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:49,303:INFO:Checking exceptions
2023-02-02 19:32:49,303:INFO:Importing libraries
2023-02-02 19:32:49,303:INFO:Copying training dataset
2023-02-02 19:32:49,308:INFO:Defining folds
2023-02-02 19:32:49,309:INFO:Declaring metric variables
2023-02-02 19:32:49,313:INFO:Importing untrained model
2023-02-02 19:32:49,318:INFO:Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:32:49,327:INFO:Starting cross validation
2023-02-02 19:32:49,329:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:49,408:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:32:49,550:INFO:Calculating mean and std
2023-02-02 19:32:49,551:INFO:Creating metrics dataframe
2023-02-02 19:32:49,555:INFO:Uploading results into container
2023-02-02 19:32:49,555:INFO:Uploading model into container now
2023-02-02 19:32:49,555:INFO:_master_model_container: 20
2023-02-02 19:32:49,555:INFO:_display_container: 2
2023-02-02 19:32:49,557:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=OrthogonalMatchingPursuit(), sp=7,
                    window_length=7)
2023-02-02 19:32:49,557:INFO:create_model() successfully completed......................................
2023-02-02 19:32:49,749:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:49,749:INFO:Creating metrics dataframe
2023-02-02 19:32:49,769:INFO:Initializing K Neighbors w/ Cond. Deseasonalize & Detrending
2023-02-02 19:32:49,769:INFO:Total runtime is 0.6467178940773012 minutes
2023-02-02 19:32:49,774:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:49,774:INFO:Initializing create_model()
2023-02-02 19:32:49,774:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=knn_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:49,774:INFO:Checking exceptions
2023-02-02 19:32:49,774:INFO:Importing libraries
2023-02-02 19:32:49,774:INFO:Copying training dataset
2023-02-02 19:32:49,780:INFO:Defining folds
2023-02-02 19:32:49,780:INFO:Declaring metric variables
2023-02-02 19:32:49,784:INFO:Importing untrained model
2023-02-02 19:32:49,789:INFO:K Neighbors w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:32:49,798:INFO:Starting cross validation
2023-02-02 19:32:49,800:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:50,060:INFO:Calculating mean and std
2023-02-02 19:32:50,061:INFO:Creating metrics dataframe
2023-02-02 19:32:50,066:INFO:Uploading results into container
2023-02-02 19:32:50,066:INFO:Uploading model into container now
2023-02-02 19:32:50,066:INFO:_master_model_container: 21
2023-02-02 19:32:50,066:INFO:_display_container: 2
2023-02-02 19:32:50,068:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=KNeighborsRegressor(n_jobs=-1), sp=7,
                    window_length=7)
2023-02-02 19:32:50,068:INFO:create_model() successfully completed......................................
2023-02-02 19:32:50,260:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:50,261:INFO:Creating metrics dataframe
2023-02-02 19:32:50,280:INFO:Initializing Decision Tree w/ Cond. Deseasonalize & Detrending
2023-02-02 19:32:50,280:INFO:Total runtime is 0.6552299221356711 minutes
2023-02-02 19:32:50,285:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:50,285:INFO:Initializing create_model()
2023-02-02 19:32:50,285:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=dt_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:50,285:INFO:Checking exceptions
2023-02-02 19:32:50,285:INFO:Importing libraries
2023-02-02 19:32:50,285:INFO:Copying training dataset
2023-02-02 19:32:50,290:INFO:Defining folds
2023-02-02 19:32:50,290:INFO:Declaring metric variables
2023-02-02 19:32:50,295:INFO:Importing untrained model
2023-02-02 19:32:50,300:INFO:Decision Tree w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:32:50,309:INFO:Starting cross validation
2023-02-02 19:32:50,310:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:50,532:INFO:Calculating mean and std
2023-02-02 19:32:50,533:INFO:Creating metrics dataframe
2023-02-02 19:32:50,537:INFO:Uploading results into container
2023-02-02 19:32:50,537:INFO:Uploading model into container now
2023-02-02 19:32:50,538:INFO:_master_model_container: 22
2023-02-02 19:32:50,538:INFO:_display_container: 2
2023-02-02 19:32:50,540:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=DecisionTreeRegressor(random_state=5002), sp=7,
                    window_length=7)
2023-02-02 19:32:50,540:INFO:create_model() successfully completed......................................
2023-02-02 19:32:50,729:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:50,730:INFO:Creating metrics dataframe
2023-02-02 19:32:50,750:INFO:Initializing Random Forest w/ Cond. Deseasonalize & Detrending
2023-02-02 19:32:50,751:INFO:Total runtime is 0.6630917668342592 minutes
2023-02-02 19:32:50,755:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:50,755:INFO:Initializing create_model()
2023-02-02 19:32:50,755:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=rf_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:50,755:INFO:Checking exceptions
2023-02-02 19:32:50,756:INFO:Importing libraries
2023-02-02 19:32:50,756:INFO:Copying training dataset
2023-02-02 19:32:50,761:INFO:Defining folds
2023-02-02 19:32:50,762:INFO:Declaring metric variables
2023-02-02 19:32:50,766:INFO:Importing untrained model
2023-02-02 19:32:50,772:INFO:Random Forest w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:32:50,780:INFO:Starting cross validation
2023-02-02 19:32:50,781:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:51,242:INFO:Calculating mean and std
2023-02-02 19:32:51,243:INFO:Creating metrics dataframe
2023-02-02 19:32:51,248:INFO:Uploading results into container
2023-02-02 19:32:51,248:INFO:Uploading model into container now
2023-02-02 19:32:51,249:INFO:_master_model_container: 23
2023-02-02 19:32:51,249:INFO:_display_container: 2
2023-02-02 19:32:51,252:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=RandomForestRegressor(n_jobs=-1,
                                                    random_state=5002),
                    sp=7, window_length=7)
2023-02-02 19:32:51,253:INFO:create_model() successfully completed......................................
2023-02-02 19:32:51,444:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:51,445:INFO:Creating metrics dataframe
2023-02-02 19:32:51,464:INFO:Initializing Extra Trees w/ Cond. Deseasonalize & Detrending
2023-02-02 19:32:51,464:INFO:Total runtime is 0.6749623735745749 minutes
2023-02-02 19:32:51,468:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:51,468:INFO:Initializing create_model()
2023-02-02 19:32:51,468:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=et_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:51,468:INFO:Checking exceptions
2023-02-02 19:32:51,468:INFO:Importing libraries
2023-02-02 19:32:51,468:INFO:Copying training dataset
2023-02-02 19:32:51,474:INFO:Defining folds
2023-02-02 19:32:51,474:INFO:Declaring metric variables
2023-02-02 19:32:51,479:INFO:Importing untrained model
2023-02-02 19:32:51,484:INFO:Extra Trees w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:32:51,493:INFO:Starting cross validation
2023-02-02 19:32:51,494:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:51,916:INFO:Calculating mean and std
2023-02-02 19:32:51,917:INFO:Creating metrics dataframe
2023-02-02 19:32:51,921:INFO:Uploading results into container
2023-02-02 19:32:51,922:INFO:Uploading model into container now
2023-02-02 19:32:51,922:INFO:_master_model_container: 24
2023-02-02 19:32:51,922:INFO:_display_container: 2
2023-02-02 19:32:51,924:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(n_jobs=-1, random_state=5002),
                    sp=7, window_length=7)
2023-02-02 19:32:51,925:INFO:create_model() successfully completed......................................
2023-02-02 19:32:52,123:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:52,123:INFO:Creating metrics dataframe
2023-02-02 19:32:52,143:INFO:Initializing Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-02-02 19:32:52,143:INFO:Total runtime is 0.6862845818201702 minutes
2023-02-02 19:32:52,148:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:52,148:INFO:Initializing create_model()
2023-02-02 19:32:52,148:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=gbr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:52,148:INFO:Checking exceptions
2023-02-02 19:32:52,148:INFO:Importing libraries
2023-02-02 19:32:52,148:INFO:Copying training dataset
2023-02-02 19:32:52,153:INFO:Defining folds
2023-02-02 19:32:52,154:INFO:Declaring metric variables
2023-02-02 19:32:52,158:INFO:Importing untrained model
2023-02-02 19:32:52,163:INFO:Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:32:52,180:INFO:Starting cross validation
2023-02-02 19:32:52,182:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:52,441:INFO:Calculating mean and std
2023-02-02 19:32:52,443:INFO:Creating metrics dataframe
2023-02-02 19:32:52,447:INFO:Uploading results into container
2023-02-02 19:32:52,447:INFO:Uploading model into container now
2023-02-02 19:32:52,447:INFO:_master_model_container: 25
2023-02-02 19:32:52,447:INFO:_display_container: 2
2023-02-02 19:32:52,449:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=GradientBoostingRegressor(random_state=5002),
                    sp=7, window_length=7)
2023-02-02 19:32:52,450:INFO:create_model() successfully completed......................................
2023-02-02 19:32:52,642:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:52,642:INFO:Creating metrics dataframe
2023-02-02 19:32:52,663:INFO:Initializing AdaBoost w/ Cond. Deseasonalize & Detrending
2023-02-02 19:32:52,664:INFO:Total runtime is 0.694947103659312 minutes
2023-02-02 19:32:52,667:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:52,668:INFO:Initializing create_model()
2023-02-02 19:32:52,668:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=ada_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:52,668:INFO:Checking exceptions
2023-02-02 19:32:52,668:INFO:Importing libraries
2023-02-02 19:32:52,668:INFO:Copying training dataset
2023-02-02 19:32:52,674:INFO:Defining folds
2023-02-02 19:32:52,674:INFO:Declaring metric variables
2023-02-02 19:32:52,678:INFO:Importing untrained model
2023-02-02 19:32:52,683:INFO:AdaBoost w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:32:52,693:INFO:Starting cross validation
2023-02-02 19:32:52,694:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:52,988:INFO:Calculating mean and std
2023-02-02 19:32:52,989:INFO:Creating metrics dataframe
2023-02-02 19:32:52,993:INFO:Uploading results into container
2023-02-02 19:32:52,993:INFO:Uploading model into container now
2023-02-02 19:32:52,994:INFO:_master_model_container: 26
2023-02-02 19:32:52,994:INFO:_display_container: 2
2023-02-02 19:32:52,996:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=AdaBoostRegressor(random_state=5002), sp=7,
                    window_length=7)
2023-02-02 19:32:52,996:INFO:create_model() successfully completed......................................
2023-02-02 19:32:53,189:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:53,190:INFO:Creating metrics dataframe
2023-02-02 19:32:53,227:INFO:Initializing Light Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-02-02 19:32:53,227:INFO:Total runtime is 0.7043516159057618 minutes
2023-02-02 19:32:53,233:INFO:SubProcess create_model() called ==================================
2023-02-02 19:32:53,233:INFO:Initializing create_model()
2023-02-02 19:32:53,234:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=lightgbm_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D33D9A0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:53,234:INFO:Checking exceptions
2023-02-02 19:32:53,234:INFO:Importing libraries
2023-02-02 19:32:53,234:INFO:Copying training dataset
2023-02-02 19:32:53,244:INFO:Defining folds
2023-02-02 19:32:53,244:INFO:Declaring metric variables
2023-02-02 19:32:53,249:INFO:Importing untrained model
2023-02-02 19:32:53,254:INFO:Light Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:32:53,263:INFO:Starting cross validation
2023-02-02 19:32:53,264:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:53,509:INFO:Calculating mean and std
2023-02-02 19:32:53,510:INFO:Creating metrics dataframe
2023-02-02 19:32:53,514:INFO:Uploading results into container
2023-02-02 19:32:53,515:INFO:Uploading model into container now
2023-02-02 19:32:53,515:INFO:_master_model_container: 27
2023-02-02 19:32:53,515:INFO:_display_container: 2
2023-02-02 19:32:53,518:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LGBMRegressor(random_state=5002), sp=7,
                    window_length=7)
2023-02-02 19:32:53,518:INFO:create_model() successfully completed......................................
2023-02-02 19:32:53,711:INFO:SubProcess create_model() end ==================================
2023-02-02 19:32:53,711:INFO:Creating metrics dataframe
2023-02-02 19:32:53,742:INFO:Initializing create_model()
2023-02-02 19:32:53,742:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:53,742:INFO:Checking exceptions
2023-02-02 19:32:53,744:INFO:Importing libraries
2023-02-02 19:32:53,744:INFO:Copying training dataset
2023-02-02 19:32:53,749:INFO:Defining folds
2023-02-02 19:32:53,749:INFO:Declaring metric variables
2023-02-02 19:32:53,749:INFO:Importing untrained model
2023-02-02 19:32:53,749:INFO:Declaring custom model
2023-02-02 19:32:53,751:INFO:ARIMA Imported successfully
2023-02-02 19:32:53,751:INFO:Cross validation set to False
2023-02-02 19:32:53,751:INFO:Fitting Model
2023-02-02 19:32:53,813:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:32:53,813:INFO:create_model() successfully completed......................................
2023-02-02 19:32:54,056:INFO:_master_model_container: 27
2023-02-02 19:32:54,056:INFO:_display_container: 2
2023-02-02 19:32:54,057:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:32:54,057:INFO:compare_models() successfully completed......................................
2023-02-02 19:32:54,076:INFO:Initializing create_model()
2023-02-02 19:32:54,076:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:32:54,076:INFO:Checking exceptions
2023-02-02 19:32:54,100:INFO:Importing libraries
2023-02-02 19:32:54,100:INFO:Copying training dataset
2023-02-02 19:32:54,105:INFO:Defining folds
2023-02-02 19:32:54,106:INFO:Declaring metric variables
2023-02-02 19:32:54,109:INFO:Importing untrained model
2023-02-02 19:32:54,115:INFO:ARIMA Imported successfully
2023-02-02 19:32:54,125:INFO:Starting cross validation
2023-02-02 19:32:54,126:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:32:54,262:INFO:Calculating mean and std
2023-02-02 19:32:54,263:INFO:Creating metrics dataframe
2023-02-02 19:32:54,271:INFO:Finalizing model
2023-02-02 19:32:54,334:INFO:Uploading results into container
2023-02-02 19:32:54,334:INFO:Uploading model into container now
2023-02-02 19:32:54,344:INFO:_master_model_container: 28
2023-02-02 19:32:54,344:INFO:_display_container: 3
2023-02-02 19:32:54,345:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:32:54,345:INFO:create_model() successfully completed......................................
2023-02-02 19:32:54,739:INFO:Visual Rendered Successfully
2023-02-02 19:32:55,033:INFO:Initializing finalize_model()
2023-02-02 19:32:55,033:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 19:32:55,033:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:32:55,038:INFO:Initializing create_model()
2023-02-02 19:32:55,038:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 19:32:55,038:INFO:Checking exceptions
2023-02-02 19:32:55,040:INFO:Importing libraries
2023-02-02 19:32:55,040:INFO:Copying training dataset
2023-02-02 19:32:55,043:INFO:Defining folds
2023-02-02 19:32:55,043:INFO:Declaring metric variables
2023-02-02 19:32:55,043:INFO:Importing untrained model
2023-02-02 19:32:55,043:INFO:Declaring custom model
2023-02-02 19:32:55,045:INFO:ARIMA Imported successfully
2023-02-02 19:32:55,045:INFO:Cross validation set to False
2023-02-02 19:32:55,045:INFO:Fitting Model
2023-02-02 19:32:55,128:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:32:55,128:INFO:create_model() successfully completed......................................
2023-02-02 19:32:55,348:INFO:_master_model_container: 28
2023-02-02 19:32:55,348:INFO:_display_container: 3
2023-02-02 19:32:55,355:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:32:55,355:INFO:finalize_model() successfully completed......................................
2023-02-02 19:32:55,670:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 19:32:55,954:INFO:Visual Rendered Successfully
2023-02-02 19:34:02,046:INFO:Visual Rendered Successfully
2023-02-02 19:37:17,798:INFO:Initializing finalize_model()
2023-02-02 19:37:17,798:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 19:37:17,799:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:37:17,803:INFO:Initializing create_model()
2023-02-02 19:37:17,804:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 19:37:17,804:INFO:Checking exceptions
2023-02-02 19:37:17,806:INFO:Importing libraries
2023-02-02 19:37:17,806:INFO:Copying training dataset
2023-02-02 19:37:17,809:INFO:Defining folds
2023-02-02 19:37:17,809:INFO:Declaring metric variables
2023-02-02 19:37:17,809:INFO:Importing untrained model
2023-02-02 19:37:17,809:INFO:Declaring custom model
2023-02-02 19:37:17,811:INFO:ARIMA Imported successfully
2023-02-02 19:37:17,811:INFO:Cross validation set to False
2023-02-02 19:37:17,811:INFO:Fitting Model
2023-02-02 19:37:17,879:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:37:17,879:INFO:create_model() successfully completed......................................
2023-02-02 19:37:18,073:INFO:_master_model_container: 28
2023-02-02 19:37:18,073:INFO:_display_container: 4
2023-02-02 19:37:18,079:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:37:18,079:INFO:finalize_model() successfully completed......................................
2023-02-02 19:37:18,333:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 19:37:18,607:INFO:Visual Rendered Successfully
2023-02-02 19:37:18,680:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 19:37:18,967:INFO:Visual Rendered Successfully
2023-02-02 19:37:42,159:INFO:Initializing finalize_model()
2023-02-02 19:37:42,159:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 19:37:42,160:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:37:42,165:INFO:Initializing create_model()
2023-02-02 19:37:42,165:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 19:37:42,165:INFO:Checking exceptions
2023-02-02 19:37:42,167:INFO:Importing libraries
2023-02-02 19:37:42,167:INFO:Copying training dataset
2023-02-02 19:37:42,170:INFO:Defining folds
2023-02-02 19:37:42,170:INFO:Declaring metric variables
2023-02-02 19:37:42,171:INFO:Importing untrained model
2023-02-02 19:37:42,171:INFO:Declaring custom model
2023-02-02 19:37:42,172:INFO:ARIMA Imported successfully
2023-02-02 19:37:42,172:INFO:Cross validation set to False
2023-02-02 19:37:42,173:INFO:Fitting Model
2023-02-02 19:37:42,240:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:37:42,240:INFO:create_model() successfully completed......................................
2023-02-02 19:37:42,439:INFO:_master_model_container: 28
2023-02-02 19:37:42,439:INFO:_display_container: 6
2023-02-02 19:37:42,445:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:37:42,445:INFO:finalize_model() successfully completed......................................
2023-02-02 19:37:42,707:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 19:37:42,980:INFO:Visual Rendered Successfully
2023-02-02 19:38:40,020:INFO:Initializing finalize_model()
2023-02-02 19:38:40,020:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 19:38:40,021:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:38:40,027:INFO:Initializing create_model()
2023-02-02 19:38:40,027:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 19:38:40,027:INFO:Checking exceptions
2023-02-02 19:38:40,029:INFO:Importing libraries
2023-02-02 19:38:40,029:INFO:Copying training dataset
2023-02-02 19:38:40,032:INFO:Defining folds
2023-02-02 19:38:40,032:INFO:Declaring metric variables
2023-02-02 19:38:40,033:INFO:Importing untrained model
2023-02-02 19:38:40,033:INFO:Declaring custom model
2023-02-02 19:38:40,034:INFO:ARIMA Imported successfully
2023-02-02 19:38:40,035:INFO:Cross validation set to False
2023-02-02 19:38:40,035:INFO:Fitting Model
2023-02-02 19:38:40,100:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:38:40,100:INFO:create_model() successfully completed......................................
2023-02-02 19:38:40,296:INFO:_master_model_container: 28
2023-02-02 19:38:40,296:INFO:_display_container: 7
2023-02-02 19:38:40,302:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:38:40,302:INFO:finalize_model() successfully completed......................................
2023-02-02 19:38:40,555:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 19:38:40,842:INFO:Visual Rendered Successfully
2023-02-02 19:39:15,037:INFO:Initializing finalize_model()
2023-02-02 19:39:15,037:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 19:39:15,038:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:39:15,043:INFO:Initializing create_model()
2023-02-02 19:39:15,043:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 19:39:15,043:INFO:Checking exceptions
2023-02-02 19:39:15,045:INFO:Importing libraries
2023-02-02 19:39:15,045:INFO:Copying training dataset
2023-02-02 19:39:15,049:INFO:Defining folds
2023-02-02 19:39:15,049:INFO:Declaring metric variables
2023-02-02 19:39:15,049:INFO:Importing untrained model
2023-02-02 19:39:15,049:INFO:Declaring custom model
2023-02-02 19:39:15,051:INFO:ARIMA Imported successfully
2023-02-02 19:39:15,051:INFO:Cross validation set to False
2023-02-02 19:39:15,051:INFO:Fitting Model
2023-02-02 19:39:15,116:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:39:15,117:INFO:create_model() successfully completed......................................
2023-02-02 19:39:15,310:INFO:_master_model_container: 28
2023-02-02 19:39:15,310:INFO:_display_container: 8
2023-02-02 19:39:15,316:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:39:15,316:INFO:finalize_model() successfully completed......................................
2023-02-02 19:39:15,589:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 19:39:15,869:INFO:Visual Rendered Successfully
2023-02-02 19:39:33,956:INFO:Initializing finalize_model()
2023-02-02 19:39:33,957:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 19:39:33,957:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:39:33,962:INFO:Initializing create_model()
2023-02-02 19:39:33,963:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 19:39:33,963:INFO:Checking exceptions
2023-02-02 19:39:33,965:INFO:Importing libraries
2023-02-02 19:39:33,965:INFO:Copying training dataset
2023-02-02 19:39:33,969:INFO:Defining folds
2023-02-02 19:39:33,969:INFO:Declaring metric variables
2023-02-02 19:39:33,969:INFO:Importing untrained model
2023-02-02 19:39:33,969:INFO:Declaring custom model
2023-02-02 19:39:33,971:INFO:ARIMA Imported successfully
2023-02-02 19:39:33,971:INFO:Cross validation set to False
2023-02-02 19:39:33,971:INFO:Fitting Model
2023-02-02 19:39:34,037:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:39:34,037:INFO:create_model() successfully completed......................................
2023-02-02 19:39:34,242:INFO:_master_model_container: 28
2023-02-02 19:39:34,243:INFO:_display_container: 9
2023-02-02 19:39:34,249:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:39:34,249:INFO:finalize_model() successfully completed......................................
2023-02-02 19:39:34,506:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 19:39:34,781:INFO:Visual Rendered Successfully
2023-02-02 19:39:43,276:INFO:Initializing finalize_model()
2023-02-02 19:39:43,276:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 19:39:43,276:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:39:43,282:INFO:Initializing create_model()
2023-02-02 19:39:43,282:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 19:39:43,282:INFO:Checking exceptions
2023-02-02 19:39:43,284:INFO:Importing libraries
2023-02-02 19:39:43,285:INFO:Copying training dataset
2023-02-02 19:39:43,289:INFO:Defining folds
2023-02-02 19:39:43,289:INFO:Declaring metric variables
2023-02-02 19:39:43,289:INFO:Importing untrained model
2023-02-02 19:39:43,289:INFO:Declaring custom model
2023-02-02 19:39:43,290:INFO:ARIMA Imported successfully
2023-02-02 19:39:43,291:INFO:Cross validation set to False
2023-02-02 19:39:43,291:INFO:Fitting Model
2023-02-02 19:39:43,357:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:39:43,357:INFO:create_model() successfully completed......................................
2023-02-02 19:39:43,547:INFO:_master_model_container: 28
2023-02-02 19:39:43,548:INFO:_display_container: 10
2023-02-02 19:39:43,554:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:39:43,554:INFO:finalize_model() successfully completed......................................
2023-02-02 19:39:43,806:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 19:39:44,082:INFO:Visual Rendered Successfully
2023-02-02 19:40:50,292:INFO:Initializing finalize_model()
2023-02-02 19:40:50,292:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 19:40:50,292:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:40:50,297:INFO:Initializing create_model()
2023-02-02 19:40:50,298:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D892B80>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 19:40:50,298:INFO:Checking exceptions
2023-02-02 19:40:50,300:INFO:Importing libraries
2023-02-02 19:40:50,300:INFO:Copying training dataset
2023-02-02 19:40:50,303:INFO:Defining folds
2023-02-02 19:40:50,303:INFO:Declaring metric variables
2023-02-02 19:40:50,303:INFO:Importing untrained model
2023-02-02 19:40:50,304:INFO:Declaring custom model
2023-02-02 19:40:50,305:INFO:ARIMA Imported successfully
2023-02-02 19:40:50,305:INFO:Cross validation set to False
2023-02-02 19:40:50,306:INFO:Fitting Model
2023-02-02 19:40:50,372:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:40:50,372:INFO:create_model() successfully completed......................................
2023-02-02 19:40:50,566:INFO:_master_model_container: 28
2023-02-02 19:40:50,566:INFO:_display_container: 11
2023-02-02 19:40:50,572:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:40:50,573:INFO:finalize_model() successfully completed......................................
2023-02-02 19:40:50,844:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 19:40:51,131:INFO:Visual Rendered Successfully
2023-02-02 19:41:12,730:INFO:PyCaret TSForecastingExperiment
2023-02-02 19:41:12,730:INFO:Logging name: ts-default-name
2023-02-02 19:41:12,730:INFO:ML Usecase: MLUsecase.TIME_SERIES
2023-02-02 19:41:12,730:INFO:version 3.0.0.rc8
2023-02-02 19:41:12,730:INFO:Initializing setup()
2023-02-02 19:41:12,731:INFO:self.USI: f712
2023-02-02 19:41:12,731:INFO:self._variable_keys: {'gpu_n_jobs_param', 'candidate_sps', 'fold_generator', 'n_jobs_param', 'enforce_exogenous', 'y_test_transformed', 'enforce_pi', 'pipeline', 'X_test', 'fh', 'idx', 'y_test', 'primary_sp_to_use', 'memory', 'html_param', 'gpu_param', 'data', 'approach_type', 'log_plots_param', 'y_transformed', 'X_test_transformed', 'exp_name_log', 'fold_param', 'strictly_positive', 'seed', 'X', 'exp_id', 'X_train_transformed', 'exogenous_present', 'model_engines', 'X_transformed', 'index_type', 'all_sps_to_use', 'seasonality_present', 'y_train', 'USI', 'y', 'X_train', 'significant_sps', 'y_train_transformed', '_available_plots', 'logging_param', 'significant_sps_no_harmonics', '_ml_usecase'}
2023-02-02 19:41:12,731:INFO:Checking environment
2023-02-02 19:41:12,731:INFO:python_version: 3.9.16
2023-02-02 19:41:12,731:INFO:python_build: ('main', 'Jan 11 2023 16:16:36')
2023-02-02 19:41:12,731:INFO:machine: AMD64
2023-02-02 19:41:12,731:INFO:platform: Windows-10-10.0.19045-SP0
2023-02-02 19:41:12,732:INFO:Memory: svmem(total=12825538560, available=4517924864, percent=64.8, used=8307613696, free=4517924864)
2023-02-02 19:41:12,732:INFO:Physical Core: 4
2023-02-02 19:41:12,732:INFO:Logical Core: 8
2023-02-02 19:41:12,732:INFO:Checking libraries
2023-02-02 19:41:12,732:INFO:System:
2023-02-02 19:41:12,732:INFO:    python: 3.9.16 (main, Jan 11 2023, 16:16:36) [MSC v.1916 64 bit (AMD64)]
2023-02-02 19:41:12,732:INFO:executable: C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\python.exe
2023-02-02 19:41:12,733:INFO:   machine: Windows-10-10.0.19045-SP0
2023-02-02 19:41:12,733:INFO:PyCaret required dependencies:
2023-02-02 19:41:12,733:INFO:                 pip: 22.3.1
2023-02-02 19:41:12,733:INFO:          setuptools: 65.6.3
2023-02-02 19:41:12,733:INFO:             pycaret: 3.0.0rc8
2023-02-02 19:41:12,733:INFO:             IPython: 8.9.0
2023-02-02 19:41:12,733:INFO:          ipywidgets: 8.0.4
2023-02-02 19:41:12,733:INFO:                tqdm: 4.64.1
2023-02-02 19:41:12,734:INFO:               numpy: 1.23.5
2023-02-02 19:41:12,734:INFO:              pandas: 1.5.3
2023-02-02 19:41:12,734:INFO:              jinja2: 3.1.2
2023-02-02 19:41:12,734:INFO:               scipy: 1.10.0
2023-02-02 19:41:12,734:INFO:              joblib: 1.2.0
2023-02-02 19:41:12,734:INFO:             sklearn: 1.1.3
2023-02-02 19:41:12,734:INFO:                pyod: 1.0.7
2023-02-02 19:41:12,734:INFO:            imblearn: 0.10.1
2023-02-02 19:41:12,734:INFO:   category_encoders: 2.6.0
2023-02-02 19:41:12,734:INFO:            lightgbm: 3.3.5
2023-02-02 19:41:12,735:INFO:               numba: 0.56.4
2023-02-02 19:41:12,735:INFO:            requests: 2.28.2
2023-02-02 19:41:12,735:INFO:          matplotlib: 3.7.0rc1
2023-02-02 19:41:12,735:INFO:          scikitplot: 0.3.7
2023-02-02 19:41:12,735:INFO:         yellowbrick: 1.5
2023-02-02 19:41:12,735:INFO:              plotly: 5.13.0
2023-02-02 19:41:12,735:INFO:             kaleido: 0.2.1
2023-02-02 19:41:12,735:INFO:         statsmodels: 0.13.5
2023-02-02 19:41:12,735:INFO:              sktime: 0.16.0
2023-02-02 19:41:12,735:INFO:               tbats: 1.1.2
2023-02-02 19:41:12,736:INFO:            pmdarima: 2.0.2
2023-02-02 19:41:12,736:INFO:              psutil: 5.9.4
2023-02-02 19:41:12,736:INFO:PyCaret optional dependencies:
2023-02-02 19:41:12,736:INFO:                shap: Not installed
2023-02-02 19:41:12,736:INFO:           interpret: Not installed
2023-02-02 19:41:12,736:INFO:                umap: Not installed
2023-02-02 19:41:12,736:INFO:    pandas_profiling: Not installed
2023-02-02 19:41:12,736:INFO:  explainerdashboard: Not installed
2023-02-02 19:41:12,737:INFO:             autoviz: Not installed
2023-02-02 19:41:12,737:INFO:           fairlearn: Not installed
2023-02-02 19:41:12,737:INFO:             xgboost: Not installed
2023-02-02 19:41:12,737:INFO:            catboost: Not installed
2023-02-02 19:41:12,737:INFO:              kmodes: Not installed
2023-02-02 19:41:12,737:INFO:             mlxtend: Not installed
2023-02-02 19:41:12,737:INFO:       statsforecast: Not installed
2023-02-02 19:41:12,737:INFO:        tune_sklearn: Not installed
2023-02-02 19:41:12,737:INFO:                 ray: Not installed
2023-02-02 19:41:12,737:INFO:            hyperopt: Not installed
2023-02-02 19:41:12,738:INFO:              optuna: Not installed
2023-02-02 19:41:12,738:INFO:               skopt: Not installed
2023-02-02 19:41:12,738:INFO:              mlflow: Not installed
2023-02-02 19:41:12,738:INFO:              gradio: Not installed
2023-02-02 19:41:12,738:INFO:             fastapi: Not installed
2023-02-02 19:41:12,738:INFO:             uvicorn: Not installed
2023-02-02 19:41:12,738:INFO:              m2cgen: Not installed
2023-02-02 19:41:12,738:INFO:           evidently: Not installed
2023-02-02 19:41:12,738:INFO:                nltk: Not installed
2023-02-02 19:41:12,739:INFO:            pyLDAvis: Not installed
2023-02-02 19:41:12,739:INFO:              gensim: Not installed
2023-02-02 19:41:12,739:INFO:               spacy: Not installed
2023-02-02 19:41:12,739:INFO:           wordcloud: Not installed
2023-02-02 19:41:12,739:INFO:            textblob: Not installed
2023-02-02 19:41:12,739:INFO:               fugue: Not installed
2023-02-02 19:41:12,739:INFO:           streamlit: Not installed
2023-02-02 19:41:12,739:INFO:             prophet: Not installed
2023-02-02 19:41:12,739:INFO:None
2023-02-02 19:41:12,748:INFO:Set Forecast Horizon.
2023-02-02 19:41:12,749:INFO:Set up Train-Test Splits.
2023-02-02 19:41:12,788:INFO:Finished creating preprocessing pipeline.
2023-02-02 19:41:12,790:INFO:Pipeline: ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                DummyForecaster())]))])
2023-02-02 19:41:12,790:INFO:Set up Seasonal Period.
2023-02-02 19:41:12,792:INFO:Set up whether Multiplicative components allowed.
2023-02-02 19:41:12,823:INFO:Creating final display dataframe.
2023-02-02 19:41:12,833:INFO:Setup Display Container:                                          Description                    Value
0                                         session_id                     8953
1                                             Target                   Vendas
2                                           Approach               Univariate
3                                Exogenous Variables              Not Present
4                                Original data shape                  (46, 1)
5                             Transformed data shape                  (46, 1)
6                        Transformed train set shape                  (41, 1)
7                         Transformed test set shape                   (5, 1)
8                           Rows with missing values                     0.0%
9                                     Fold Generator  ExpandingWindowSplitter
10                                       Fold Number                        1
11                       Enforce Prediction Interval                    False
12                   Splits used for hyperparameters                      all
13                        Seasonality Detection Algo                     auto
14                            Max Period to Consider                     None
15                         Seasonal Period(s) Tested                      [7]
16                    Significant Seasonal Period(s)                      [7]
17  Significant Seasonal Period(s) without Harmonics                      [7]
18                                  Remove Harmonics                    False
19                            Harmonics Order Method             harmonic_max
20                          Num Seasonalities to Use                        1
21                          All Seasonalities to Use                      [7]
22                               Primary Seasonality                        7
23                               Seasonality Present                     True
24                          Target Strictly Positive                     True
25                                Target White Noise                       No
26                                     Recommended d                        0
27                            Recommended Seasonal D                        1
28                                        Preprocess                    False
29                                          CPU Jobs                       -1
30                                           Use GPU                    False
31                                    Log Experiment                    False
32                                   Experiment Name          ts-default-name
33                                               USI                     f712
2023-02-02 19:41:12,841:INFO:Engine successfully changes for model 'auto_arima' to 'pmdarima'.
2023-02-02 19:41:12,845:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:12,845:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,846:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,846:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,846:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,847:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,847:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,847:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,848:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,848:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,851:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,854:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,855:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,855:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,856:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,857:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,857:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,858:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,858:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,858:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,858:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,859:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,859:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,859:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,863:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:12,863:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,863:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,864:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,864:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,864:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,865:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,865:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,865:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,866:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,868:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,869:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,870:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,870:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,870:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,871:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,871:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,871:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,871:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,871:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,871:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,873:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,873:INFO:Engine successfully changes for model 'lr_cds_dt' to 'sklearn'.
2023-02-02 19:41:12,876:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:12,876:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,876:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,877:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,877:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,877:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,878:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,878:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,878:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,880:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,882:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,882:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,882:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,883:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,883:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,883:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,884:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,884:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,884:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,884:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,884:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,884:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,884:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,887:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:12,888:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,888:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,888:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,889:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,889:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,889:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,889:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,890:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,891:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,893:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,893:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,893:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,894:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,894:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,894:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,895:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,895:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,895:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,895:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,895:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,895:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,895:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,896:INFO:Engine successfully changes for model 'en_cds_dt' to 'sklearn'.
2023-02-02 19:41:12,899:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:12,899:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,899:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,900:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,900:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,900:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,900:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,901:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,902:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,904:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,904:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,905:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,905:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,905:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,906:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,906:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,906:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,906:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,906:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,906:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,906:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,906:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,909:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:12,910:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,910:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,910:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,911:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,911:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,911:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,911:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,913:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,915:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,915:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,915:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,916:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,916:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,916:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,917:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,917:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,917:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,917:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,917:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,917:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,917:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,917:INFO:Engine successfully changes for model 'ridge_cds_dt' to 'sklearn'.
2023-02-02 19:41:12,920:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:12,921:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,921:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,922:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,922:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,922:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,922:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,924:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,926:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,926:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,926:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,926:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,927:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,927:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,927:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,928:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,928:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,928:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,928:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,928:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,928:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,931:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:12,932:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,932:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,932:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,933:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,933:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,933:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,935:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,936:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,937:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,937:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,937:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,938:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,938:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,938:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,938:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,938:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,938:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,939:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,939:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,939:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,939:INFO:Engine successfully changes for model 'lasso_cds_dt' to 'sklearn'.
2023-02-02 19:41:12,942:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:12,943:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,943:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,944:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,944:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,944:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,946:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,948:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,948:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,948:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,948:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,949:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,949:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,949:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,950:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,950:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,950:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,950:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,950:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,950:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,953:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:12,954:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,954:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,955:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,955:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,955:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,957:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,958:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,959:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,959:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,959:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,960:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,960:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,960:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,960:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,961:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,961:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,961:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,961:INFO:Engine successfully changes for model 'lar_cds_dt' to 'sklearn'.
2023-02-02 19:41:12,964:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:12,965:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,965:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,965:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,966:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,968:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,970:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,970:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,970:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,970:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,971:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,971:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,971:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,971:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,971:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,972:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,972:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,975:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:12,976:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,977:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,977:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,977:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,979:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,980:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,981:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,981:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,981:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,981:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,982:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,982:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,982:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,982:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,982:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,983:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,983:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,983:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,983:INFO:Engine successfully changes for model 'llar_cds_dt' to 'sklearn'.
2023-02-02 19:41:12,986:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:12,987:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,987:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,988:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,989:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,991:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,991:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,991:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,992:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,992:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,992:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,993:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,993:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,993:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,993:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,993:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,993:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,993:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:12,996:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:12,997:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,998:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:12,998:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,000:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,001:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,002:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,002:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,002:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,002:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,003:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,003:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,003:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,003:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,003:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,004:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,004:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,004:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,004:INFO:Engine successfully changes for model 'br_cds_dt' to 'sklearn'.
2023-02-02 19:41:13,007:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,008:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,008:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,010:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,012:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,012:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,012:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,013:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,013:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,013:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,013:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,014:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,014:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,014:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,014:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,014:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,014:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,017:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,019:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,019:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,021:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,022:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,022:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,023:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,023:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,023:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,024:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,024:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,024:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,024:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,024:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,024:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,024:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,025:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,025:INFO:Engine successfully changes for model 'huber_cds_dt' to 'sklearn'.
2023-02-02 19:41:13,028:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,029:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,031:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,032:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,033:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,033:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,033:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,034:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,034:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,034:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,034:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,034:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,034:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,035:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,038:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,040:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,041:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,043:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,043:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,043:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,044:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,044:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,044:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,045:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,045:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,045:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,045:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,045:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,045:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,045:INFO:Engine successfully changes for model 'par_cds_dt' to 'sklearn'.
2023-02-02 19:41:13,048:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,052:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,053:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,054:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,054:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,054:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,055:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,055:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,055:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,055:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,055:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,055:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,056:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,056:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,056:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,059:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,062:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,063:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,064:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,064:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,064:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,065:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,065:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,065:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,065:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,065:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,065:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,066:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,066:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,066:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,066:INFO:Engine successfully changes for model 'omp_cds_dt' to 'sklearn'.
2023-02-02 19:41:13,069:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,074:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,074:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,074:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,075:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,075:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,075:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,075:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,075:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,076:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,076:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,076:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,076:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,076:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,079:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,084:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,085:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,085:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,085:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,085:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,086:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,086:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,086:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,086:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,086:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,087:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,087:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,087:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,087:INFO:Engine successfully changes for model 'knn_cds_dt' to 'sklearn'.
2023-02-02 19:41:13,090:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,095:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,095:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,095:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,095:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,096:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,096:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,096:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,096:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,096:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,097:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,097:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,097:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,100:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,105:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,105:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,105:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,106:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,106:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,106:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,106:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,106:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,106:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,107:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,107:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,107:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,107:INFO:Engine successfully changes for model 'dt_cds_dt' to 'sklearn'.
2023-02-02 19:41:13,110:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,115:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,115:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,116:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,116:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,116:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,116:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,116:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,116:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,117:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,117:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,117:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,120:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,125:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,125:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,126:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,126:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,126:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,126:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,126:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,126:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,127:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,127:INFO:Engine successfully changes for model 'rf_cds_dt' to 'sklearn'.
2023-02-02 19:41:13,130:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,135:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,136:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,136:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,136:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,136:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,136:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,136:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,137:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,137:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,137:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,140:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,145:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,145:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,146:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,146:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,146:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,146:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,146:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,147:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,147:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,147:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,147:INFO:Engine successfully changes for model 'et_cds_dt' to 'sklearn'.
2023-02-02 19:41:13,150:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,155:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,156:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,156:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,156:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,156:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,156:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,157:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,157:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,160:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,165:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,165:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,166:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,166:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,166:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,166:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,167:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,167:INFO:Engine successfully changes for model 'gbr_cds_dt' to 'sklearn'.
2023-02-02 19:41:13,170:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,175:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,176:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,176:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,176:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,176:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,176:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,176:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,176:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,179:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,191:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,191:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,191:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,191:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,191:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,192:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,192:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,192:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,192:INFO:Engine successfully changes for model 'ada_cds_dt' to 'sklearn'.
2023-02-02 19:41:13,195:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,202:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,202:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,202:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,202:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,203:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,203:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,203:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,206:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,212:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,212:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,212:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,212:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,213:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,213:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,213:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,213:INFO:Engine successfully changes for model 'xgboost_cds_dt' to 'sklearn'.
2023-02-02 19:41:13,216:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,222:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,222:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,222:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,223:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,223:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,223:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,226:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,232:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,232:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,232:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,232:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,232:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,232:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,233:INFO:Engine successfully changes for model 'lightgbm_cds_dt' to 'sklearn'.
2023-02-02 19:41:13,236:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,242:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,242:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,243:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,243:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,243:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,246:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,252:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,252:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,252:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:41:13,252:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,252:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,253:INFO:Engine successfully changes for model 'catboost_cds_dt' to 'sklearn'.
2023-02-02 19:41:13,256:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,262:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,262:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,262:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,262:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,265:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,271:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,271:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,271:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,272:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,274:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,280:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,281:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,281:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,281:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,284:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:13,290:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,291:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,291:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,291:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:41:13,292:INFO:setup() successfully completed in 0.56s...............
2023-02-02 19:41:13,312:INFO:Initializing compare_models()
2023-02-02 19:41:13,312:INFO:compare_models(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, include=None, fold=None, round=4, cross_validation=True, sort=MASE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MASE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.time_series.forecasting.oop.TSForecastingExperiment'>}, exclude=None)
2023-02-02 19:41:13,312:INFO:Checking exceptions
2023-02-02 19:41:13,315:INFO:Preparing display monitor
2023-02-02 19:41:13,347:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:709: UserWarning:

Unsupported estimator `ensemble_forecaster` for method `compare_models()`, removing from model_library


2023-02-02 19:41:13,347:INFO:Initializing Naive Forecaster
2023-02-02 19:41:13,347:INFO:Total runtime is 0.0 minutes
2023-02-02 19:41:13,352:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:13,353:INFO:Initializing create_model()
2023-02-02 19:41:13,353:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=naive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:13,353:INFO:Checking exceptions
2023-02-02 19:41:13,353:INFO:Importing libraries
2023-02-02 19:41:13,353:INFO:Copying training dataset
2023-02-02 19:41:13,358:INFO:Defining folds
2023-02-02 19:41:13,358:INFO:Declaring metric variables
2023-02-02 19:41:13,362:INFO:Importing untrained model
2023-02-02 19:41:13,367:INFO:Naive Forecaster Imported successfully
2023-02-02 19:41:13,376:INFO:Starting cross validation
2023-02-02 19:41:13,377:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:18,383:INFO:Calculating mean and std
2023-02-02 19:41:18,385:INFO:Creating metrics dataframe
2023-02-02 19:41:18,390:INFO:Uploading results into container
2023-02-02 19:41:18,391:INFO:Uploading model into container now
2023-02-02 19:41:18,391:INFO:_master_model_container: 1
2023-02-02 19:41:18,391:INFO:_display_container: 2
2023-02-02 19:41:18,392:INFO:NaiveForecaster()
2023-02-02 19:41:18,392:INFO:create_model() successfully completed......................................
2023-02-02 19:41:18,599:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:18,600:INFO:Creating metrics dataframe
2023-02-02 19:41:18,610:INFO:Initializing Grand Means Forecaster
2023-02-02 19:41:18,610:INFO:Total runtime is 0.08770464261372884 minutes
2023-02-02 19:41:18,614:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:18,614:INFO:Initializing create_model()
2023-02-02 19:41:18,614:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=grand_means, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:18,614:INFO:Checking exceptions
2023-02-02 19:41:18,615:INFO:Importing libraries
2023-02-02 19:41:18,615:INFO:Copying training dataset
2023-02-02 19:41:18,620:INFO:Defining folds
2023-02-02 19:41:18,621:INFO:Declaring metric variables
2023-02-02 19:41:18,626:INFO:Importing untrained model
2023-02-02 19:41:18,631:INFO:Grand Means Forecaster Imported successfully
2023-02-02 19:41:18,640:INFO:Starting cross validation
2023-02-02 19:41:18,642:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:21,213:INFO:Calculating mean and std
2023-02-02 19:41:21,215:INFO:Creating metrics dataframe
2023-02-02 19:41:21,219:INFO:Uploading results into container
2023-02-02 19:41:21,220:INFO:Uploading model into container now
2023-02-02 19:41:21,220:INFO:_master_model_container: 2
2023-02-02 19:41:21,220:INFO:_display_container: 2
2023-02-02 19:41:21,221:INFO:NaiveForecaster(strategy='mean')
2023-02-02 19:41:21,221:INFO:create_model() successfully completed......................................
2023-02-02 19:41:21,424:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:21,424:INFO:Creating metrics dataframe
2023-02-02 19:41:21,436:INFO:Initializing Seasonal Naive Forecaster
2023-02-02 19:41:21,436:INFO:Total runtime is 0.13480892181396484 minutes
2023-02-02 19:41:21,439:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:21,440:INFO:Initializing create_model()
2023-02-02 19:41:21,440:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=snaive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:21,440:INFO:Checking exceptions
2023-02-02 19:41:21,440:INFO:Importing libraries
2023-02-02 19:41:21,440:INFO:Copying training dataset
2023-02-02 19:41:21,448:INFO:Defining folds
2023-02-02 19:41:21,449:INFO:Declaring metric variables
2023-02-02 19:41:21,454:INFO:Importing untrained model
2023-02-02 19:41:21,458:INFO:Seasonal Naive Forecaster Imported successfully
2023-02-02 19:41:21,467:INFO:Starting cross validation
2023-02-02 19:41:21,469:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:24,017:INFO:Calculating mean and std
2023-02-02 19:41:24,018:INFO:Creating metrics dataframe
2023-02-02 19:41:24,023:INFO:Uploading results into container
2023-02-02 19:41:24,024:INFO:Uploading model into container now
2023-02-02 19:41:24,024:INFO:_master_model_container: 3
2023-02-02 19:41:24,024:INFO:_display_container: 2
2023-02-02 19:41:24,024:INFO:NaiveForecaster(sp=7)
2023-02-02 19:41:24,025:INFO:create_model() successfully completed......................................
2023-02-02 19:41:24,230:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:24,230:INFO:Creating metrics dataframe
2023-02-02 19:41:24,243:INFO:Initializing Polynomial Trend Forecaster
2023-02-02 19:41:24,243:INFO:Total runtime is 0.18158442576726277 minutes
2023-02-02 19:41:24,248:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:24,248:INFO:Initializing create_model()
2023-02-02 19:41:24,248:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=polytrend, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:24,248:INFO:Checking exceptions
2023-02-02 19:41:24,248:INFO:Importing libraries
2023-02-02 19:41:24,249:INFO:Copying training dataset
2023-02-02 19:41:24,254:INFO:Defining folds
2023-02-02 19:41:24,254:INFO:Declaring metric variables
2023-02-02 19:41:24,259:INFO:Importing untrained model
2023-02-02 19:41:24,264:INFO:Polynomial Trend Forecaster Imported successfully
2023-02-02 19:41:24,272:INFO:Starting cross validation
2023-02-02 19:41:24,273:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:26,803:INFO:Calculating mean and std
2023-02-02 19:41:26,804:INFO:Creating metrics dataframe
2023-02-02 19:41:26,809:INFO:Uploading results into container
2023-02-02 19:41:26,810:INFO:Uploading model into container now
2023-02-02 19:41:26,810:INFO:_master_model_container: 4
2023-02-02 19:41:26,810:INFO:_display_container: 2
2023-02-02 19:41:26,811:INFO:PolynomialTrendForecaster()
2023-02-02 19:41:26,811:INFO:create_model() successfully completed......................................
2023-02-02 19:41:27,015:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:27,015:INFO:Creating metrics dataframe
2023-02-02 19:41:27,027:INFO:Initializing ARIMA
2023-02-02 19:41:27,027:INFO:Total runtime is 0.2279911001523336 minutes
2023-02-02 19:41:27,031:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:27,032:INFO:Initializing create_model()
2023-02-02 19:41:27,032:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:27,032:INFO:Checking exceptions
2023-02-02 19:41:27,032:INFO:Importing libraries
2023-02-02 19:41:27,032:INFO:Copying training dataset
2023-02-02 19:41:27,037:INFO:Defining folds
2023-02-02 19:41:27,038:INFO:Declaring metric variables
2023-02-02 19:41:27,043:INFO:Importing untrained model
2023-02-02 19:41:27,048:INFO:ARIMA Imported successfully
2023-02-02 19:41:27,057:INFO:Starting cross validation
2023-02-02 19:41:27,059:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:29,734:INFO:Calculating mean and std
2023-02-02 19:41:29,736:INFO:Creating metrics dataframe
2023-02-02 19:41:29,740:INFO:Uploading results into container
2023-02-02 19:41:29,740:INFO:Uploading model into container now
2023-02-02 19:41:29,742:INFO:_master_model_container: 5
2023-02-02 19:41:29,742:INFO:_display_container: 2
2023-02-02 19:41:29,742:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:41:29,742:INFO:create_model() successfully completed......................................
2023-02-02 19:41:29,956:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:29,956:INFO:Creating metrics dataframe
2023-02-02 19:41:29,969:INFO:Initializing Auto ARIMA
2023-02-02 19:41:29,969:INFO:Total runtime is 0.2770275870958964 minutes
2023-02-02 19:41:29,973:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:29,973:INFO:Initializing create_model()
2023-02-02 19:41:29,973:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=auto_arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:29,973:INFO:Checking exceptions
2023-02-02 19:41:29,974:INFO:Importing libraries
2023-02-02 19:41:29,974:INFO:Copying training dataset
2023-02-02 19:41:29,979:INFO:Defining folds
2023-02-02 19:41:29,979:INFO:Declaring metric variables
2023-02-02 19:41:29,983:INFO:Importing untrained model
2023-02-02 19:41:29,993:INFO:Auto ARIMA Imported successfully
2023-02-02 19:41:30,003:INFO:Starting cross validation
2023-02-02 19:41:30,004:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:35,877:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pmdarima\arima\_auto_solvers.py:522: ModelFitWarning: Error fitting  ARIMA(2,0,1)(2,1,0)[7] intercept (if you do not want to see these warnings, run with error_action="ignore").
  warnings.warn(warning_str, ModelFitWarning)

2023-02-02 19:41:37,722:INFO:Calculating mean and std
2023-02-02 19:41:37,723:INFO:Creating metrics dataframe
2023-02-02 19:41:37,728:INFO:Uploading results into container
2023-02-02 19:41:37,729:INFO:Uploading model into container now
2023-02-02 19:41:37,729:INFO:_master_model_container: 6
2023-02-02 19:41:37,729:INFO:_display_container: 2
2023-02-02 19:41:37,730:INFO:AutoARIMA(random_state=8953, sp=7, suppress_warnings=True)
2023-02-02 19:41:37,730:INFO:create_model() successfully completed......................................
2023-02-02 19:41:37,940:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:37,940:INFO:Creating metrics dataframe
2023-02-02 19:41:37,954:INFO:Initializing Exponential Smoothing
2023-02-02 19:41:37,954:INFO:Total runtime is 0.41011220614115396 minutes
2023-02-02 19:41:37,959:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:37,960:INFO:Initializing create_model()
2023-02-02 19:41:37,960:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=exp_smooth, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:37,960:INFO:Checking exceptions
2023-02-02 19:41:37,960:INFO:Importing libraries
2023-02-02 19:41:37,960:INFO:Copying training dataset
2023-02-02 19:41:37,965:INFO:Defining folds
2023-02-02 19:41:37,965:INFO:Declaring metric variables
2023-02-02 19:41:37,970:INFO:Importing untrained model
2023-02-02 19:41:37,977:INFO:Exponential Smoothing Imported successfully
2023-02-02 19:41:37,986:INFO:Starting cross validation
2023-02-02 19:41:37,987:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:40,716:INFO:Calculating mean and std
2023-02-02 19:41:40,717:INFO:Creating metrics dataframe
2023-02-02 19:41:40,722:INFO:Uploading results into container
2023-02-02 19:41:40,722:INFO:Uploading model into container now
2023-02-02 19:41:40,723:INFO:_master_model_container: 7
2023-02-02 19:41:40,723:INFO:_display_container: 2
2023-02-02 19:41:40,724:INFO:ExponentialSmoothing(seasonal='mul', sp=7, trend='add')
2023-02-02 19:41:40,724:INFO:create_model() successfully completed......................................
2023-02-02 19:41:40,928:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:40,928:INFO:Creating metrics dataframe
2023-02-02 19:41:40,942:INFO:Initializing Croston
2023-02-02 19:41:40,942:INFO:Total runtime is 0.45991482337315875 minutes
2023-02-02 19:41:40,946:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:40,946:INFO:Initializing create_model()
2023-02-02 19:41:40,946:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=croston, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:40,946:INFO:Checking exceptions
2023-02-02 19:41:40,946:INFO:Importing libraries
2023-02-02 19:41:40,947:INFO:Copying training dataset
2023-02-02 19:41:40,952:INFO:Defining folds
2023-02-02 19:41:40,952:INFO:Declaring metric variables
2023-02-02 19:41:40,957:INFO:Importing untrained model
2023-02-02 19:41:40,962:INFO:Croston Imported successfully
2023-02-02 19:41:40,971:INFO:Starting cross validation
2023-02-02 19:41:40,972:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:43,522:INFO:Calculating mean and std
2023-02-02 19:41:43,523:INFO:Creating metrics dataframe
2023-02-02 19:41:43,528:INFO:Uploading results into container
2023-02-02 19:41:43,529:INFO:Uploading model into container now
2023-02-02 19:41:43,530:INFO:_master_model_container: 8
2023-02-02 19:41:43,530:INFO:_display_container: 2
2023-02-02 19:41:43,531:INFO:Croston()
2023-02-02 19:41:43,531:INFO:create_model() successfully completed......................................
2023-02-02 19:41:43,736:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:43,737:INFO:Creating metrics dataframe
2023-02-02 19:41:43,750:INFO:Initializing ETS
2023-02-02 19:41:43,750:INFO:Total runtime is 0.5067073663075765 minutes
2023-02-02 19:41:43,754:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:43,754:INFO:Initializing create_model()
2023-02-02 19:41:43,755:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=ets, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:43,755:INFO:Checking exceptions
2023-02-02 19:41:43,755:INFO:Importing libraries
2023-02-02 19:41:43,755:INFO:Copying training dataset
2023-02-02 19:41:43,761:INFO:Defining folds
2023-02-02 19:41:43,761:INFO:Declaring metric variables
2023-02-02 19:41:43,768:INFO:Importing untrained model
2023-02-02 19:41:43,773:INFO:ETS Imported successfully
2023-02-02 19:41:43,783:INFO:Starting cross validation
2023-02-02 19:41:43,784:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:43,928:INFO:Calculating mean and std
2023-02-02 19:41:43,929:INFO:Creating metrics dataframe
2023-02-02 19:41:43,933:INFO:Uploading results into container
2023-02-02 19:41:43,933:INFO:Uploading model into container now
2023-02-02 19:41:43,934:INFO:_master_model_container: 9
2023-02-02 19:41:43,934:INFO:_display_container: 2
2023-02-02 19:41:43,935:INFO:AutoETS(seasonal='mul', sp=7, trend='add')
2023-02-02 19:41:43,935:INFO:create_model() successfully completed......................................
2023-02-02 19:41:44,136:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:44,136:INFO:Creating metrics dataframe
2023-02-02 19:41:44,150:INFO:Initializing Theta Forecaster
2023-02-02 19:41:44,150:INFO:Total runtime is 0.5133694926897685 minutes
2023-02-02 19:41:44,154:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:44,154:INFO:Initializing create_model()
2023-02-02 19:41:44,154:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=theta, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:44,154:INFO:Checking exceptions
2023-02-02 19:41:44,154:INFO:Importing libraries
2023-02-02 19:41:44,155:INFO:Copying training dataset
2023-02-02 19:41:44,160:INFO:Defining folds
2023-02-02 19:41:44,160:INFO:Declaring metric variables
2023-02-02 19:41:44,165:INFO:Importing untrained model
2023-02-02 19:41:44,170:INFO:Theta Forecaster Imported successfully
2023-02-02 19:41:44,181:INFO:Starting cross validation
2023-02-02 19:41:44,183:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:44,255:INFO:Calculating mean and std
2023-02-02 19:41:44,255:INFO:Creating metrics dataframe
2023-02-02 19:41:44,259:INFO:Uploading results into container
2023-02-02 19:41:44,259:INFO:Uploading model into container now
2023-02-02 19:41:44,260:INFO:_master_model_container: 10
2023-02-02 19:41:44,260:INFO:_display_container: 2
2023-02-02 19:41:44,260:INFO:ThetaForecaster(sp=7)
2023-02-02 19:41:44,260:INFO:create_model() successfully completed......................................
2023-02-02 19:41:44,450:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:44,451:INFO:Creating metrics dataframe
2023-02-02 19:41:44,465:INFO:Initializing Linear w/ Cond. Deseasonalize & Detrending
2023-02-02 19:41:44,465:INFO:Total runtime is 0.5186329046885173 minutes
2023-02-02 19:41:44,469:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:44,469:INFO:Initializing create_model()
2023-02-02 19:41:44,469:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=lr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:44,469:INFO:Checking exceptions
2023-02-02 19:41:44,470:INFO:Importing libraries
2023-02-02 19:41:44,470:INFO:Copying training dataset
2023-02-02 19:41:44,475:INFO:Defining folds
2023-02-02 19:41:44,475:INFO:Declaring metric variables
2023-02-02 19:41:44,479:INFO:Importing untrained model
2023-02-02 19:41:44,484:INFO:Linear w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:41:44,495:INFO:Starting cross validation
2023-02-02 19:41:44,496:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:44,804:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:44,804:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:44,804:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:44,804:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:44,881:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:45,094:INFO:Calculating mean and std
2023-02-02 19:41:45,096:INFO:Creating metrics dataframe
2023-02-02 19:41:45,100:INFO:Uploading results into container
2023-02-02 19:41:45,100:INFO:Uploading model into container now
2023-02-02 19:41:45,100:INFO:_master_model_container: 11
2023-02-02 19:41:45,100:INFO:_display_container: 2
2023-02-02 19:41:45,102:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LinearRegression(n_jobs=-1), sp=7,
                    window_length=7)
2023-02-02 19:41:45,102:INFO:create_model() successfully completed......................................
2023-02-02 19:41:45,297:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:45,298:INFO:Creating metrics dataframe
2023-02-02 19:41:45,313:INFO:Initializing Elastic Net w/ Cond. Deseasonalize & Detrending
2023-02-02 19:41:45,313:INFO:Total runtime is 0.532753074169159 minutes
2023-02-02 19:41:45,318:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:45,318:INFO:Initializing create_model()
2023-02-02 19:41:45,318:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=en_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:45,318:INFO:Checking exceptions
2023-02-02 19:41:45,318:INFO:Importing libraries
2023-02-02 19:41:45,318:INFO:Copying training dataset
2023-02-02 19:41:45,324:INFO:Defining folds
2023-02-02 19:41:45,324:INFO:Declaring metric variables
2023-02-02 19:41:45,328:INFO:Importing untrained model
2023-02-02 19:41:45,332:INFO:Elastic Net w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:41:45,341:INFO:Starting cross validation
2023-02-02 19:41:45,342:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:45,625:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:45,625:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:45,625:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:45,625:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:45,691:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:45,907:INFO:Calculating mean and std
2023-02-02 19:41:45,908:INFO:Creating metrics dataframe
2023-02-02 19:41:45,913:INFO:Uploading results into container
2023-02-02 19:41:45,913:INFO:Uploading model into container now
2023-02-02 19:41:45,913:INFO:_master_model_container: 12
2023-02-02 19:41:45,913:INFO:_display_container: 2
2023-02-02 19:41:45,915:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=ElasticNet(random_state=8953), sp=7,
                    window_length=7)
2023-02-02 19:41:45,915:INFO:create_model() successfully completed......................................
2023-02-02 19:41:46,108:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:46,108:INFO:Creating metrics dataframe
2023-02-02 19:41:46,125:INFO:Initializing Ridge w/ Cond. Deseasonalize & Detrending
2023-02-02 19:41:46,126:INFO:Total runtime is 0.5463160037994385 minutes
2023-02-02 19:41:46,130:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:46,130:INFO:Initializing create_model()
2023-02-02 19:41:46,130:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=ridge_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:46,130:INFO:Checking exceptions
2023-02-02 19:41:46,130:INFO:Importing libraries
2023-02-02 19:41:46,130:INFO:Copying training dataset
2023-02-02 19:41:46,136:INFO:Defining folds
2023-02-02 19:41:46,136:INFO:Declaring metric variables
2023-02-02 19:41:46,141:INFO:Importing untrained model
2023-02-02 19:41:46,146:INFO:Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:41:46,156:INFO:Starting cross validation
2023-02-02 19:41:46,157:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:46,440:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:46,440:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:46,440:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:46,440:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:46,506:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:46,720:INFO:Calculating mean and std
2023-02-02 19:41:46,721:INFO:Creating metrics dataframe
2023-02-02 19:41:46,725:INFO:Uploading results into container
2023-02-02 19:41:46,725:INFO:Uploading model into container now
2023-02-02 19:41:46,726:INFO:_master_model_container: 13
2023-02-02 19:41:46,726:INFO:_display_container: 2
2023-02-02 19:41:46,728:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Ridge(random_state=8953), sp=7, window_length=7)
2023-02-02 19:41:46,728:INFO:create_model() successfully completed......................................
2023-02-02 19:41:46,922:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:46,922:INFO:Creating metrics dataframe
2023-02-02 19:41:46,938:INFO:Initializing Lasso w/ Cond. Deseasonalize & Detrending
2023-02-02 19:41:46,939:INFO:Total runtime is 0.5598603169123332 minutes
2023-02-02 19:41:46,943:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:46,943:INFO:Initializing create_model()
2023-02-02 19:41:46,943:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=lasso_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:46,943:INFO:Checking exceptions
2023-02-02 19:41:46,943:INFO:Importing libraries
2023-02-02 19:41:46,943:INFO:Copying training dataset
2023-02-02 19:41:46,948:INFO:Defining folds
2023-02-02 19:41:46,949:INFO:Declaring metric variables
2023-02-02 19:41:46,953:INFO:Importing untrained model
2023-02-02 19:41:46,958:INFO:Lasso w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:41:46,968:INFO:Starting cross validation
2023-02-02 19:41:46,970:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:47,253:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:47,254:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:47,254:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:47,254:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:47,319:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:47,534:INFO:Calculating mean and std
2023-02-02 19:41:47,535:INFO:Creating metrics dataframe
2023-02-02 19:41:47,540:INFO:Uploading results into container
2023-02-02 19:41:47,540:INFO:Uploading model into container now
2023-02-02 19:41:47,540:INFO:_master_model_container: 14
2023-02-02 19:41:47,540:INFO:_display_container: 2
2023-02-02 19:41:47,542:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Lasso(random_state=8953), sp=7, window_length=7)
2023-02-02 19:41:47,543:INFO:create_model() successfully completed......................................
2023-02-02 19:41:47,736:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:47,736:INFO:Creating metrics dataframe
2023-02-02 19:41:47,753:INFO:Initializing Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-02-02 19:41:47,754:INFO:Total runtime is 0.5734353224436443 minutes
2023-02-02 19:41:47,757:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:47,757:INFO:Initializing create_model()
2023-02-02 19:41:47,758:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=lar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:47,758:INFO:Checking exceptions
2023-02-02 19:41:47,758:INFO:Importing libraries
2023-02-02 19:41:47,758:INFO:Copying training dataset
2023-02-02 19:41:47,764:INFO:Defining folds
2023-02-02 19:41:47,764:INFO:Declaring metric variables
2023-02-02 19:41:47,768:INFO:Importing untrained model
2023-02-02 19:41:47,774:INFO:Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:41:47,783:INFO:Starting cross validation
2023-02-02 19:41:47,784:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:48,066:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:48,066:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:48,066:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:48,066:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:48,132:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:48,207:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:41:48,352:INFO:Calculating mean and std
2023-02-02 19:41:48,353:INFO:Creating metrics dataframe
2023-02-02 19:41:48,358:INFO:Uploading results into container
2023-02-02 19:41:48,358:INFO:Uploading model into container now
2023-02-02 19:41:48,358:INFO:_master_model_container: 15
2023-02-02 19:41:48,358:INFO:_display_container: 2
2023-02-02 19:41:48,360:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Lars(random_state=8953), sp=7, window_length=7)
2023-02-02 19:41:48,361:INFO:create_model() successfully completed......................................
2023-02-02 19:41:48,553:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:48,553:INFO:Creating metrics dataframe
2023-02-02 19:41:48,570:INFO:Initializing Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-02-02 19:41:48,570:INFO:Total runtime is 0.5870435237884521 minutes
2023-02-02 19:41:48,575:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:48,575:INFO:Initializing create_model()
2023-02-02 19:41:48,575:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=llar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:48,575:INFO:Checking exceptions
2023-02-02 19:41:48,576:INFO:Importing libraries
2023-02-02 19:41:48,576:INFO:Copying training dataset
2023-02-02 19:41:48,581:INFO:Defining folds
2023-02-02 19:41:48,581:INFO:Declaring metric variables
2023-02-02 19:41:48,586:INFO:Importing untrained model
2023-02-02 19:41:48,591:INFO:Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:41:48,599:INFO:Starting cross validation
2023-02-02 19:41:48,601:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:48,884:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:48,884:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:48,884:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:48,884:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:48,950:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:49,023:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 19:41:49,167:INFO:Calculating mean and std
2023-02-02 19:41:49,168:INFO:Creating metrics dataframe
2023-02-02 19:41:49,172:INFO:Uploading results into container
2023-02-02 19:41:49,173:INFO:Uploading model into container now
2023-02-02 19:41:49,173:INFO:_master_model_container: 16
2023-02-02 19:41:49,173:INFO:_display_container: 2
2023-02-02 19:41:49,175:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LassoLars(random_state=8953), sp=7,
                    window_length=7)
2023-02-02 19:41:49,175:INFO:create_model() successfully completed......................................
2023-02-02 19:41:49,373:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:49,373:INFO:Creating metrics dataframe
2023-02-02 19:41:49,393:INFO:Initializing Bayesian Ridge w/ Cond. Deseasonalize & Detrending
2023-02-02 19:41:49,393:INFO:Total runtime is 0.6007517139116924 minutes
2023-02-02 19:41:49,398:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:49,398:INFO:Initializing create_model()
2023-02-02 19:41:49,398:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=br_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:49,398:INFO:Checking exceptions
2023-02-02 19:41:49,398:INFO:Importing libraries
2023-02-02 19:41:49,398:INFO:Copying training dataset
2023-02-02 19:41:49,403:INFO:Defining folds
2023-02-02 19:41:49,404:INFO:Declaring metric variables
2023-02-02 19:41:49,408:INFO:Importing untrained model
2023-02-02 19:41:49,413:INFO:Bayesian Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:41:49,421:INFO:Starting cross validation
2023-02-02 19:41:49,423:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:49,713:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:49,713:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:49,713:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:49,713:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:49,780:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:50,006:INFO:Calculating mean and std
2023-02-02 19:41:50,007:INFO:Creating metrics dataframe
2023-02-02 19:41:50,012:INFO:Uploading results into container
2023-02-02 19:41:50,012:INFO:Uploading model into container now
2023-02-02 19:41:50,012:INFO:_master_model_container: 17
2023-02-02 19:41:50,012:INFO:_display_container: 2
2023-02-02 19:41:50,015:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=BayesianRidge(), sp=7, window_length=7)
2023-02-02 19:41:50,015:INFO:create_model() successfully completed......................................
2023-02-02 19:41:50,211:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:50,211:INFO:Creating metrics dataframe
2023-02-02 19:41:50,228:INFO:Initializing Huber w/ Cond. Deseasonalize & Detrending
2023-02-02 19:41:50,228:INFO:Total runtime is 0.6146764914194743 minutes
2023-02-02 19:41:50,233:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:50,233:INFO:Initializing create_model()
2023-02-02 19:41:50,233:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=huber_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:50,233:INFO:Checking exceptions
2023-02-02 19:41:50,234:INFO:Importing libraries
2023-02-02 19:41:50,234:INFO:Copying training dataset
2023-02-02 19:41:50,239:INFO:Defining folds
2023-02-02 19:41:50,239:INFO:Declaring metric variables
2023-02-02 19:41:50,244:INFO:Importing untrained model
2023-02-02 19:41:50,250:INFO:Huber w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:41:50,259:INFO:Starting cross validation
2023-02-02 19:41:50,261:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:50,540:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:50,540:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:50,540:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:50,541:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:41:50,604:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:41:50,707:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-02-02 19:41:50,853:INFO:Calculating mean and std
2023-02-02 19:41:50,854:INFO:Creating metrics dataframe
2023-02-02 19:41:50,859:INFO:Uploading results into container
2023-02-02 19:41:50,859:INFO:Uploading model into container now
2023-02-02 19:41:50,859:INFO:_master_model_container: 18
2023-02-02 19:41:50,859:INFO:_display_container: 2
2023-02-02 19:41:50,861:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=HuberRegressor(), sp=7, window_length=7)
2023-02-02 19:41:50,861:INFO:create_model() successfully completed......................................
2023-02-02 19:41:51,054:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:51,054:INFO:Creating metrics dataframe
2023-02-02 19:41:51,073:INFO:Initializing Passive Aggressive w/ Cond. Deseasonalize & Detrending
2023-02-02 19:41:51,073:INFO:Total runtime is 0.6287586053212484 minutes
2023-02-02 19:41:51,077:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:51,077:INFO:Initializing create_model()
2023-02-02 19:41:51,078:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=par_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:51,078:INFO:Checking exceptions
2023-02-02 19:41:51,078:INFO:Importing libraries
2023-02-02 19:41:51,078:INFO:Copying training dataset
2023-02-02 19:41:51,083:INFO:Defining folds
2023-02-02 19:41:51,083:INFO:Declaring metric variables
2023-02-02 19:41:51,088:INFO:Importing untrained model
2023-02-02 19:41:51,092:INFO:Passive Aggressive w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:41:51,102:INFO:Starting cross validation
2023-02-02 19:41:51,103:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:51,341:INFO:Calculating mean and std
2023-02-02 19:41:51,342:INFO:Creating metrics dataframe
2023-02-02 19:41:51,346:INFO:Uploading results into container
2023-02-02 19:41:51,346:INFO:Uploading model into container now
2023-02-02 19:41:51,346:INFO:_master_model_container: 19
2023-02-02 19:41:51,347:INFO:_display_container: 2
2023-02-02 19:41:51,349:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=PassiveAggressiveRegressor(random_state=8953),
                    sp=7, window_length=7)
2023-02-02 19:41:51,349:INFO:create_model() successfully completed......................................
2023-02-02 19:41:51,543:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:51,543:INFO:Creating metrics dataframe
2023-02-02 19:41:51,562:INFO:Initializing Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending
2023-02-02 19:41:51,563:INFO:Total runtime is 0.636918318271637 minutes
2023-02-02 19:41:51,567:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:51,567:INFO:Initializing create_model()
2023-02-02 19:41:51,567:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=omp_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:51,567:INFO:Checking exceptions
2023-02-02 19:41:51,567:INFO:Importing libraries
2023-02-02 19:41:51,568:INFO:Copying training dataset
2023-02-02 19:41:51,573:INFO:Defining folds
2023-02-02 19:41:51,573:INFO:Declaring metric variables
2023-02-02 19:41:51,577:INFO:Importing untrained model
2023-02-02 19:41:51,582:INFO:Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:41:51,592:INFO:Starting cross validation
2023-02-02 19:41:51,593:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:51,671:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:41:51,812:INFO:Calculating mean and std
2023-02-02 19:41:51,814:INFO:Creating metrics dataframe
2023-02-02 19:41:51,818:INFO:Uploading results into container
2023-02-02 19:41:51,818:INFO:Uploading model into container now
2023-02-02 19:41:51,818:INFO:_master_model_container: 20
2023-02-02 19:41:51,818:INFO:_display_container: 2
2023-02-02 19:41:51,820:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=OrthogonalMatchingPursuit(), sp=7,
                    window_length=7)
2023-02-02 19:41:51,820:INFO:create_model() successfully completed......................................
2023-02-02 19:41:52,014:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:52,014:INFO:Creating metrics dataframe
2023-02-02 19:41:52,032:INFO:Initializing K Neighbors w/ Cond. Deseasonalize & Detrending
2023-02-02 19:41:52,033:INFO:Total runtime is 0.6447525540987651 minutes
2023-02-02 19:41:52,037:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:52,037:INFO:Initializing create_model()
2023-02-02 19:41:52,038:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=knn_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:52,038:INFO:Checking exceptions
2023-02-02 19:41:52,038:INFO:Importing libraries
2023-02-02 19:41:52,038:INFO:Copying training dataset
2023-02-02 19:41:52,044:INFO:Defining folds
2023-02-02 19:41:52,044:INFO:Declaring metric variables
2023-02-02 19:41:52,049:INFO:Importing untrained model
2023-02-02 19:41:52,054:INFO:K Neighbors w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:41:52,063:INFO:Starting cross validation
2023-02-02 19:41:52,064:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:52,328:INFO:Calculating mean and std
2023-02-02 19:41:52,329:INFO:Creating metrics dataframe
2023-02-02 19:41:52,333:INFO:Uploading results into container
2023-02-02 19:41:52,333:INFO:Uploading model into container now
2023-02-02 19:41:52,334:INFO:_master_model_container: 21
2023-02-02 19:41:52,334:INFO:_display_container: 2
2023-02-02 19:41:52,336:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=KNeighborsRegressor(n_jobs=-1), sp=7,
                    window_length=7)
2023-02-02 19:41:52,336:INFO:create_model() successfully completed......................................
2023-02-02 19:41:52,535:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:52,535:INFO:Creating metrics dataframe
2023-02-02 19:41:52,555:INFO:Initializing Decision Tree w/ Cond. Deseasonalize & Detrending
2023-02-02 19:41:52,555:INFO:Total runtime is 0.6534662365913392 minutes
2023-02-02 19:41:52,561:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:52,561:INFO:Initializing create_model()
2023-02-02 19:41:52,561:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=dt_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:52,562:INFO:Checking exceptions
2023-02-02 19:41:52,562:INFO:Importing libraries
2023-02-02 19:41:52,562:INFO:Copying training dataset
2023-02-02 19:41:52,567:INFO:Defining folds
2023-02-02 19:41:52,567:INFO:Declaring metric variables
2023-02-02 19:41:52,571:INFO:Importing untrained model
2023-02-02 19:41:52,578:INFO:Decision Tree w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:41:52,587:INFO:Starting cross validation
2023-02-02 19:41:52,588:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:52,822:INFO:Calculating mean and std
2023-02-02 19:41:52,823:INFO:Creating metrics dataframe
2023-02-02 19:41:52,827:INFO:Uploading results into container
2023-02-02 19:41:52,827:INFO:Uploading model into container now
2023-02-02 19:41:52,828:INFO:_master_model_container: 22
2023-02-02 19:41:52,828:INFO:_display_container: 2
2023-02-02 19:41:52,830:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=DecisionTreeRegressor(random_state=8953), sp=7,
                    window_length=7)
2023-02-02 19:41:52,830:INFO:create_model() successfully completed......................................
2023-02-02 19:41:53,023:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:53,023:INFO:Creating metrics dataframe
2023-02-02 19:41:53,044:INFO:Initializing Random Forest w/ Cond. Deseasonalize & Detrending
2023-02-02 19:41:53,044:INFO:Total runtime is 0.6616112510363261 minutes
2023-02-02 19:41:53,048:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:53,048:INFO:Initializing create_model()
2023-02-02 19:41:53,048:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=rf_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:53,048:INFO:Checking exceptions
2023-02-02 19:41:53,048:INFO:Importing libraries
2023-02-02 19:41:53,049:INFO:Copying training dataset
2023-02-02 19:41:53,054:INFO:Defining folds
2023-02-02 19:41:53,054:INFO:Declaring metric variables
2023-02-02 19:41:53,058:INFO:Importing untrained model
2023-02-02 19:41:53,064:INFO:Random Forest w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:41:53,072:INFO:Starting cross validation
2023-02-02 19:41:53,074:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:53,540:INFO:Calculating mean and std
2023-02-02 19:41:53,542:INFO:Creating metrics dataframe
2023-02-02 19:41:53,546:INFO:Uploading results into container
2023-02-02 19:41:53,546:INFO:Uploading model into container now
2023-02-02 19:41:53,546:INFO:_master_model_container: 23
2023-02-02 19:41:53,546:INFO:_display_container: 2
2023-02-02 19:41:53,550:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=RandomForestRegressor(n_jobs=-1,
                                                    random_state=8953),
                    sp=7, window_length=7)
2023-02-02 19:41:53,550:INFO:create_model() successfully completed......................................
2023-02-02 19:41:53,742:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:53,743:INFO:Creating metrics dataframe
2023-02-02 19:41:53,764:INFO:Initializing Extra Trees w/ Cond. Deseasonalize & Detrending
2023-02-02 19:41:53,764:INFO:Total runtime is 0.6736053744951884 minutes
2023-02-02 19:41:53,768:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:53,768:INFO:Initializing create_model()
2023-02-02 19:41:53,768:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=et_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:53,768:INFO:Checking exceptions
2023-02-02 19:41:53,769:INFO:Importing libraries
2023-02-02 19:41:53,769:INFO:Copying training dataset
2023-02-02 19:41:53,774:INFO:Defining folds
2023-02-02 19:41:53,774:INFO:Declaring metric variables
2023-02-02 19:41:53,779:INFO:Importing untrained model
2023-02-02 19:41:53,784:INFO:Extra Trees w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:41:53,793:INFO:Starting cross validation
2023-02-02 19:41:53,796:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:54,217:INFO:Calculating mean and std
2023-02-02 19:41:54,218:INFO:Creating metrics dataframe
2023-02-02 19:41:54,222:INFO:Uploading results into container
2023-02-02 19:41:54,222:INFO:Uploading model into container now
2023-02-02 19:41:54,222:INFO:_master_model_container: 24
2023-02-02 19:41:54,222:INFO:_display_container: 2
2023-02-02 19:41:54,225:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(n_jobs=-1, random_state=8953),
                    sp=7, window_length=7)
2023-02-02 19:41:54,225:INFO:create_model() successfully completed......................................
2023-02-02 19:41:54,416:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:54,417:INFO:Creating metrics dataframe
2023-02-02 19:41:54,436:INFO:Initializing Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-02-02 19:41:54,437:INFO:Total runtime is 0.6848240971565247 minutes
2023-02-02 19:41:54,441:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:54,441:INFO:Initializing create_model()
2023-02-02 19:41:54,442:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=gbr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:54,442:INFO:Checking exceptions
2023-02-02 19:41:54,442:INFO:Importing libraries
2023-02-02 19:41:54,442:INFO:Copying training dataset
2023-02-02 19:41:54,447:INFO:Defining folds
2023-02-02 19:41:54,448:INFO:Declaring metric variables
2023-02-02 19:41:54,452:INFO:Importing untrained model
2023-02-02 19:41:54,457:INFO:Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:41:54,468:INFO:Starting cross validation
2023-02-02 19:41:54,470:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:54,731:INFO:Calculating mean and std
2023-02-02 19:41:54,733:INFO:Creating metrics dataframe
2023-02-02 19:41:54,737:INFO:Uploading results into container
2023-02-02 19:41:54,737:INFO:Uploading model into container now
2023-02-02 19:41:54,737:INFO:_master_model_container: 25
2023-02-02 19:41:54,738:INFO:_display_container: 2
2023-02-02 19:41:54,741:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=GradientBoostingRegressor(random_state=8953),
                    sp=7, window_length=7)
2023-02-02 19:41:54,741:INFO:create_model() successfully completed......................................
2023-02-02 19:41:54,935:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:54,936:INFO:Creating metrics dataframe
2023-02-02 19:41:54,956:INFO:Initializing AdaBoost w/ Cond. Deseasonalize & Detrending
2023-02-02 19:41:54,956:INFO:Total runtime is 0.6934796849886576 minutes
2023-02-02 19:41:54,960:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:54,961:INFO:Initializing create_model()
2023-02-02 19:41:54,961:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=ada_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:54,961:INFO:Checking exceptions
2023-02-02 19:41:54,961:INFO:Importing libraries
2023-02-02 19:41:54,961:INFO:Copying training dataset
2023-02-02 19:41:54,966:INFO:Defining folds
2023-02-02 19:41:54,967:INFO:Declaring metric variables
2023-02-02 19:41:54,971:INFO:Importing untrained model
2023-02-02 19:41:54,976:INFO:AdaBoost w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:41:54,986:INFO:Starting cross validation
2023-02-02 19:41:54,988:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:55,284:INFO:Calculating mean and std
2023-02-02 19:41:55,286:INFO:Creating metrics dataframe
2023-02-02 19:41:55,290:INFO:Uploading results into container
2023-02-02 19:41:55,290:INFO:Uploading model into container now
2023-02-02 19:41:55,291:INFO:_master_model_container: 26
2023-02-02 19:41:55,291:INFO:_display_container: 2
2023-02-02 19:41:55,294:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=AdaBoostRegressor(random_state=8953), sp=7,
                    window_length=7)
2023-02-02 19:41:55,294:INFO:create_model() successfully completed......................................
2023-02-02 19:41:55,488:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:55,488:INFO:Creating metrics dataframe
2023-02-02 19:41:55,509:INFO:Initializing Light Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-02-02 19:41:55,509:INFO:Total runtime is 0.7026909232139588 minutes
2023-02-02 19:41:55,513:INFO:SubProcess create_model() called ==================================
2023-02-02 19:41:55,513:INFO:Initializing create_model()
2023-02-02 19:41:55,513:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=lightgbm_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C1293A21F0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:55,513:INFO:Checking exceptions
2023-02-02 19:41:55,514:INFO:Importing libraries
2023-02-02 19:41:55,514:INFO:Copying training dataset
2023-02-02 19:41:55,521:INFO:Defining folds
2023-02-02 19:41:55,521:INFO:Declaring metric variables
2023-02-02 19:41:55,526:INFO:Importing untrained model
2023-02-02 19:41:55,532:INFO:Light Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:41:55,541:INFO:Starting cross validation
2023-02-02 19:41:55,542:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:55,786:INFO:Calculating mean and std
2023-02-02 19:41:55,787:INFO:Creating metrics dataframe
2023-02-02 19:41:55,791:INFO:Uploading results into container
2023-02-02 19:41:55,791:INFO:Uploading model into container now
2023-02-02 19:41:55,791:INFO:_master_model_container: 27
2023-02-02 19:41:55,791:INFO:_display_container: 2
2023-02-02 19:41:55,793:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LGBMRegressor(random_state=8953), sp=7,
                    window_length=7)
2023-02-02 19:41:55,794:INFO:create_model() successfully completed......................................
2023-02-02 19:41:55,988:INFO:SubProcess create_model() end ==================================
2023-02-02 19:41:55,988:INFO:Creating metrics dataframe
2023-02-02 19:41:56,024:INFO:Initializing create_model()
2023-02-02 19:41:56,024:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:56,024:INFO:Checking exceptions
2023-02-02 19:41:56,026:INFO:Importing libraries
2023-02-02 19:41:56,026:INFO:Copying training dataset
2023-02-02 19:41:56,030:INFO:Defining folds
2023-02-02 19:41:56,031:INFO:Declaring metric variables
2023-02-02 19:41:56,031:INFO:Importing untrained model
2023-02-02 19:41:56,031:INFO:Declaring custom model
2023-02-02 19:41:56,032:INFO:ARIMA Imported successfully
2023-02-02 19:41:56,032:INFO:Cross validation set to False
2023-02-02 19:41:56,032:INFO:Fitting Model
2023-02-02 19:41:56,092:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:41:56,093:INFO:create_model() successfully completed......................................
2023-02-02 19:41:56,342:INFO:_master_model_container: 27
2023-02-02 19:41:56,342:INFO:_display_container: 2
2023-02-02 19:41:56,342:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:41:56,343:INFO:compare_models() successfully completed......................................
2023-02-02 19:41:56,358:INFO:Initializing create_model()
2023-02-02 19:41:56,359:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:41:56,359:INFO:Checking exceptions
2023-02-02 19:41:56,401:INFO:Importing libraries
2023-02-02 19:41:56,401:INFO:Copying training dataset
2023-02-02 19:41:56,408:INFO:Defining folds
2023-02-02 19:41:56,409:INFO:Declaring metric variables
2023-02-02 19:41:56,416:INFO:Importing untrained model
2023-02-02 19:41:56,422:INFO:ARIMA Imported successfully
2023-02-02 19:41:56,431:INFO:Starting cross validation
2023-02-02 19:41:56,432:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:41:56,558:INFO:Calculating mean and std
2023-02-02 19:41:56,559:INFO:Creating metrics dataframe
2023-02-02 19:41:56,566:INFO:Finalizing model
2023-02-02 19:41:56,629:INFO:Uploading results into container
2023-02-02 19:41:56,629:INFO:Uploading model into container now
2023-02-02 19:41:56,638:INFO:_master_model_container: 28
2023-02-02 19:41:56,638:INFO:_display_container: 3
2023-02-02 19:41:56,639:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:41:56,639:INFO:create_model() successfully completed......................................
2023-02-02 19:41:56,958:INFO:Visual Rendered Successfully
2023-02-02 19:41:56,981:INFO:Initializing finalize_model()
2023-02-02 19:41:56,981:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 19:41:56,982:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:41:56,986:INFO:Initializing create_model()
2023-02-02 19:41:56,987:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 19:41:56,987:INFO:Checking exceptions
2023-02-02 19:41:56,988:INFO:Importing libraries
2023-02-02 19:41:56,989:INFO:Copying training dataset
2023-02-02 19:41:56,992:INFO:Defining folds
2023-02-02 19:41:56,992:INFO:Declaring metric variables
2023-02-02 19:41:56,992:INFO:Importing untrained model
2023-02-02 19:41:56,992:INFO:Declaring custom model
2023-02-02 19:41:56,994:INFO:ARIMA Imported successfully
2023-02-02 19:41:56,994:INFO:Cross validation set to False
2023-02-02 19:41:56,994:INFO:Fitting Model
2023-02-02 19:41:57,061:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:41:57,062:INFO:create_model() successfully completed......................................
2023-02-02 19:41:57,267:INFO:_master_model_container: 28
2023-02-02 19:41:57,267:INFO:_display_container: 3
2023-02-02 19:41:57,273:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:41:57,273:INFO:finalize_model() successfully completed......................................
2023-02-02 19:41:57,584:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 19:41:57,897:INFO:Visual Rendered Successfully
2023-02-02 19:48:39,427:INFO:Initializing finalize_model()
2023-02-02 19:48:39,427:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 19:48:39,428:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:48:39,434:INFO:Initializing create_model()
2023-02-02 19:48:39,434:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 19:48:39,434:INFO:Checking exceptions
2023-02-02 19:48:39,436:INFO:Importing libraries
2023-02-02 19:48:39,436:INFO:Copying training dataset
2023-02-02 19:48:39,440:INFO:Defining folds
2023-02-02 19:48:39,440:INFO:Declaring metric variables
2023-02-02 19:48:39,440:INFO:Importing untrained model
2023-02-02 19:48:39,441:INFO:Declaring custom model
2023-02-02 19:48:39,442:INFO:ARIMA Imported successfully
2023-02-02 19:48:39,442:INFO:Cross validation set to False
2023-02-02 19:48:39,442:INFO:Fitting Model
2023-02-02 19:48:39,509:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:48:39,509:INFO:create_model() successfully completed......................................
2023-02-02 19:48:39,704:INFO:_master_model_container: 28
2023-02-02 19:48:39,705:INFO:_display_container: 4
2023-02-02 19:48:39,711:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:48:39,711:INFO:finalize_model() successfully completed......................................
2023-02-02 19:48:39,978:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 19:48:40,274:INFO:Visual Rendered Successfully
2023-02-02 19:49:35,727:INFO:Initializing finalize_model()
2023-02-02 19:49:35,728:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 19:49:35,728:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:49:35,734:INFO:Initializing create_model()
2023-02-02 19:49:35,734:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 19:49:35,734:INFO:Checking exceptions
2023-02-02 19:49:35,736:INFO:Importing libraries
2023-02-02 19:49:35,736:INFO:Copying training dataset
2023-02-02 19:49:35,740:INFO:Defining folds
2023-02-02 19:49:35,740:INFO:Declaring metric variables
2023-02-02 19:49:35,740:INFO:Importing untrained model
2023-02-02 19:49:35,740:INFO:Declaring custom model
2023-02-02 19:49:35,742:INFO:ARIMA Imported successfully
2023-02-02 19:49:35,742:INFO:Cross validation set to False
2023-02-02 19:49:35,742:INFO:Fitting Model
2023-02-02 19:49:35,809:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:49:35,809:INFO:create_model() successfully completed......................................
2023-02-02 19:49:36,004:INFO:_master_model_container: 28
2023-02-02 19:49:36,004:INFO:_display_container: 5
2023-02-02 19:49:36,010:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:49:36,010:INFO:finalize_model() successfully completed......................................
2023-02-02 19:49:36,267:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 19:49:36,543:INFO:Visual Rendered Successfully
2023-02-02 19:49:36,618:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 19:50:03,038:INFO:Initializing finalize_model()
2023-02-02 19:50:03,039:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 19:50:03,039:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:50:03,045:INFO:Initializing create_model()
2023-02-02 19:50:03,045:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 19:50:03,046:INFO:Checking exceptions
2023-02-02 19:50:03,048:INFO:Importing libraries
2023-02-02 19:50:03,048:INFO:Copying training dataset
2023-02-02 19:50:03,052:INFO:Defining folds
2023-02-02 19:50:03,052:INFO:Declaring metric variables
2023-02-02 19:50:03,052:INFO:Importing untrained model
2023-02-02 19:50:03,052:INFO:Declaring custom model
2023-02-02 19:50:03,054:INFO:ARIMA Imported successfully
2023-02-02 19:50:03,054:INFO:Cross validation set to False
2023-02-02 19:50:03,054:INFO:Fitting Model
2023-02-02 19:50:03,120:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:50:03,120:INFO:create_model() successfully completed......................................
2023-02-02 19:50:03,316:INFO:_master_model_container: 28
2023-02-02 19:50:03,317:INFO:_display_container: 7
2023-02-02 19:50:03,323:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:50:03,323:INFO:finalize_model() successfully completed......................................
2023-02-02 19:50:03,583:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 19:50:03,860:INFO:Visual Rendered Successfully
2023-02-02 19:50:38,528:INFO:Initializing finalize_model()
2023-02-02 19:50:38,529:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 19:50:38,529:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:50:38,535:INFO:Initializing create_model()
2023-02-02 19:50:38,535:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 19:50:38,535:INFO:Checking exceptions
2023-02-02 19:50:38,537:INFO:Importing libraries
2023-02-02 19:50:38,537:INFO:Copying training dataset
2023-02-02 19:50:38,541:INFO:Defining folds
2023-02-02 19:50:38,541:INFO:Declaring metric variables
2023-02-02 19:50:38,541:INFO:Importing untrained model
2023-02-02 19:50:38,541:INFO:Declaring custom model
2023-02-02 19:50:38,543:INFO:ARIMA Imported successfully
2023-02-02 19:50:38,543:INFO:Cross validation set to False
2023-02-02 19:50:38,543:INFO:Fitting Model
2023-02-02 19:50:38,624:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:50:38,624:INFO:create_model() successfully completed......................................
2023-02-02 19:50:38,818:INFO:_master_model_container: 28
2023-02-02 19:50:38,819:INFO:_display_container: 9
2023-02-02 19:50:38,825:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:50:38,825:INFO:finalize_model() successfully completed......................................
2023-02-02 19:50:39,081:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 19:50:39,362:INFO:Visual Rendered Successfully
2023-02-02 19:50:39,439:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 19:51:03,286:INFO:Initializing finalize_model()
2023-02-02 19:51:03,286:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 19:51:03,287:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:51:03,292:INFO:Initializing create_model()
2023-02-02 19:51:03,292:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 19:51:03,292:INFO:Checking exceptions
2023-02-02 19:51:03,294:INFO:Importing libraries
2023-02-02 19:51:03,295:INFO:Copying training dataset
2023-02-02 19:51:03,298:INFO:Defining folds
2023-02-02 19:51:03,298:INFO:Declaring metric variables
2023-02-02 19:51:03,298:INFO:Importing untrained model
2023-02-02 19:51:03,298:INFO:Declaring custom model
2023-02-02 19:51:03,300:INFO:ARIMA Imported successfully
2023-02-02 19:51:03,300:INFO:Cross validation set to False
2023-02-02 19:51:03,300:INFO:Fitting Model
2023-02-02 19:51:03,366:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:51:03,366:INFO:create_model() successfully completed......................................
2023-02-02 19:51:03,560:INFO:_master_model_container: 28
2023-02-02 19:51:03,560:INFO:_display_container: 11
2023-02-02 19:51:03,566:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:51:03,566:INFO:finalize_model() successfully completed......................................
2023-02-02 19:51:03,825:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 19:51:04,118:INFO:Visual Rendered Successfully
2023-02-02 19:53:05,207:INFO:Initializing finalize_model()
2023-02-02 19:53:05,208:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 19:53:05,208:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:53:05,214:INFO:Initializing create_model()
2023-02-02 19:53:05,214:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 19:53:05,215:INFO:Checking exceptions
2023-02-02 19:53:05,217:INFO:Importing libraries
2023-02-02 19:53:05,217:INFO:Copying training dataset
2023-02-02 19:53:05,220:INFO:Defining folds
2023-02-02 19:53:05,220:INFO:Declaring metric variables
2023-02-02 19:53:05,220:INFO:Importing untrained model
2023-02-02 19:53:05,221:INFO:Declaring custom model
2023-02-02 19:53:05,222:INFO:ARIMA Imported successfully
2023-02-02 19:53:05,222:INFO:Cross validation set to False
2023-02-02 19:53:05,222:INFO:Fitting Model
2023-02-02 19:53:05,306:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:53:05,306:INFO:create_model() successfully completed......................................
2023-02-02 19:53:05,502:INFO:_master_model_container: 28
2023-02-02 19:53:05,502:INFO:_display_container: 12
2023-02-02 19:53:05,508:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:53:05,508:INFO:finalize_model() successfully completed......................................
2023-02-02 19:53:05,774:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 19:53:06,070:INFO:Visual Rendered Successfully
2023-02-02 19:53:06,154:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 19:56:01,375:INFO:Initializing finalize_model()
2023-02-02 19:56:01,375:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 19:56:01,376:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:56:01,380:INFO:Initializing create_model()
2023-02-02 19:56:01,380:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D569B50>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 19:56:01,380:INFO:Checking exceptions
2023-02-02 19:56:01,382:INFO:Importing libraries
2023-02-02 19:56:01,382:INFO:Copying training dataset
2023-02-02 19:56:01,386:INFO:Defining folds
2023-02-02 19:56:01,386:INFO:Declaring metric variables
2023-02-02 19:56:01,386:INFO:Importing untrained model
2023-02-02 19:56:01,386:INFO:Declaring custom model
2023-02-02 19:56:01,388:INFO:ARIMA Imported successfully
2023-02-02 19:56:01,388:INFO:Cross validation set to False
2023-02-02 19:56:01,388:INFO:Fitting Model
2023-02-02 19:56:01,454:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:56:01,455:INFO:create_model() successfully completed......................................
2023-02-02 19:56:01,649:INFO:_master_model_container: 28
2023-02-02 19:56:01,649:INFO:_display_container: 14
2023-02-02 19:56:01,655:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:56:01,655:INFO:finalize_model() successfully completed......................................
2023-02-02 19:56:01,909:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 19:56:02,191:INFO:Visual Rendered Successfully
2023-02-02 19:56:19,040:INFO:PyCaret TSForecastingExperiment
2023-02-02 19:56:19,040:INFO:Logging name: ts-default-name
2023-02-02 19:56:19,040:INFO:ML Usecase: MLUsecase.TIME_SERIES
2023-02-02 19:56:19,040:INFO:version 3.0.0.rc8
2023-02-02 19:56:19,040:INFO:Initializing setup()
2023-02-02 19:56:19,040:INFO:self.USI: a1b1
2023-02-02 19:56:19,040:INFO:self._variable_keys: {'gpu_n_jobs_param', 'candidate_sps', 'fold_generator', 'n_jobs_param', 'enforce_exogenous', 'y_test_transformed', 'enforce_pi', 'pipeline', 'X_test', 'fh', 'idx', 'y_test', 'primary_sp_to_use', 'memory', 'html_param', 'gpu_param', 'data', 'approach_type', 'log_plots_param', 'y_transformed', 'X_test_transformed', 'exp_name_log', 'fold_param', 'strictly_positive', 'seed', 'X', 'exp_id', 'X_train_transformed', 'exogenous_present', 'model_engines', 'X_transformed', 'index_type', 'all_sps_to_use', 'seasonality_present', 'y_train', 'USI', 'y', 'X_train', 'significant_sps', 'y_train_transformed', '_available_plots', 'logging_param', 'significant_sps_no_harmonics', '_ml_usecase'}
2023-02-02 19:56:19,040:INFO:Checking environment
2023-02-02 19:56:19,040:INFO:python_version: 3.9.16
2023-02-02 19:56:19,040:INFO:python_build: ('main', 'Jan 11 2023 16:16:36')
2023-02-02 19:56:19,041:INFO:machine: AMD64
2023-02-02 19:56:19,041:INFO:platform: Windows-10-10.0.19045-SP0
2023-02-02 19:56:19,041:INFO:Memory: svmem(total=12825538560, available=4604649472, percent=64.1, used=8220889088, free=4604649472)
2023-02-02 19:56:19,041:INFO:Physical Core: 4
2023-02-02 19:56:19,041:INFO:Logical Core: 8
2023-02-02 19:56:19,041:INFO:Checking libraries
2023-02-02 19:56:19,041:INFO:System:
2023-02-02 19:56:19,041:INFO:    python: 3.9.16 (main, Jan 11 2023, 16:16:36) [MSC v.1916 64 bit (AMD64)]
2023-02-02 19:56:19,041:INFO:executable: C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\python.exe
2023-02-02 19:56:19,041:INFO:   machine: Windows-10-10.0.19045-SP0
2023-02-02 19:56:19,041:INFO:PyCaret required dependencies:
2023-02-02 19:56:19,041:INFO:                 pip: 22.3.1
2023-02-02 19:56:19,041:INFO:          setuptools: 65.6.3
2023-02-02 19:56:19,042:INFO:             pycaret: 3.0.0rc8
2023-02-02 19:56:19,042:INFO:             IPython: 8.9.0
2023-02-02 19:56:19,042:INFO:          ipywidgets: 8.0.4
2023-02-02 19:56:19,042:INFO:                tqdm: 4.64.1
2023-02-02 19:56:19,042:INFO:               numpy: 1.23.5
2023-02-02 19:56:19,042:INFO:              pandas: 1.5.3
2023-02-02 19:56:19,042:INFO:              jinja2: 3.1.2
2023-02-02 19:56:19,042:INFO:               scipy: 1.10.0
2023-02-02 19:56:19,042:INFO:              joblib: 1.2.0
2023-02-02 19:56:19,042:INFO:             sklearn: 1.1.3
2023-02-02 19:56:19,042:INFO:                pyod: 1.0.7
2023-02-02 19:56:19,042:INFO:            imblearn: 0.10.1
2023-02-02 19:56:19,042:INFO:   category_encoders: 2.6.0
2023-02-02 19:56:19,042:INFO:            lightgbm: 3.3.5
2023-02-02 19:56:19,042:INFO:               numba: 0.56.4
2023-02-02 19:56:19,042:INFO:            requests: 2.28.2
2023-02-02 19:56:19,043:INFO:          matplotlib: 3.7.0rc1
2023-02-02 19:56:19,043:INFO:          scikitplot: 0.3.7
2023-02-02 19:56:19,043:INFO:         yellowbrick: 1.5
2023-02-02 19:56:19,043:INFO:              plotly: 5.13.0
2023-02-02 19:56:19,043:INFO:             kaleido: 0.2.1
2023-02-02 19:56:19,043:INFO:         statsmodels: 0.13.5
2023-02-02 19:56:19,043:INFO:              sktime: 0.16.0
2023-02-02 19:56:19,043:INFO:               tbats: 1.1.2
2023-02-02 19:56:19,043:INFO:            pmdarima: 2.0.2
2023-02-02 19:56:19,043:INFO:              psutil: 5.9.4
2023-02-02 19:56:19,043:INFO:PyCaret optional dependencies:
2023-02-02 19:56:19,043:INFO:                shap: Not installed
2023-02-02 19:56:19,043:INFO:           interpret: Not installed
2023-02-02 19:56:19,043:INFO:                umap: Not installed
2023-02-02 19:56:19,043:INFO:    pandas_profiling: Not installed
2023-02-02 19:56:19,043:INFO:  explainerdashboard: Not installed
2023-02-02 19:56:19,044:INFO:             autoviz: Not installed
2023-02-02 19:56:19,044:INFO:           fairlearn: Not installed
2023-02-02 19:56:19,044:INFO:             xgboost: Not installed
2023-02-02 19:56:19,044:INFO:            catboost: Not installed
2023-02-02 19:56:19,044:INFO:              kmodes: Not installed
2023-02-02 19:56:19,044:INFO:             mlxtend: Not installed
2023-02-02 19:56:19,044:INFO:       statsforecast: Not installed
2023-02-02 19:56:19,044:INFO:        tune_sklearn: Not installed
2023-02-02 19:56:19,044:INFO:                 ray: Not installed
2023-02-02 19:56:19,044:INFO:            hyperopt: Not installed
2023-02-02 19:56:19,044:INFO:              optuna: Not installed
2023-02-02 19:56:19,044:INFO:               skopt: Not installed
2023-02-02 19:56:19,044:INFO:              mlflow: Not installed
2023-02-02 19:56:19,044:INFO:              gradio: Not installed
2023-02-02 19:56:19,044:INFO:             fastapi: Not installed
2023-02-02 19:56:19,044:INFO:             uvicorn: Not installed
2023-02-02 19:56:19,045:INFO:              m2cgen: Not installed
2023-02-02 19:56:19,045:INFO:           evidently: Not installed
2023-02-02 19:56:19,045:INFO:                nltk: Not installed
2023-02-02 19:56:19,045:INFO:            pyLDAvis: Not installed
2023-02-02 19:56:19,045:INFO:              gensim: Not installed
2023-02-02 19:56:19,045:INFO:               spacy: Not installed
2023-02-02 19:56:19,045:INFO:           wordcloud: Not installed
2023-02-02 19:56:19,045:INFO:            textblob: Not installed
2023-02-02 19:56:19,045:INFO:               fugue: Not installed
2023-02-02 19:56:19,045:INFO:           streamlit: Not installed
2023-02-02 19:56:19,045:INFO:             prophet: Not installed
2023-02-02 19:56:19,045:INFO:None
2023-02-02 19:56:19,050:INFO:Set Forecast Horizon.
2023-02-02 19:56:19,050:INFO:Set up Train-Test Splits.
2023-02-02 19:56:19,084:INFO:Finished creating preprocessing pipeline.
2023-02-02 19:56:19,086:INFO:Pipeline: ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                DummyForecaster())]))])
2023-02-02 19:56:19,086:INFO:Set up Seasonal Period.
2023-02-02 19:56:19,088:INFO:Set up whether Multiplicative components allowed.
2023-02-02 19:56:19,120:INFO:Creating final display dataframe.
2023-02-02 19:56:19,131:INFO:Setup Display Container:                                          Description                    Value
0                                         session_id                     6200
1                                             Target                   Vendas
2                                           Approach               Univariate
3                                Exogenous Variables              Not Present
4                                Original data shape                  (46, 1)
5                             Transformed data shape                  (46, 1)
6                        Transformed train set shape                  (41, 1)
7                         Transformed test set shape                   (5, 1)
8                           Rows with missing values                     0.0%
9                                     Fold Generator  ExpandingWindowSplitter
10                                       Fold Number                        1
11                       Enforce Prediction Interval                    False
12                   Splits used for hyperparameters                      all
13                        Seasonality Detection Algo                     auto
14                            Max Period to Consider                     None
15                         Seasonal Period(s) Tested                      [7]
16                    Significant Seasonal Period(s)                      [7]
17  Significant Seasonal Period(s) without Harmonics                      [7]
18                                  Remove Harmonics                    False
19                            Harmonics Order Method             harmonic_max
20                          Num Seasonalities to Use                        1
21                          All Seasonalities to Use                      [7]
22                               Primary Seasonality                        7
23                               Seasonality Present                     True
24                          Target Strictly Positive                     True
25                                Target White Noise                       No
26                                     Recommended d                        0
27                            Recommended Seasonal D                        1
28                                        Preprocess                    False
29                                          CPU Jobs                       -1
30                                           Use GPU                    False
31                                    Log Experiment                    False
32                                   Experiment Name          ts-default-name
33                                               USI                     a1b1
2023-02-02 19:56:19,138:INFO:Engine successfully changes for model 'auto_arima' to 'pmdarima'.
2023-02-02 19:56:19,142:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,142:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,143:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,143:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,143:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,144:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,144:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,145:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,145:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,146:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,150:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,152:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,152:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,152:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,152:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,153:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,153:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,153:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,153:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,154:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,154:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,154:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,154:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,154:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,158:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,158:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,158:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,158:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,159:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,159:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,159:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,160:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,160:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,160:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,162:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,164:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,164:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,165:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,165:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,165:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,166:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,166:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,166:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,167:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,167:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,167:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,167:INFO:Engine successfully changes for model 'lr_cds_dt' to 'sklearn'.
2023-02-02 19:56:19,170:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,170:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,171:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,171:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,171:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,171:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,172:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,172:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,172:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,175:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,177:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,177:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,177:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,178:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,178:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,178:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,179:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,179:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,179:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,179:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,179:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,179:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,179:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,184:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,185:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,185:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,185:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,185:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,186:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,186:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,186:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,187:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,189:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,190:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,191:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,191:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,191:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,192:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,192:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,192:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,192:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,192:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,192:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,193:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,193:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,193:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,193:INFO:Engine successfully changes for model 'en_cds_dt' to 'sklearn'.
2023-02-02 19:56:19,196:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,196:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,197:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,197:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,197:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,197:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,198:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,198:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,200:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,201:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,202:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,202:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,202:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,203:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,203:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,203:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,203:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,203:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,203:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,204:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,204:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,204:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,207:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,207:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,208:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,208:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,208:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,208:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,209:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,209:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,210:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,212:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,212:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,213:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,213:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,213:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,213:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,214:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,214:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,214:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,214:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,214:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,214:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,214:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,215:INFO:Engine successfully changes for model 'ridge_cds_dt' to 'sklearn'.
2023-02-02 19:56:19,218:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,218:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,219:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,219:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,219:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,219:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,220:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,221:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,223:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,223:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,224:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,224:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,224:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,224:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,225:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,225:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,225:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,225:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,225:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,225:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,225:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,228:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,229:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,229:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,229:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,230:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,230:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,230:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,232:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,234:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,234:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,234:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,235:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,235:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,235:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,235:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,236:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,236:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,236:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,236:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,236:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,236:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,236:INFO:Engine successfully changes for model 'lasso_cds_dt' to 'sklearn'.
2023-02-02 19:56:19,239:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,240:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,240:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,241:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,241:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,241:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,243:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,244:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,245:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,245:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,245:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,245:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,245:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,245:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,245:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,245:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,245:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,246:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,246:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,246:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,249:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,250:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,250:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,250:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,251:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,251:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,253:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,254:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,255:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,255:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,255:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,255:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,256:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,256:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,256:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,256:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,256:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,257:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,257:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,257:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,257:INFO:Engine successfully changes for model 'lar_cds_dt' to 'sklearn'.
2023-02-02 19:56:19,260:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,261:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,261:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,261:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,262:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,263:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,265:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,265:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,266:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,266:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,266:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,267:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,267:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,267:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,267:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,267:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,267:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,268:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,268:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,271:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,272:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,272:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,272:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,272:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,274:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,276:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,276:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,276:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,276:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,277:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,278:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,278:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,278:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,278:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,278:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,278:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,278:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,278:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,279:INFO:Engine successfully changes for model 'llar_cds_dt' to 'sklearn'.
2023-02-02 19:56:19,282:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,283:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,283:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,283:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,286:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,287:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,287:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,288:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,288:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,288:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,289:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,289:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,289:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,289:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,289:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,290:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,293:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,294:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,294:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,294:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,296:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,298:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,298:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,298:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,299:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,299:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,299:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,300:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,300:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,300:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,300:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,300:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,300:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,300:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,301:INFO:Engine successfully changes for model 'br_cds_dt' to 'sklearn'.
2023-02-02 19:56:19,303:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,305:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,305:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,307:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,308:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,309:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,309:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,309:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,310:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,310:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,310:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,310:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,310:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,310:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,311:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,311:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,311:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,314:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,315:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,316:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,317:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,319:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,319:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,320:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,320:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,320:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,320:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,321:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,321:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,321:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,321:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,321:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,321:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,321:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,321:INFO:Engine successfully changes for model 'huber_cds_dt' to 'sklearn'.
2023-02-02 19:56:19,324:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,326:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,328:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,329:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,329:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,330:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,330:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,330:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,331:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,331:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,331:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,331:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,331:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,332:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,332:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,332:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,335:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,336:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,338:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,340:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,340:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,340:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,340:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,341:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,341:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,341:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,341:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,341:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,342:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,342:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,342:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,342:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,342:INFO:Engine successfully changes for model 'par_cds_dt' to 'sklearn'.
2023-02-02 19:56:19,345:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,349:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,351:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,351:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,351:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,351:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,352:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,352:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,352:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,352:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,352:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,353:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,353:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,353:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,353:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,356:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,359:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,361:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,361:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,361:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,362:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,362:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,362:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,363:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,363:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,363:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,363:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,363:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,363:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,363:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,363:INFO:Engine successfully changes for model 'omp_cds_dt' to 'sklearn'.
2023-02-02 19:56:19,367:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,372:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,372:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,373:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,373:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,373:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,374:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,374:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,374:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,374:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,374:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,374:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,375:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,375:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,378:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,383:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,383:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,384:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,384:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,384:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,384:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,385:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,385:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,385:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,385:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,385:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,385:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,385:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,386:INFO:Engine successfully changes for model 'knn_cds_dt' to 'sklearn'.
2023-02-02 19:56:19,389:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,393:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,394:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,394:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,394:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,395:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,395:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,395:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,395:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,395:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,395:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,395:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,395:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,399:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,404:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,404:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,404:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,404:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,405:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,405:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,405:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,405:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,405:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,406:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,406:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,406:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,406:INFO:Engine successfully changes for model 'dt_cds_dt' to 'sklearn'.
2023-02-02 19:56:19,409:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,414:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,414:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,415:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,415:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,415:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,415:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,415:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,416:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,416:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,416:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,416:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,419:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,424:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,424:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,425:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,425:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,425:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,425:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,425:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,425:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,426:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,426:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,426:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,426:INFO:Engine successfully changes for model 'rf_cds_dt' to 'sklearn'.
2023-02-02 19:56:19,429:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,435:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,435:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,435:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,436:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,436:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,436:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,436:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,436:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,436:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,436:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,439:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,445:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,445:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,445:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,445:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,445:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,446:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,446:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,446:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,446:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,446:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,446:INFO:Engine successfully changes for model 'et_cds_dt' to 'sklearn'.
2023-02-02 19:56:19,449:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,455:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,455:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,455:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,456:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,456:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,456:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,456:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,456:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,456:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,459:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,465:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,465:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,465:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,466:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,466:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,466:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,466:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,466:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,466:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,466:INFO:Engine successfully changes for model 'gbr_cds_dt' to 'sklearn'.
2023-02-02 19:56:19,469:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,475:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,475:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,475:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,475:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,475:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,476:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,476:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,476:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,479:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,485:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,486:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,486:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,486:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,486:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,486:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,486:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,486:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,486:INFO:Engine successfully changes for model 'ada_cds_dt' to 'sklearn'.
2023-02-02 19:56:19,489:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,497:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,497:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,497:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,497:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,497:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,497:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,497:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,500:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,506:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,507:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,507:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,507:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,507:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,507:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,507:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,507:INFO:Engine successfully changes for model 'xgboost_cds_dt' to 'sklearn'.
2023-02-02 19:56:19,510:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,516:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,516:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,516:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,517:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,517:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,517:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,520:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,526:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,526:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,526:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,526:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,526:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,526:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,527:INFO:Engine successfully changes for model 'lightgbm_cds_dt' to 'sklearn'.
2023-02-02 19:56:19,529:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,536:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,536:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,536:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,536:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,536:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,539:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,545:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,545:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,546:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 19:56:19,546:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,546:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,546:INFO:Engine successfully changes for model 'catboost_cds_dt' to 'sklearn'.
2023-02-02 19:56:19,549:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,555:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,555:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,555:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,555:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,558:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,564:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,564:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,565:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,565:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,568:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,574:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,574:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,574:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,574:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,578:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:19,584:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,584:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,584:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,585:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 19:56:19,585:INFO:setup() successfully completed in 0.55s...............
2023-02-02 19:56:19,609:INFO:Initializing compare_models()
2023-02-02 19:56:19,609:INFO:compare_models(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, include=None, fold=None, round=4, cross_validation=True, sort=MASE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MASE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.time_series.forecasting.oop.TSForecastingExperiment'>}, exclude=None)
2023-02-02 19:56:19,610:INFO:Checking exceptions
2023-02-02 19:56:19,612:INFO:Preparing display monitor
2023-02-02 19:56:19,644:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:709: UserWarning:

Unsupported estimator `ensemble_forecaster` for method `compare_models()`, removing from model_library


2023-02-02 19:56:19,644:INFO:Initializing Naive Forecaster
2023-02-02 19:56:19,645:INFO:Total runtime is 1.6673405965169272e-05 minutes
2023-02-02 19:56:19,649:INFO:SubProcess create_model() called ==================================
2023-02-02 19:56:19,650:INFO:Initializing create_model()
2023-02-02 19:56:19,650:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=naive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:56:19,650:INFO:Checking exceptions
2023-02-02 19:56:19,650:INFO:Importing libraries
2023-02-02 19:56:19,650:INFO:Copying training dataset
2023-02-02 19:56:19,654:INFO:Defining folds
2023-02-02 19:56:19,655:INFO:Declaring metric variables
2023-02-02 19:56:19,659:INFO:Importing untrained model
2023-02-02 19:56:19,663:INFO:Naive Forecaster Imported successfully
2023-02-02 19:56:19,673:INFO:Starting cross validation
2023-02-02 19:56:19,674:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:56:24,897:INFO:Calculating mean and std
2023-02-02 19:56:24,898:INFO:Creating metrics dataframe
2023-02-02 19:56:24,902:INFO:Uploading results into container
2023-02-02 19:56:24,903:INFO:Uploading model into container now
2023-02-02 19:56:24,904:INFO:_master_model_container: 1
2023-02-02 19:56:24,904:INFO:_display_container: 2
2023-02-02 19:56:24,905:INFO:NaiveForecaster()
2023-02-02 19:56:24,905:INFO:create_model() successfully completed......................................
2023-02-02 19:56:25,113:INFO:SubProcess create_model() end ==================================
2023-02-02 19:56:25,113:INFO:Creating metrics dataframe
2023-02-02 19:56:25,122:INFO:Initializing Grand Means Forecaster
2023-02-02 19:56:25,122:INFO:Total runtime is 0.09130603869756063 minutes
2023-02-02 19:56:25,126:INFO:SubProcess create_model() called ==================================
2023-02-02 19:56:25,126:INFO:Initializing create_model()
2023-02-02 19:56:25,127:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=grand_means, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:56:25,127:INFO:Checking exceptions
2023-02-02 19:56:25,127:INFO:Importing libraries
2023-02-02 19:56:25,127:INFO:Copying training dataset
2023-02-02 19:56:25,132:INFO:Defining folds
2023-02-02 19:56:25,132:INFO:Declaring metric variables
2023-02-02 19:56:25,138:INFO:Importing untrained model
2023-02-02 19:56:25,143:INFO:Grand Means Forecaster Imported successfully
2023-02-02 19:56:25,153:INFO:Starting cross validation
2023-02-02 19:56:25,154:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:56:27,874:INFO:Calculating mean and std
2023-02-02 19:56:27,876:INFO:Creating metrics dataframe
2023-02-02 19:56:27,881:INFO:Uploading results into container
2023-02-02 19:56:27,882:INFO:Uploading model into container now
2023-02-02 19:56:27,883:INFO:_master_model_container: 2
2023-02-02 19:56:27,883:INFO:_display_container: 2
2023-02-02 19:56:27,883:INFO:NaiveForecaster(strategy='mean')
2023-02-02 19:56:27,884:INFO:create_model() successfully completed......................................
2023-02-02 19:56:28,093:INFO:SubProcess create_model() end ==================================
2023-02-02 19:56:28,093:INFO:Creating metrics dataframe
2023-02-02 19:56:28,105:INFO:Initializing Seasonal Naive Forecaster
2023-02-02 19:56:28,105:INFO:Total runtime is 0.14100884199142455 minutes
2023-02-02 19:56:28,110:INFO:SubProcess create_model() called ==================================
2023-02-02 19:56:28,110:INFO:Initializing create_model()
2023-02-02 19:56:28,110:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=snaive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:56:28,110:INFO:Checking exceptions
2023-02-02 19:56:28,110:INFO:Importing libraries
2023-02-02 19:56:28,110:INFO:Copying training dataset
2023-02-02 19:56:28,116:INFO:Defining folds
2023-02-02 19:56:28,116:INFO:Declaring metric variables
2023-02-02 19:56:28,120:INFO:Importing untrained model
2023-02-02 19:56:28,125:INFO:Seasonal Naive Forecaster Imported successfully
2023-02-02 19:56:28,135:INFO:Starting cross validation
2023-02-02 19:56:28,136:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:56:30,698:INFO:Calculating mean and std
2023-02-02 19:56:30,700:INFO:Creating metrics dataframe
2023-02-02 19:56:30,705:INFO:Uploading results into container
2023-02-02 19:56:30,706:INFO:Uploading model into container now
2023-02-02 19:56:30,706:INFO:_master_model_container: 3
2023-02-02 19:56:30,706:INFO:_display_container: 2
2023-02-02 19:56:30,706:INFO:NaiveForecaster(sp=7)
2023-02-02 19:56:30,707:INFO:create_model() successfully completed......................................
2023-02-02 19:56:30,910:INFO:SubProcess create_model() end ==================================
2023-02-02 19:56:30,911:INFO:Creating metrics dataframe
2023-02-02 19:56:30,923:INFO:Initializing Polynomial Trend Forecaster
2023-02-02 19:56:30,923:INFO:Total runtime is 0.187986155351003 minutes
2023-02-02 19:56:30,927:INFO:SubProcess create_model() called ==================================
2023-02-02 19:56:30,927:INFO:Initializing create_model()
2023-02-02 19:56:30,927:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=polytrend, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:56:30,927:INFO:Checking exceptions
2023-02-02 19:56:30,928:INFO:Importing libraries
2023-02-02 19:56:30,928:INFO:Copying training dataset
2023-02-02 19:56:30,932:INFO:Defining folds
2023-02-02 19:56:30,933:INFO:Declaring metric variables
2023-02-02 19:56:30,937:INFO:Importing untrained model
2023-02-02 19:56:30,941:INFO:Polynomial Trend Forecaster Imported successfully
2023-02-02 19:56:30,949:INFO:Starting cross validation
2023-02-02 19:56:30,950:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:56:33,507:INFO:Calculating mean and std
2023-02-02 19:56:33,508:INFO:Creating metrics dataframe
2023-02-02 19:56:33,513:INFO:Uploading results into container
2023-02-02 19:56:33,513:INFO:Uploading model into container now
2023-02-02 19:56:33,514:INFO:_master_model_container: 4
2023-02-02 19:56:33,514:INFO:_display_container: 2
2023-02-02 19:56:33,515:INFO:PolynomialTrendForecaster()
2023-02-02 19:56:33,515:INFO:create_model() successfully completed......................................
2023-02-02 19:56:33,718:INFO:SubProcess create_model() end ==================================
2023-02-02 19:56:33,718:INFO:Creating metrics dataframe
2023-02-02 19:56:33,730:INFO:Initializing ARIMA
2023-02-02 19:56:33,730:INFO:Total runtime is 0.2347580591837565 minutes
2023-02-02 19:56:33,734:INFO:SubProcess create_model() called ==================================
2023-02-02 19:56:33,734:INFO:Initializing create_model()
2023-02-02 19:56:33,734:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:56:33,734:INFO:Checking exceptions
2023-02-02 19:56:33,735:INFO:Importing libraries
2023-02-02 19:56:33,735:INFO:Copying training dataset
2023-02-02 19:56:33,740:INFO:Defining folds
2023-02-02 19:56:33,740:INFO:Declaring metric variables
2023-02-02 19:56:33,745:INFO:Importing untrained model
2023-02-02 19:56:33,750:INFO:ARIMA Imported successfully
2023-02-02 19:56:33,758:INFO:Starting cross validation
2023-02-02 19:56:33,759:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:56:36,398:INFO:Calculating mean and std
2023-02-02 19:56:36,399:INFO:Creating metrics dataframe
2023-02-02 19:56:36,404:INFO:Uploading results into container
2023-02-02 19:56:36,404:INFO:Uploading model into container now
2023-02-02 19:56:36,405:INFO:_master_model_container: 5
2023-02-02 19:56:36,405:INFO:_display_container: 2
2023-02-02 19:56:36,405:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:56:36,405:INFO:create_model() successfully completed......................................
2023-02-02 19:56:36,609:INFO:SubProcess create_model() end ==================================
2023-02-02 19:56:36,609:INFO:Creating metrics dataframe
2023-02-02 19:56:36,623:INFO:Initializing Auto ARIMA
2023-02-02 19:56:36,623:INFO:Total runtime is 0.28297765254974366 minutes
2023-02-02 19:56:36,627:INFO:SubProcess create_model() called ==================================
2023-02-02 19:56:36,627:INFO:Initializing create_model()
2023-02-02 19:56:36,628:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=auto_arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:56:36,628:INFO:Checking exceptions
2023-02-02 19:56:36,628:INFO:Importing libraries
2023-02-02 19:56:36,628:INFO:Copying training dataset
2023-02-02 19:56:36,633:INFO:Defining folds
2023-02-02 19:56:36,633:INFO:Declaring metric variables
2023-02-02 19:56:36,638:INFO:Importing untrained model
2023-02-02 19:56:36,643:INFO:Auto ARIMA Imported successfully
2023-02-02 19:56:36,652:INFO:Starting cross validation
2023-02-02 19:56:36,653:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:56:42,494:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pmdarima\arima\_auto_solvers.py:522: ModelFitWarning: Error fitting  ARIMA(2,0,1)(2,1,0)[7] intercept (if you do not want to see these warnings, run with error_action="ignore").
  warnings.warn(warning_str, ModelFitWarning)

2023-02-02 19:56:44,313:INFO:Calculating mean and std
2023-02-02 19:56:44,314:INFO:Creating metrics dataframe
2023-02-02 19:56:44,319:INFO:Uploading results into container
2023-02-02 19:56:44,319:INFO:Uploading model into container now
2023-02-02 19:56:44,320:INFO:_master_model_container: 6
2023-02-02 19:56:44,320:INFO:_display_container: 2
2023-02-02 19:56:44,321:INFO:AutoARIMA(random_state=6200, sp=7, suppress_warnings=True)
2023-02-02 19:56:44,321:INFO:create_model() successfully completed......................................
2023-02-02 19:56:44,528:INFO:SubProcess create_model() end ==================================
2023-02-02 19:56:44,528:INFO:Creating metrics dataframe
2023-02-02 19:56:44,542:INFO:Initializing Exponential Smoothing
2023-02-02 19:56:44,542:INFO:Total runtime is 0.4149574319521586 minutes
2023-02-02 19:56:44,546:INFO:SubProcess create_model() called ==================================
2023-02-02 19:56:44,547:INFO:Initializing create_model()
2023-02-02 19:56:44,547:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=exp_smooth, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:56:44,547:INFO:Checking exceptions
2023-02-02 19:56:44,547:INFO:Importing libraries
2023-02-02 19:56:44,547:INFO:Copying training dataset
2023-02-02 19:56:44,552:INFO:Defining folds
2023-02-02 19:56:44,552:INFO:Declaring metric variables
2023-02-02 19:56:44,557:INFO:Importing untrained model
2023-02-02 19:56:44,562:INFO:Exponential Smoothing Imported successfully
2023-02-02 19:56:44,570:INFO:Starting cross validation
2023-02-02 19:56:44,571:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:56:47,320:INFO:Calculating mean and std
2023-02-02 19:56:47,322:INFO:Creating metrics dataframe
2023-02-02 19:56:47,328:INFO:Uploading results into container
2023-02-02 19:56:47,328:INFO:Uploading model into container now
2023-02-02 19:56:47,328:INFO:_master_model_container: 7
2023-02-02 19:56:47,329:INFO:_display_container: 2
2023-02-02 19:56:47,329:INFO:ExponentialSmoothing(seasonal='mul', sp=7, trend='add')
2023-02-02 19:56:47,329:INFO:create_model() successfully completed......................................
2023-02-02 19:56:47,534:INFO:SubProcess create_model() end ==================================
2023-02-02 19:56:47,534:INFO:Creating metrics dataframe
2023-02-02 19:56:47,547:INFO:Initializing Croston
2023-02-02 19:56:47,547:INFO:Total runtime is 0.46505271991093955 minutes
2023-02-02 19:56:47,551:INFO:SubProcess create_model() called ==================================
2023-02-02 19:56:47,551:INFO:Initializing create_model()
2023-02-02 19:56:47,551:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=croston, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:56:47,552:INFO:Checking exceptions
2023-02-02 19:56:47,552:INFO:Importing libraries
2023-02-02 19:56:47,552:INFO:Copying training dataset
2023-02-02 19:56:47,557:INFO:Defining folds
2023-02-02 19:56:47,557:INFO:Declaring metric variables
2023-02-02 19:56:47,561:INFO:Importing untrained model
2023-02-02 19:56:47,566:INFO:Croston Imported successfully
2023-02-02 19:56:47,574:INFO:Starting cross validation
2023-02-02 19:56:47,575:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:56:50,229:INFO:Calculating mean and std
2023-02-02 19:56:50,230:INFO:Creating metrics dataframe
2023-02-02 19:56:50,235:INFO:Uploading results into container
2023-02-02 19:56:50,235:INFO:Uploading model into container now
2023-02-02 19:56:50,236:INFO:_master_model_container: 8
2023-02-02 19:56:50,236:INFO:_display_container: 2
2023-02-02 19:56:50,237:INFO:Croston()
2023-02-02 19:56:50,237:INFO:create_model() successfully completed......................................
2023-02-02 19:56:50,440:INFO:SubProcess create_model() end ==================================
2023-02-02 19:56:50,440:INFO:Creating metrics dataframe
2023-02-02 19:56:50,454:INFO:Initializing ETS
2023-02-02 19:56:50,454:INFO:Total runtime is 0.5134939908981323 minutes
2023-02-02 19:56:50,458:INFO:SubProcess create_model() called ==================================
2023-02-02 19:56:50,458:INFO:Initializing create_model()
2023-02-02 19:56:50,458:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ets, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:56:50,458:INFO:Checking exceptions
2023-02-02 19:56:50,458:INFO:Importing libraries
2023-02-02 19:56:50,459:INFO:Copying training dataset
2023-02-02 19:56:50,464:INFO:Defining folds
2023-02-02 19:56:50,464:INFO:Declaring metric variables
2023-02-02 19:56:50,469:INFO:Importing untrained model
2023-02-02 19:56:50,473:INFO:ETS Imported successfully
2023-02-02 19:56:50,481:INFO:Starting cross validation
2023-02-02 19:56:50,483:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:56:50,613:INFO:Calculating mean and std
2023-02-02 19:56:50,614:INFO:Creating metrics dataframe
2023-02-02 19:56:50,618:INFO:Uploading results into container
2023-02-02 19:56:50,618:INFO:Uploading model into container now
2023-02-02 19:56:50,619:INFO:_master_model_container: 9
2023-02-02 19:56:50,619:INFO:_display_container: 2
2023-02-02 19:56:50,619:INFO:AutoETS(seasonal='mul', sp=7, trend='add')
2023-02-02 19:56:50,619:INFO:create_model() successfully completed......................................
2023-02-02 19:56:50,813:INFO:SubProcess create_model() end ==================================
2023-02-02 19:56:50,813:INFO:Creating metrics dataframe
2023-02-02 19:56:50,828:INFO:Initializing Theta Forecaster
2023-02-02 19:56:50,828:INFO:Total runtime is 0.5197240471839905 minutes
2023-02-02 19:56:50,832:INFO:SubProcess create_model() called ==================================
2023-02-02 19:56:50,832:INFO:Initializing create_model()
2023-02-02 19:56:50,832:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=theta, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:56:50,832:INFO:Checking exceptions
2023-02-02 19:56:50,832:INFO:Importing libraries
2023-02-02 19:56:50,832:INFO:Copying training dataset
2023-02-02 19:56:50,838:INFO:Defining folds
2023-02-02 19:56:50,838:INFO:Declaring metric variables
2023-02-02 19:56:50,842:INFO:Importing untrained model
2023-02-02 19:56:50,846:INFO:Theta Forecaster Imported successfully
2023-02-02 19:56:50,853:INFO:Starting cross validation
2023-02-02 19:56:50,854:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:56:50,923:INFO:Calculating mean and std
2023-02-02 19:56:50,924:INFO:Creating metrics dataframe
2023-02-02 19:56:50,928:INFO:Uploading results into container
2023-02-02 19:56:50,928:INFO:Uploading model into container now
2023-02-02 19:56:50,928:INFO:_master_model_container: 10
2023-02-02 19:56:50,929:INFO:_display_container: 2
2023-02-02 19:56:50,929:INFO:ThetaForecaster(sp=7)
2023-02-02 19:56:50,929:INFO:create_model() successfully completed......................................
2023-02-02 19:56:51,127:INFO:SubProcess create_model() end ==================================
2023-02-02 19:56:51,128:INFO:Creating metrics dataframe
2023-02-02 19:56:51,142:INFO:Initializing Linear w/ Cond. Deseasonalize & Detrending
2023-02-02 19:56:51,142:INFO:Total runtime is 0.5249632517496745 minutes
2023-02-02 19:56:51,146:INFO:SubProcess create_model() called ==================================
2023-02-02 19:56:51,146:INFO:Initializing create_model()
2023-02-02 19:56:51,146:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=lr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:56:51,146:INFO:Checking exceptions
2023-02-02 19:56:51,146:INFO:Importing libraries
2023-02-02 19:56:51,147:INFO:Copying training dataset
2023-02-02 19:56:51,152:INFO:Defining folds
2023-02-02 19:56:51,152:INFO:Declaring metric variables
2023-02-02 19:56:51,157:INFO:Importing untrained model
2023-02-02 19:56:51,161:INFO:Linear w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:56:51,169:INFO:Starting cross validation
2023-02-02 19:56:51,170:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:56:51,488:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:51,488:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:51,488:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:51,488:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:51,575:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:51,818:INFO:Calculating mean and std
2023-02-02 19:56:51,819:INFO:Creating metrics dataframe
2023-02-02 19:56:51,823:INFO:Uploading results into container
2023-02-02 19:56:51,823:INFO:Uploading model into container now
2023-02-02 19:56:51,824:INFO:_master_model_container: 11
2023-02-02 19:56:51,824:INFO:_display_container: 2
2023-02-02 19:56:51,826:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LinearRegression(n_jobs=-1), sp=7,
                    window_length=7)
2023-02-02 19:56:51,826:INFO:create_model() successfully completed......................................
2023-02-02 19:56:52,029:INFO:SubProcess create_model() end ==================================
2023-02-02 19:56:52,030:INFO:Creating metrics dataframe
2023-02-02 19:56:52,045:INFO:Initializing Elastic Net w/ Cond. Deseasonalize & Detrending
2023-02-02 19:56:52,045:INFO:Total runtime is 0.5400224924087524 minutes
2023-02-02 19:56:52,049:INFO:SubProcess create_model() called ==================================
2023-02-02 19:56:52,050:INFO:Initializing create_model()
2023-02-02 19:56:52,050:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=en_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:56:52,050:INFO:Checking exceptions
2023-02-02 19:56:52,050:INFO:Importing libraries
2023-02-02 19:56:52,050:INFO:Copying training dataset
2023-02-02 19:56:52,055:INFO:Defining folds
2023-02-02 19:56:52,056:INFO:Declaring metric variables
2023-02-02 19:56:52,061:INFO:Importing untrained model
2023-02-02 19:56:52,066:INFO:Elastic Net w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:56:52,074:INFO:Starting cross validation
2023-02-02 19:56:52,075:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:56:52,358:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:52,358:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:52,358:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:52,358:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:52,427:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:52,665:INFO:Calculating mean and std
2023-02-02 19:56:52,666:INFO:Creating metrics dataframe
2023-02-02 19:56:52,672:INFO:Uploading results into container
2023-02-02 19:56:52,672:INFO:Uploading model into container now
2023-02-02 19:56:52,673:INFO:_master_model_container: 12
2023-02-02 19:56:52,673:INFO:_display_container: 2
2023-02-02 19:56:52,676:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=ElasticNet(random_state=6200), sp=7,
                    window_length=7)
2023-02-02 19:56:52,676:INFO:create_model() successfully completed......................................
2023-02-02 19:56:52,878:INFO:SubProcess create_model() end ==================================
2023-02-02 19:56:52,878:INFO:Creating metrics dataframe
2023-02-02 19:56:52,893:INFO:Initializing Ridge w/ Cond. Deseasonalize & Detrending
2023-02-02 19:56:52,893:INFO:Total runtime is 0.5541471203168233 minutes
2023-02-02 19:56:52,897:INFO:SubProcess create_model() called ==================================
2023-02-02 19:56:52,897:INFO:Initializing create_model()
2023-02-02 19:56:52,897:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ridge_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:56:52,897:INFO:Checking exceptions
2023-02-02 19:56:52,898:INFO:Importing libraries
2023-02-02 19:56:52,898:INFO:Copying training dataset
2023-02-02 19:56:52,903:INFO:Defining folds
2023-02-02 19:56:52,903:INFO:Declaring metric variables
2023-02-02 19:56:52,908:INFO:Importing untrained model
2023-02-02 19:56:52,912:INFO:Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:56:52,921:INFO:Starting cross validation
2023-02-02 19:56:52,922:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:56:53,218:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:53,218:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:53,218:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:53,218:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:53,285:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:53,517:INFO:Calculating mean and std
2023-02-02 19:56:53,519:INFO:Creating metrics dataframe
2023-02-02 19:56:53,523:INFO:Uploading results into container
2023-02-02 19:56:53,523:INFO:Uploading model into container now
2023-02-02 19:56:53,524:INFO:_master_model_container: 13
2023-02-02 19:56:53,524:INFO:_display_container: 2
2023-02-02 19:56:53,526:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Ridge(random_state=6200), sp=7, window_length=7)
2023-02-02 19:56:53,526:INFO:create_model() successfully completed......................................
2023-02-02 19:56:53,720:INFO:SubProcess create_model() end ==================================
2023-02-02 19:56:53,720:INFO:Creating metrics dataframe
2023-02-02 19:56:53,737:INFO:Initializing Lasso w/ Cond. Deseasonalize & Detrending
2023-02-02 19:56:53,738:INFO:Total runtime is 0.5682382901509603 minutes
2023-02-02 19:56:53,742:INFO:SubProcess create_model() called ==================================
2023-02-02 19:56:53,742:INFO:Initializing create_model()
2023-02-02 19:56:53,742:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=lasso_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:56:53,742:INFO:Checking exceptions
2023-02-02 19:56:53,742:INFO:Importing libraries
2023-02-02 19:56:53,742:INFO:Copying training dataset
2023-02-02 19:56:53,747:INFO:Defining folds
2023-02-02 19:56:53,748:INFO:Declaring metric variables
2023-02-02 19:56:53,752:INFO:Importing untrained model
2023-02-02 19:56:53,757:INFO:Lasso w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:56:53,766:INFO:Starting cross validation
2023-02-02 19:56:53,767:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:56:54,050:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:54,051:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:54,051:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:54,051:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:54,120:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:54,365:INFO:Calculating mean and std
2023-02-02 19:56:54,367:INFO:Creating metrics dataframe
2023-02-02 19:56:54,371:INFO:Uploading results into container
2023-02-02 19:56:54,371:INFO:Uploading model into container now
2023-02-02 19:56:54,372:INFO:_master_model_container: 14
2023-02-02 19:56:54,372:INFO:_display_container: 2
2023-02-02 19:56:54,374:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Lasso(random_state=6200), sp=7, window_length=7)
2023-02-02 19:56:54,374:INFO:create_model() successfully completed......................................
2023-02-02 19:56:54,583:INFO:SubProcess create_model() end ==================================
2023-02-02 19:56:54,584:INFO:Creating metrics dataframe
2023-02-02 19:56:54,601:INFO:Initializing Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-02-02 19:56:54,601:INFO:Total runtime is 0.5826079646746317 minutes
2023-02-02 19:56:54,605:INFO:SubProcess create_model() called ==================================
2023-02-02 19:56:54,605:INFO:Initializing create_model()
2023-02-02 19:56:54,606:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=lar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:56:54,606:INFO:Checking exceptions
2023-02-02 19:56:54,606:INFO:Importing libraries
2023-02-02 19:56:54,606:INFO:Copying training dataset
2023-02-02 19:56:54,612:INFO:Defining folds
2023-02-02 19:56:54,612:INFO:Declaring metric variables
2023-02-02 19:56:54,617:INFO:Importing untrained model
2023-02-02 19:56:54,628:INFO:Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:56:54,643:INFO:Starting cross validation
2023-02-02 19:56:54,644:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:56:54,942:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:54,942:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:54,942:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:54,942:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:55,013:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:55,090:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:56:55,251:INFO:Calculating mean and std
2023-02-02 19:56:55,253:INFO:Creating metrics dataframe
2023-02-02 19:56:55,256:INFO:Uploading results into container
2023-02-02 19:56:55,257:INFO:Uploading model into container now
2023-02-02 19:56:55,257:INFO:_master_model_container: 15
2023-02-02 19:56:55,257:INFO:_display_container: 2
2023-02-02 19:56:55,261:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Lars(random_state=6200), sp=7, window_length=7)
2023-02-02 19:56:55,262:INFO:create_model() successfully completed......................................
2023-02-02 19:56:55,459:INFO:SubProcess create_model() end ==================================
2023-02-02 19:56:55,459:INFO:Creating metrics dataframe
2023-02-02 19:56:55,475:INFO:Initializing Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-02-02 19:56:55,475:INFO:Total runtime is 0.5971858819325765 minutes
2023-02-02 19:56:55,479:INFO:SubProcess create_model() called ==================================
2023-02-02 19:56:55,480:INFO:Initializing create_model()
2023-02-02 19:56:55,480:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=llar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:56:55,480:INFO:Checking exceptions
2023-02-02 19:56:55,480:INFO:Importing libraries
2023-02-02 19:56:55,480:INFO:Copying training dataset
2023-02-02 19:56:55,485:INFO:Defining folds
2023-02-02 19:56:55,486:INFO:Declaring metric variables
2023-02-02 19:56:55,490:INFO:Importing untrained model
2023-02-02 19:56:55,496:INFO:Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:56:55,506:INFO:Starting cross validation
2023-02-02 19:56:55,507:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:56:55,793:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:55,793:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:55,793:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:55,793:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:55,864:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:55,938:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 19:56:56,083:INFO:Calculating mean and std
2023-02-02 19:56:56,084:INFO:Creating metrics dataframe
2023-02-02 19:56:56,088:INFO:Uploading results into container
2023-02-02 19:56:56,088:INFO:Uploading model into container now
2023-02-02 19:56:56,088:INFO:_master_model_container: 16
2023-02-02 19:56:56,088:INFO:_display_container: 2
2023-02-02 19:56:56,091:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LassoLars(random_state=6200), sp=7,
                    window_length=7)
2023-02-02 19:56:56,091:INFO:create_model() successfully completed......................................
2023-02-02 19:56:56,290:INFO:SubProcess create_model() end ==================================
2023-02-02 19:56:56,290:INFO:Creating metrics dataframe
2023-02-02 19:56:56,310:INFO:Initializing Bayesian Ridge w/ Cond. Deseasonalize & Detrending
2023-02-02 19:56:56,310:INFO:Total runtime is 0.6110932072003682 minutes
2023-02-02 19:56:56,315:INFO:SubProcess create_model() called ==================================
2023-02-02 19:56:56,315:INFO:Initializing create_model()
2023-02-02 19:56:56,315:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=br_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:56:56,315:INFO:Checking exceptions
2023-02-02 19:56:56,316:INFO:Importing libraries
2023-02-02 19:56:56,316:INFO:Copying training dataset
2023-02-02 19:56:56,321:INFO:Defining folds
2023-02-02 19:56:56,321:INFO:Declaring metric variables
2023-02-02 19:56:56,325:INFO:Importing untrained model
2023-02-02 19:56:56,331:INFO:Bayesian Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:56:56,342:INFO:Starting cross validation
2023-02-02 19:56:56,343:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:56:56,627:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:56,627:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:56,627:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:56,627:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:56,698:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:56,931:INFO:Calculating mean and std
2023-02-02 19:56:56,933:INFO:Creating metrics dataframe
2023-02-02 19:56:56,938:INFO:Uploading results into container
2023-02-02 19:56:56,938:INFO:Uploading model into container now
2023-02-02 19:56:56,939:INFO:_master_model_container: 17
2023-02-02 19:56:56,939:INFO:_display_container: 2
2023-02-02 19:56:56,941:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=BayesianRidge(), sp=7, window_length=7)
2023-02-02 19:56:56,941:INFO:create_model() successfully completed......................................
2023-02-02 19:56:57,142:INFO:SubProcess create_model() end ==================================
2023-02-02 19:56:57,142:INFO:Creating metrics dataframe
2023-02-02 19:56:57,160:INFO:Initializing Huber w/ Cond. Deseasonalize & Detrending
2023-02-02 19:56:57,161:INFO:Total runtime is 0.625284461180369 minutes
2023-02-02 19:56:57,164:INFO:SubProcess create_model() called ==================================
2023-02-02 19:56:57,165:INFO:Initializing create_model()
2023-02-02 19:56:57,165:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=huber_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:56:57,165:INFO:Checking exceptions
2023-02-02 19:56:57,165:INFO:Importing libraries
2023-02-02 19:56:57,165:INFO:Copying training dataset
2023-02-02 19:56:57,171:INFO:Defining folds
2023-02-02 19:56:57,171:INFO:Declaring metric variables
2023-02-02 19:56:57,178:INFO:Importing untrained model
2023-02-02 19:56:57,185:INFO:Huber w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:56:57,196:INFO:Starting cross validation
2023-02-02 19:56:57,197:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:56:57,480:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:57,480:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:57,480:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:57,480:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 19:56:57,542:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 19:56:57,651:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-02-02 19:56:57,795:INFO:Calculating mean and std
2023-02-02 19:56:57,796:INFO:Creating metrics dataframe
2023-02-02 19:56:57,800:INFO:Uploading results into container
2023-02-02 19:56:57,800:INFO:Uploading model into container now
2023-02-02 19:56:57,800:INFO:_master_model_container: 18
2023-02-02 19:56:57,800:INFO:_display_container: 2
2023-02-02 19:56:57,802:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=HuberRegressor(), sp=7, window_length=7)
2023-02-02 19:56:57,803:INFO:create_model() successfully completed......................................
2023-02-02 19:56:57,999:INFO:SubProcess create_model() end ==================================
2023-02-02 19:56:57,999:INFO:Creating metrics dataframe
2023-02-02 19:56:58,018:INFO:Initializing Passive Aggressive w/ Cond. Deseasonalize & Detrending
2023-02-02 19:56:58,018:INFO:Total runtime is 0.6395660837491353 minutes
2023-02-02 19:56:58,023:INFO:SubProcess create_model() called ==================================
2023-02-02 19:56:58,024:INFO:Initializing create_model()
2023-02-02 19:56:58,024:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=par_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:56:58,024:INFO:Checking exceptions
2023-02-02 19:56:58,024:INFO:Importing libraries
2023-02-02 19:56:58,024:INFO:Copying training dataset
2023-02-02 19:56:58,029:INFO:Defining folds
2023-02-02 19:56:58,030:INFO:Declaring metric variables
2023-02-02 19:56:58,034:INFO:Importing untrained model
2023-02-02 19:56:58,040:INFO:Passive Aggressive w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:56:58,049:INFO:Starting cross validation
2023-02-02 19:56:58,050:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:56:58,273:INFO:Calculating mean and std
2023-02-02 19:56:58,274:INFO:Creating metrics dataframe
2023-02-02 19:56:58,278:INFO:Uploading results into container
2023-02-02 19:56:58,278:INFO:Uploading model into container now
2023-02-02 19:56:58,279:INFO:_master_model_container: 19
2023-02-02 19:56:58,279:INFO:_display_container: 2
2023-02-02 19:56:58,281:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=PassiveAggressiveRegressor(random_state=6200),
                    sp=7, window_length=7)
2023-02-02 19:56:58,281:INFO:create_model() successfully completed......................................
2023-02-02 19:56:58,477:INFO:SubProcess create_model() end ==================================
2023-02-02 19:56:58,477:INFO:Creating metrics dataframe
2023-02-02 19:56:58,496:INFO:Initializing Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending
2023-02-02 19:56:58,496:INFO:Total runtime is 0.6475278457005818 minutes
2023-02-02 19:56:58,500:INFO:SubProcess create_model() called ==================================
2023-02-02 19:56:58,501:INFO:Initializing create_model()
2023-02-02 19:56:58,501:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=omp_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:56:58,501:INFO:Checking exceptions
2023-02-02 19:56:58,501:INFO:Importing libraries
2023-02-02 19:56:58,501:INFO:Copying training dataset
2023-02-02 19:56:58,506:INFO:Defining folds
2023-02-02 19:56:58,506:INFO:Declaring metric variables
2023-02-02 19:56:58,512:INFO:Importing untrained model
2023-02-02 19:56:58,517:INFO:Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:56:58,526:INFO:Starting cross validation
2023-02-02 19:56:58,528:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:56:58,609:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 19:56:58,765:INFO:Calculating mean and std
2023-02-02 19:56:58,767:INFO:Creating metrics dataframe
2023-02-02 19:56:58,771:INFO:Uploading results into container
2023-02-02 19:56:58,771:INFO:Uploading model into container now
2023-02-02 19:56:58,771:INFO:_master_model_container: 20
2023-02-02 19:56:58,771:INFO:_display_container: 2
2023-02-02 19:56:58,773:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=OrthogonalMatchingPursuit(), sp=7,
                    window_length=7)
2023-02-02 19:56:58,773:INFO:create_model() successfully completed......................................
2023-02-02 19:56:58,973:INFO:SubProcess create_model() end ==================================
2023-02-02 19:56:58,973:INFO:Creating metrics dataframe
2023-02-02 19:56:58,991:INFO:Initializing K Neighbors w/ Cond. Deseasonalize & Detrending
2023-02-02 19:56:58,991:INFO:Total runtime is 0.6557894190152485 minutes
2023-02-02 19:56:58,996:INFO:SubProcess create_model() called ==================================
2023-02-02 19:56:58,996:INFO:Initializing create_model()
2023-02-02 19:56:58,996:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=knn_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:56:58,996:INFO:Checking exceptions
2023-02-02 19:56:58,996:INFO:Importing libraries
2023-02-02 19:56:58,996:INFO:Copying training dataset
2023-02-02 19:56:59,002:INFO:Defining folds
2023-02-02 19:56:59,002:INFO:Declaring metric variables
2023-02-02 19:56:59,007:INFO:Importing untrained model
2023-02-02 19:56:59,012:INFO:K Neighbors w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:56:59,022:INFO:Starting cross validation
2023-02-02 19:56:59,023:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:56:59,291:INFO:Calculating mean and std
2023-02-02 19:56:59,292:INFO:Creating metrics dataframe
2023-02-02 19:56:59,296:INFO:Uploading results into container
2023-02-02 19:56:59,296:INFO:Uploading model into container now
2023-02-02 19:56:59,296:INFO:_master_model_container: 21
2023-02-02 19:56:59,296:INFO:_display_container: 2
2023-02-02 19:56:59,298:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=KNeighborsRegressor(n_jobs=-1), sp=7,
                    window_length=7)
2023-02-02 19:56:59,299:INFO:create_model() successfully completed......................................
2023-02-02 19:56:59,495:INFO:SubProcess create_model() end ==================================
2023-02-02 19:56:59,495:INFO:Creating metrics dataframe
2023-02-02 19:56:59,517:INFO:Initializing Decision Tree w/ Cond. Deseasonalize & Detrending
2023-02-02 19:56:59,517:INFO:Total runtime is 0.6645418922106423 minutes
2023-02-02 19:56:59,521:INFO:SubProcess create_model() called ==================================
2023-02-02 19:56:59,521:INFO:Initializing create_model()
2023-02-02 19:56:59,521:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=dt_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:56:59,521:INFO:Checking exceptions
2023-02-02 19:56:59,521:INFO:Importing libraries
2023-02-02 19:56:59,521:INFO:Copying training dataset
2023-02-02 19:56:59,527:INFO:Defining folds
2023-02-02 19:56:59,527:INFO:Declaring metric variables
2023-02-02 19:56:59,532:INFO:Importing untrained model
2023-02-02 19:56:59,537:INFO:Decision Tree w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:56:59,546:INFO:Starting cross validation
2023-02-02 19:56:59,548:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:56:59,768:INFO:Calculating mean and std
2023-02-02 19:56:59,769:INFO:Creating metrics dataframe
2023-02-02 19:56:59,773:INFO:Uploading results into container
2023-02-02 19:56:59,773:INFO:Uploading model into container now
2023-02-02 19:56:59,773:INFO:_master_model_container: 22
2023-02-02 19:56:59,774:INFO:_display_container: 2
2023-02-02 19:56:59,776:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=DecisionTreeRegressor(random_state=6200), sp=7,
                    window_length=7)
2023-02-02 19:56:59,776:INFO:create_model() successfully completed......................................
2023-02-02 19:56:59,972:INFO:SubProcess create_model() end ==================================
2023-02-02 19:56:59,973:INFO:Creating metrics dataframe
2023-02-02 19:56:59,992:INFO:Initializing Random Forest w/ Cond. Deseasonalize & Detrending
2023-02-02 19:56:59,992:INFO:Total runtime is 0.6724700172742206 minutes
2023-02-02 19:56:59,997:INFO:SubProcess create_model() called ==================================
2023-02-02 19:56:59,997:INFO:Initializing create_model()
2023-02-02 19:56:59,997:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=rf_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:56:59,997:INFO:Checking exceptions
2023-02-02 19:56:59,997:INFO:Importing libraries
2023-02-02 19:56:59,997:INFO:Copying training dataset
2023-02-02 19:57:00,003:INFO:Defining folds
2023-02-02 19:57:00,003:INFO:Declaring metric variables
2023-02-02 19:57:00,009:INFO:Importing untrained model
2023-02-02 19:57:00,018:INFO:Random Forest w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:57:00,032:INFO:Starting cross validation
2023-02-02 19:57:00,033:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:57:00,497:INFO:Calculating mean and std
2023-02-02 19:57:00,499:INFO:Creating metrics dataframe
2023-02-02 19:57:00,503:INFO:Uploading results into container
2023-02-02 19:57:00,503:INFO:Uploading model into container now
2023-02-02 19:57:00,503:INFO:_master_model_container: 23
2023-02-02 19:57:00,503:INFO:_display_container: 2
2023-02-02 19:57:00,506:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=RandomForestRegressor(n_jobs=-1,
                                                    random_state=6200),
                    sp=7, window_length=7)
2023-02-02 19:57:00,506:INFO:create_model() successfully completed......................................
2023-02-02 19:57:00,700:INFO:SubProcess create_model() end ==================================
2023-02-02 19:57:00,701:INFO:Creating metrics dataframe
2023-02-02 19:57:00,722:INFO:Initializing Extra Trees w/ Cond. Deseasonalize & Detrending
2023-02-02 19:57:00,722:INFO:Total runtime is 0.6846237341562905 minutes
2023-02-02 19:57:00,726:INFO:SubProcess create_model() called ==================================
2023-02-02 19:57:00,726:INFO:Initializing create_model()
2023-02-02 19:57:00,726:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=et_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:57:00,726:INFO:Checking exceptions
2023-02-02 19:57:00,727:INFO:Importing libraries
2023-02-02 19:57:00,727:INFO:Copying training dataset
2023-02-02 19:57:00,732:INFO:Defining folds
2023-02-02 19:57:00,732:INFO:Declaring metric variables
2023-02-02 19:57:00,737:INFO:Importing untrained model
2023-02-02 19:57:00,742:INFO:Extra Trees w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:57:00,752:INFO:Starting cross validation
2023-02-02 19:57:00,754:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:57:01,170:INFO:Calculating mean and std
2023-02-02 19:57:01,172:INFO:Creating metrics dataframe
2023-02-02 19:57:01,176:INFO:Uploading results into container
2023-02-02 19:57:01,176:INFO:Uploading model into container now
2023-02-02 19:57:01,176:INFO:_master_model_container: 24
2023-02-02 19:57:01,176:INFO:_display_container: 2
2023-02-02 19:57:01,179:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(n_jobs=-1, random_state=6200),
                    sp=7, window_length=7)
2023-02-02 19:57:01,179:INFO:create_model() successfully completed......................................
2023-02-02 19:57:01,375:INFO:SubProcess create_model() end ==================================
2023-02-02 19:57:01,376:INFO:Creating metrics dataframe
2023-02-02 19:57:01,396:INFO:Initializing Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-02-02 19:57:01,396:INFO:Total runtime is 0.6958726803461709 minutes
2023-02-02 19:57:01,401:INFO:SubProcess create_model() called ==================================
2023-02-02 19:57:01,401:INFO:Initializing create_model()
2023-02-02 19:57:01,401:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=gbr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:57:01,401:INFO:Checking exceptions
2023-02-02 19:57:01,401:INFO:Importing libraries
2023-02-02 19:57:01,401:INFO:Copying training dataset
2023-02-02 19:57:01,407:INFO:Defining folds
2023-02-02 19:57:01,407:INFO:Declaring metric variables
2023-02-02 19:57:01,411:INFO:Importing untrained model
2023-02-02 19:57:01,417:INFO:Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:57:01,427:INFO:Starting cross validation
2023-02-02 19:57:01,428:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:57:01,677:INFO:Calculating mean and std
2023-02-02 19:57:01,678:INFO:Creating metrics dataframe
2023-02-02 19:57:01,683:INFO:Uploading results into container
2023-02-02 19:57:01,683:INFO:Uploading model into container now
2023-02-02 19:57:01,683:INFO:_master_model_container: 25
2023-02-02 19:57:01,683:INFO:_display_container: 2
2023-02-02 19:57:01,685:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=GradientBoostingRegressor(random_state=6200),
                    sp=7, window_length=7)
2023-02-02 19:57:01,685:INFO:create_model() successfully completed......................................
2023-02-02 19:57:01,883:INFO:SubProcess create_model() end ==================================
2023-02-02 19:57:01,884:INFO:Creating metrics dataframe
2023-02-02 19:57:01,906:INFO:Initializing AdaBoost w/ Cond. Deseasonalize & Detrending
2023-02-02 19:57:01,906:INFO:Total runtime is 0.7043674429257709 minutes
2023-02-02 19:57:01,910:INFO:SubProcess create_model() called ==================================
2023-02-02 19:57:01,910:INFO:Initializing create_model()
2023-02-02 19:57:01,911:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ada_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:57:01,911:INFO:Checking exceptions
2023-02-02 19:57:01,911:INFO:Importing libraries
2023-02-02 19:57:01,911:INFO:Copying training dataset
2023-02-02 19:57:01,916:INFO:Defining folds
2023-02-02 19:57:01,916:INFO:Declaring metric variables
2023-02-02 19:57:01,921:INFO:Importing untrained model
2023-02-02 19:57:01,927:INFO:AdaBoost w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:57:01,937:INFO:Starting cross validation
2023-02-02 19:57:01,938:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:57:02,236:INFO:Calculating mean and std
2023-02-02 19:57:02,237:INFO:Creating metrics dataframe
2023-02-02 19:57:02,241:INFO:Uploading results into container
2023-02-02 19:57:02,241:INFO:Uploading model into container now
2023-02-02 19:57:02,241:INFO:_master_model_container: 26
2023-02-02 19:57:02,241:INFO:_display_container: 2
2023-02-02 19:57:02,243:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=AdaBoostRegressor(random_state=6200), sp=7,
                    window_length=7)
2023-02-02 19:57:02,243:INFO:create_model() successfully completed......................................
2023-02-02 19:57:02,439:INFO:SubProcess create_model() end ==================================
2023-02-02 19:57:02,439:INFO:Creating metrics dataframe
2023-02-02 19:57:02,460:INFO:Initializing Light Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-02-02 19:57:02,460:INFO:Total runtime is 0.7135941425959268 minutes
2023-02-02 19:57:02,464:INFO:SubProcess create_model() called ==================================
2023-02-02 19:57:02,465:INFO:Initializing create_model()
2023-02-02 19:57:02,465:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=lightgbm_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D2F9BB0>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:57:02,465:INFO:Checking exceptions
2023-02-02 19:57:02,465:INFO:Importing libraries
2023-02-02 19:57:02,465:INFO:Copying training dataset
2023-02-02 19:57:02,470:INFO:Defining folds
2023-02-02 19:57:02,471:INFO:Declaring metric variables
2023-02-02 19:57:02,475:INFO:Importing untrained model
2023-02-02 19:57:02,480:INFO:Light Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 19:57:02,489:INFO:Starting cross validation
2023-02-02 19:57:02,491:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:57:02,736:INFO:Calculating mean and std
2023-02-02 19:57:02,738:INFO:Creating metrics dataframe
2023-02-02 19:57:02,742:INFO:Uploading results into container
2023-02-02 19:57:02,742:INFO:Uploading model into container now
2023-02-02 19:57:02,742:INFO:_master_model_container: 27
2023-02-02 19:57:02,742:INFO:_display_container: 2
2023-02-02 19:57:02,744:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LGBMRegressor(random_state=6200), sp=7,
                    window_length=7)
2023-02-02 19:57:02,744:INFO:create_model() successfully completed......................................
2023-02-02 19:57:02,939:INFO:SubProcess create_model() end ==================================
2023-02-02 19:57:02,939:INFO:Creating metrics dataframe
2023-02-02 19:57:02,972:INFO:Initializing create_model()
2023-02-02 19:57:02,973:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:57:02,973:INFO:Checking exceptions
2023-02-02 19:57:02,975:INFO:Importing libraries
2023-02-02 19:57:02,975:INFO:Copying training dataset
2023-02-02 19:57:02,979:INFO:Defining folds
2023-02-02 19:57:02,979:INFO:Declaring metric variables
2023-02-02 19:57:02,979:INFO:Importing untrained model
2023-02-02 19:57:02,979:INFO:Declaring custom model
2023-02-02 19:57:02,981:INFO:ARIMA Imported successfully
2023-02-02 19:57:02,981:INFO:Cross validation set to False
2023-02-02 19:57:02,981:INFO:Fitting Model
2023-02-02 19:57:03,043:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:57:03,043:INFO:create_model() successfully completed......................................
2023-02-02 19:57:03,289:INFO:_master_model_container: 27
2023-02-02 19:57:03,289:INFO:_display_container: 2
2023-02-02 19:57:03,289:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:57:03,289:INFO:compare_models() successfully completed......................................
2023-02-02 19:57:03,301:INFO:Initializing create_model()
2023-02-02 19:57:03,301:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-02-02 19:57:03,301:INFO:Checking exceptions
2023-02-02 19:57:03,326:INFO:Importing libraries
2023-02-02 19:57:03,327:INFO:Copying training dataset
2023-02-02 19:57:03,333:INFO:Defining folds
2023-02-02 19:57:03,333:INFO:Declaring metric variables
2023-02-02 19:57:03,339:INFO:Importing untrained model
2023-02-02 19:57:03,346:INFO:ARIMA Imported successfully
2023-02-02 19:57:03,354:INFO:Starting cross validation
2023-02-02 19:57:03,356:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 19:57:03,488:INFO:Calculating mean and std
2023-02-02 19:57:03,489:INFO:Creating metrics dataframe
2023-02-02 19:57:03,497:INFO:Finalizing model
2023-02-02 19:57:03,559:INFO:Uploading results into container
2023-02-02 19:57:03,559:INFO:Uploading model into container now
2023-02-02 19:57:03,569:INFO:_master_model_container: 28
2023-02-02 19:57:03,569:INFO:_display_container: 3
2023-02-02 19:57:03,570:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:57:03,570:INFO:create_model() successfully completed......................................
2023-02-02 19:57:03,897:INFO:Visual Rendered Successfully
2023-02-02 19:57:03,908:INFO:Initializing finalize_model()
2023-02-02 19:57:03,908:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 19:57:03,909:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 19:57:03,913:INFO:Initializing create_model()
2023-02-02 19:57:03,913:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 19:57:03,913:INFO:Checking exceptions
2023-02-02 19:57:03,915:INFO:Importing libraries
2023-02-02 19:57:03,915:INFO:Copying training dataset
2023-02-02 19:57:03,919:INFO:Defining folds
2023-02-02 19:57:03,919:INFO:Declaring metric variables
2023-02-02 19:57:03,919:INFO:Importing untrained model
2023-02-02 19:57:03,919:INFO:Declaring custom model
2023-02-02 19:57:03,921:INFO:ARIMA Imported successfully
2023-02-02 19:57:03,921:INFO:Cross validation set to False
2023-02-02 19:57:03,921:INFO:Fitting Model
2023-02-02 19:57:03,991:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:57:03,991:INFO:create_model() successfully completed......................................
2023-02-02 19:57:04,206:INFO:_master_model_container: 28
2023-02-02 19:57:04,207:INFO:_display_container: 3
2023-02-02 19:57:04,213:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 19:57:04,213:INFO:finalize_model() successfully completed......................................
2023-02-02 19:57:04,507:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 19:57:04,837:INFO:Visual Rendered Successfully
2023-02-02 20:00:19,852:INFO:Initializing finalize_model()
2023-02-02 20:00:19,852:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 20:00:19,852:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 20:00:19,858:INFO:Initializing create_model()
2023-02-02 20:00:19,858:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 20:00:19,858:INFO:Checking exceptions
2023-02-02 20:00:19,860:INFO:Importing libraries
2023-02-02 20:00:19,861:INFO:Copying training dataset
2023-02-02 20:00:19,864:INFO:Defining folds
2023-02-02 20:00:19,864:INFO:Declaring metric variables
2023-02-02 20:00:19,864:INFO:Importing untrained model
2023-02-02 20:00:19,865:INFO:Declaring custom model
2023-02-02 20:00:19,866:INFO:ARIMA Imported successfully
2023-02-02 20:00:19,866:INFO:Cross validation set to False
2023-02-02 20:00:19,866:INFO:Fitting Model
2023-02-02 20:00:19,931:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:00:19,932:INFO:create_model() successfully completed......................................
2023-02-02 20:00:20,131:INFO:_master_model_container: 28
2023-02-02 20:00:20,132:INFO:_display_container: 4
2023-02-02 20:00:20,138:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:00:20,138:INFO:finalize_model() successfully completed......................................
2023-02-02 20:00:20,410:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:00:20,698:INFO:Visual Rendered Successfully
2023-02-02 20:00:20,773:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:00:30,810:INFO:Initializing finalize_model()
2023-02-02 20:00:30,810:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 20:00:30,811:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 20:00:30,816:INFO:Initializing create_model()
2023-02-02 20:00:30,817:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 20:00:30,817:INFO:Checking exceptions
2023-02-02 20:00:30,819:INFO:Importing libraries
2023-02-02 20:00:30,819:INFO:Copying training dataset
2023-02-02 20:00:30,822:INFO:Defining folds
2023-02-02 20:00:30,822:INFO:Declaring metric variables
2023-02-02 20:00:30,823:INFO:Importing untrained model
2023-02-02 20:00:30,823:INFO:Declaring custom model
2023-02-02 20:00:30,825:INFO:ARIMA Imported successfully
2023-02-02 20:00:30,825:INFO:Cross validation set to False
2023-02-02 20:00:30,825:INFO:Fitting Model
2023-02-02 20:00:30,890:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:00:30,890:INFO:create_model() successfully completed......................................
2023-02-02 20:00:31,087:INFO:_master_model_container: 28
2023-02-02 20:00:31,087:INFO:_display_container: 6
2023-02-02 20:00:31,093:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:00:31,093:INFO:finalize_model() successfully completed......................................
2023-02-02 20:00:31,370:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:00:31,666:INFO:Visual Rendered Successfully
2023-02-02 20:00:31,738:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:02:18,980:INFO:Initializing finalize_model()
2023-02-02 20:02:18,980:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 20:02:18,981:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 20:02:18,986:INFO:Initializing create_model()
2023-02-02 20:02:18,986:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 20:02:18,986:INFO:Checking exceptions
2023-02-02 20:02:18,988:INFO:Importing libraries
2023-02-02 20:02:18,989:INFO:Copying training dataset
2023-02-02 20:02:18,993:INFO:Defining folds
2023-02-02 20:02:18,993:INFO:Declaring metric variables
2023-02-02 20:02:18,993:INFO:Importing untrained model
2023-02-02 20:02:18,993:INFO:Declaring custom model
2023-02-02 20:02:18,995:INFO:ARIMA Imported successfully
2023-02-02 20:02:18,995:INFO:Cross validation set to False
2023-02-02 20:02:18,995:INFO:Fitting Model
2023-02-02 20:02:19,061:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:02:19,062:INFO:create_model() successfully completed......................................
2023-02-02 20:02:19,260:INFO:_master_model_container: 28
2023-02-02 20:02:19,260:INFO:_display_container: 8
2023-02-02 20:02:19,266:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:02:19,266:INFO:finalize_model() successfully completed......................................
2023-02-02 20:02:19,523:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:02:19,815:INFO:Visual Rendered Successfully
2023-02-02 20:02:19,897:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:02:34,617:INFO:Initializing finalize_model()
2023-02-02 20:02:34,617:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 20:02:34,617:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 20:02:34,622:INFO:Initializing create_model()
2023-02-02 20:02:34,622:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 20:02:34,622:INFO:Checking exceptions
2023-02-02 20:02:34,624:INFO:Importing libraries
2023-02-02 20:02:34,624:INFO:Copying training dataset
2023-02-02 20:02:34,628:INFO:Defining folds
2023-02-02 20:02:34,628:INFO:Declaring metric variables
2023-02-02 20:02:34,628:INFO:Importing untrained model
2023-02-02 20:02:34,628:INFO:Declaring custom model
2023-02-02 20:02:34,630:INFO:ARIMA Imported successfully
2023-02-02 20:02:34,630:INFO:Cross validation set to False
2023-02-02 20:02:34,630:INFO:Fitting Model
2023-02-02 20:02:34,698:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:02:34,698:INFO:create_model() successfully completed......................................
2023-02-02 20:02:34,905:INFO:_master_model_container: 28
2023-02-02 20:02:34,905:INFO:_display_container: 10
2023-02-02 20:02:34,911:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:02:34,912:INFO:finalize_model() successfully completed......................................
2023-02-02 20:02:35,173:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:02:35,453:INFO:Visual Rendered Successfully
2023-02-02 20:02:35,524:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:03:14,257:INFO:Initializing finalize_model()
2023-02-02 20:03:14,257:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 20:03:14,258:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 20:03:14,263:INFO:Initializing create_model()
2023-02-02 20:03:14,263:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 20:03:14,263:INFO:Checking exceptions
2023-02-02 20:03:14,265:INFO:Importing libraries
2023-02-02 20:03:14,265:INFO:Copying training dataset
2023-02-02 20:03:14,269:INFO:Defining folds
2023-02-02 20:03:14,269:INFO:Declaring metric variables
2023-02-02 20:03:14,269:INFO:Importing untrained model
2023-02-02 20:03:14,269:INFO:Declaring custom model
2023-02-02 20:03:14,271:INFO:ARIMA Imported successfully
2023-02-02 20:03:14,271:INFO:Cross validation set to False
2023-02-02 20:03:14,271:INFO:Fitting Model
2023-02-02 20:03:14,338:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:03:14,338:INFO:create_model() successfully completed......................................
2023-02-02 20:03:14,534:INFO:_master_model_container: 28
2023-02-02 20:03:14,534:INFO:_display_container: 12
2023-02-02 20:03:14,540:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:03:14,540:INFO:finalize_model() successfully completed......................................
2023-02-02 20:03:14,796:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:03:15,081:INFO:Visual Rendered Successfully
2023-02-02 20:03:15,166:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:03:46,041:INFO:Initializing finalize_model()
2023-02-02 20:03:46,041:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 20:03:46,042:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 20:03:46,047:INFO:Initializing create_model()
2023-02-02 20:03:46,047:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 20:03:46,047:INFO:Checking exceptions
2023-02-02 20:03:46,049:INFO:Importing libraries
2023-02-02 20:03:46,049:INFO:Copying training dataset
2023-02-02 20:03:46,053:INFO:Defining folds
2023-02-02 20:03:46,053:INFO:Declaring metric variables
2023-02-02 20:03:46,053:INFO:Importing untrained model
2023-02-02 20:03:46,053:INFO:Declaring custom model
2023-02-02 20:03:46,055:INFO:ARIMA Imported successfully
2023-02-02 20:03:46,055:INFO:Cross validation set to False
2023-02-02 20:03:46,055:INFO:Fitting Model
2023-02-02 20:03:46,122:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:03:46,122:INFO:create_model() successfully completed......................................
2023-02-02 20:03:46,322:INFO:_master_model_container: 28
2023-02-02 20:03:46,323:INFO:_display_container: 14
2023-02-02 20:03:46,329:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:03:46,329:INFO:finalize_model() successfully completed......................................
2023-02-02 20:03:46,584:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:03:46,860:INFO:Visual Rendered Successfully
2023-02-02 20:03:46,932:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:04:24,689:INFO:Initializing finalize_model()
2023-02-02 20:04:24,689:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 20:04:24,690:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 20:04:24,695:INFO:Initializing create_model()
2023-02-02 20:04:24,695:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 20:04:24,695:INFO:Checking exceptions
2023-02-02 20:04:24,698:INFO:Importing libraries
2023-02-02 20:04:24,698:INFO:Copying training dataset
2023-02-02 20:04:24,701:INFO:Defining folds
2023-02-02 20:04:24,701:INFO:Declaring metric variables
2023-02-02 20:04:24,701:INFO:Importing untrained model
2023-02-02 20:04:24,702:INFO:Declaring custom model
2023-02-02 20:04:24,703:INFO:ARIMA Imported successfully
2023-02-02 20:04:24,704:INFO:Cross validation set to False
2023-02-02 20:04:24,704:INFO:Fitting Model
2023-02-02 20:04:24,781:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:04:24,781:INFO:create_model() successfully completed......................................
2023-02-02 20:04:24,977:INFO:_master_model_container: 28
2023-02-02 20:04:24,978:INFO:_display_container: 16
2023-02-02 20:04:24,984:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:04:24,984:INFO:finalize_model() successfully completed......................................
2023-02-02 20:04:25,244:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:04:25,522:INFO:Visual Rendered Successfully
2023-02-02 20:04:25,601:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:04:42,328:INFO:Initializing finalize_model()
2023-02-02 20:04:42,328:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 20:04:42,328:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 20:04:42,333:INFO:Initializing create_model()
2023-02-02 20:04:42,333:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 20:04:42,333:INFO:Checking exceptions
2023-02-02 20:04:42,335:INFO:Importing libraries
2023-02-02 20:04:42,335:INFO:Copying training dataset
2023-02-02 20:04:42,339:INFO:Defining folds
2023-02-02 20:04:42,339:INFO:Declaring metric variables
2023-02-02 20:04:42,339:INFO:Importing untrained model
2023-02-02 20:04:42,339:INFO:Declaring custom model
2023-02-02 20:04:42,341:INFO:ARIMA Imported successfully
2023-02-02 20:04:42,341:INFO:Cross validation set to False
2023-02-02 20:04:42,341:INFO:Fitting Model
2023-02-02 20:04:42,406:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:04:42,406:INFO:create_model() successfully completed......................................
2023-02-02 20:04:42,599:INFO:_master_model_container: 28
2023-02-02 20:04:42,600:INFO:_display_container: 18
2023-02-02 20:04:42,606:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:04:42,606:INFO:finalize_model() successfully completed......................................
2023-02-02 20:04:42,881:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:04:43,181:INFO:Visual Rendered Successfully
2023-02-02 20:04:43,262:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:06:44,963:INFO:Initializing finalize_model()
2023-02-02 20:06:44,964:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 20:06:44,964:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 20:06:44,969:INFO:Initializing create_model()
2023-02-02 20:06:44,970:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 20:06:44,970:INFO:Checking exceptions
2023-02-02 20:06:44,972:INFO:Importing libraries
2023-02-02 20:06:44,972:INFO:Copying training dataset
2023-02-02 20:06:44,975:INFO:Defining folds
2023-02-02 20:06:44,975:INFO:Declaring metric variables
2023-02-02 20:06:44,975:INFO:Importing untrained model
2023-02-02 20:06:44,976:INFO:Declaring custom model
2023-02-02 20:06:44,977:INFO:ARIMA Imported successfully
2023-02-02 20:06:44,977:INFO:Cross validation set to False
2023-02-02 20:06:44,977:INFO:Fitting Model
2023-02-02 20:06:45,043:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:06:45,043:INFO:create_model() successfully completed......................................
2023-02-02 20:06:45,271:INFO:_master_model_container: 28
2023-02-02 20:06:45,271:INFO:_display_container: 20
2023-02-02 20:06:45,277:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:06:45,277:INFO:finalize_model() successfully completed......................................
2023-02-02 20:06:45,536:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:06:45,815:INFO:Visual Rendered Successfully
2023-02-02 20:06:45,889:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:08:04,983:INFO:Initializing finalize_model()
2023-02-02 20:08:04,983:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 20:08:04,984:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 20:08:04,990:INFO:Initializing create_model()
2023-02-02 20:08:04,990:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 20:08:04,990:INFO:Checking exceptions
2023-02-02 20:08:04,992:INFO:Importing libraries
2023-02-02 20:08:04,992:INFO:Copying training dataset
2023-02-02 20:08:04,995:INFO:Defining folds
2023-02-02 20:08:04,995:INFO:Declaring metric variables
2023-02-02 20:08:04,995:INFO:Importing untrained model
2023-02-02 20:08:04,995:INFO:Declaring custom model
2023-02-02 20:08:04,997:INFO:ARIMA Imported successfully
2023-02-02 20:08:04,997:INFO:Cross validation set to False
2023-02-02 20:08:04,997:INFO:Fitting Model
2023-02-02 20:08:05,067:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:08:05,067:INFO:create_model() successfully completed......................................
2023-02-02 20:08:05,268:INFO:_master_model_container: 28
2023-02-02 20:08:05,268:INFO:_display_container: 22
2023-02-02 20:08:05,274:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:08:05,274:INFO:finalize_model() successfully completed......................................
2023-02-02 20:08:05,532:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:08:05,823:INFO:Visual Rendered Successfully
2023-02-02 20:08:05,903:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:09:00,240:INFO:Initializing finalize_model()
2023-02-02 20:09:00,240:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 20:09:00,241:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 20:09:00,245:INFO:Initializing create_model()
2023-02-02 20:09:00,245:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D30AF70>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 20:09:00,246:INFO:Checking exceptions
2023-02-02 20:09:00,247:INFO:Importing libraries
2023-02-02 20:09:00,248:INFO:Copying training dataset
2023-02-02 20:09:00,252:INFO:Defining folds
2023-02-02 20:09:00,252:INFO:Declaring metric variables
2023-02-02 20:09:00,252:INFO:Importing untrained model
2023-02-02 20:09:00,253:INFO:Declaring custom model
2023-02-02 20:09:00,254:INFO:ARIMA Imported successfully
2023-02-02 20:09:00,254:INFO:Cross validation set to False
2023-02-02 20:09:00,254:INFO:Fitting Model
2023-02-02 20:09:00,319:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:09:00,319:INFO:create_model() successfully completed......................................
2023-02-02 20:09:00,515:INFO:_master_model_container: 28
2023-02-02 20:09:00,515:INFO:_display_container: 24
2023-02-02 20:09:00,521:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:09:00,521:INFO:finalize_model() successfully completed......................................
2023-02-02 20:09:00,802:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:09:01,109:INFO:Visual Rendered Successfully
2023-02-02 20:09:01,190:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:13:59,216:INFO:PyCaret TSForecastingExperiment
2023-02-02 20:13:59,216:INFO:Logging name: ts-default-name
2023-02-02 20:13:59,216:INFO:ML Usecase: MLUsecase.TIME_SERIES
2023-02-02 20:13:59,216:INFO:version 3.0.0.rc8
2023-02-02 20:13:59,216:INFO:Initializing setup()
2023-02-02 20:13:59,217:INFO:self.USI: e0a0
2023-02-02 20:13:59,217:INFO:self._variable_keys: {'gpu_n_jobs_param', 'candidate_sps', 'fold_generator', 'n_jobs_param', 'enforce_exogenous', 'y_test_transformed', 'enforce_pi', 'pipeline', 'X_test', 'fh', 'idx', 'y_test', 'primary_sp_to_use', 'memory', 'html_param', 'gpu_param', 'data', 'approach_type', 'log_plots_param', 'y_transformed', 'X_test_transformed', 'exp_name_log', 'fold_param', 'strictly_positive', 'seed', 'X', 'exp_id', 'X_train_transformed', 'exogenous_present', 'model_engines', 'X_transformed', 'index_type', 'all_sps_to_use', 'seasonality_present', 'y_train', 'USI', 'y', 'X_train', 'significant_sps', 'y_train_transformed', '_available_plots', 'logging_param', 'significant_sps_no_harmonics', '_ml_usecase'}
2023-02-02 20:13:59,217:INFO:Checking environment
2023-02-02 20:13:59,217:INFO:python_version: 3.9.16
2023-02-02 20:13:59,217:INFO:python_build: ('main', 'Jan 11 2023 16:16:36')
2023-02-02 20:13:59,217:INFO:machine: AMD64
2023-02-02 20:13:59,217:INFO:platform: Windows-10-10.0.19045-SP0
2023-02-02 20:13:59,217:INFO:Memory: svmem(total=12825538560, available=4522438656, percent=64.7, used=8303099904, free=4522438656)
2023-02-02 20:13:59,217:INFO:Physical Core: 4
2023-02-02 20:13:59,217:INFO:Logical Core: 8
2023-02-02 20:13:59,217:INFO:Checking libraries
2023-02-02 20:13:59,217:INFO:System:
2023-02-02 20:13:59,217:INFO:    python: 3.9.16 (main, Jan 11 2023, 16:16:36) [MSC v.1916 64 bit (AMD64)]
2023-02-02 20:13:59,217:INFO:executable: C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\python.exe
2023-02-02 20:13:59,217:INFO:   machine: Windows-10-10.0.19045-SP0
2023-02-02 20:13:59,218:INFO:PyCaret required dependencies:
2023-02-02 20:13:59,218:INFO:                 pip: 22.3.1
2023-02-02 20:13:59,218:INFO:          setuptools: 65.6.3
2023-02-02 20:13:59,218:INFO:             pycaret: 3.0.0rc8
2023-02-02 20:13:59,218:INFO:             IPython: 8.9.0
2023-02-02 20:13:59,218:INFO:          ipywidgets: 8.0.4
2023-02-02 20:13:59,218:INFO:                tqdm: 4.64.1
2023-02-02 20:13:59,218:INFO:               numpy: 1.23.5
2023-02-02 20:13:59,218:INFO:              pandas: 1.5.3
2023-02-02 20:13:59,218:INFO:              jinja2: 3.1.2
2023-02-02 20:13:59,218:INFO:               scipy: 1.10.0
2023-02-02 20:13:59,218:INFO:              joblib: 1.2.0
2023-02-02 20:13:59,218:INFO:             sklearn: 1.1.3
2023-02-02 20:13:59,218:INFO:                pyod: 1.0.7
2023-02-02 20:13:59,219:INFO:            imblearn: 0.10.1
2023-02-02 20:13:59,219:INFO:   category_encoders: 2.6.0
2023-02-02 20:13:59,219:INFO:            lightgbm: 3.3.5
2023-02-02 20:13:59,219:INFO:               numba: 0.56.4
2023-02-02 20:13:59,219:INFO:            requests: 2.28.2
2023-02-02 20:13:59,219:INFO:          matplotlib: 3.7.0rc1
2023-02-02 20:13:59,219:INFO:          scikitplot: 0.3.7
2023-02-02 20:13:59,219:INFO:         yellowbrick: 1.5
2023-02-02 20:13:59,219:INFO:              plotly: 5.13.0
2023-02-02 20:13:59,219:INFO:             kaleido: 0.2.1
2023-02-02 20:13:59,219:INFO:         statsmodels: 0.13.5
2023-02-02 20:13:59,219:INFO:              sktime: 0.16.0
2023-02-02 20:13:59,219:INFO:               tbats: 1.1.2
2023-02-02 20:13:59,219:INFO:            pmdarima: 2.0.2
2023-02-02 20:13:59,219:INFO:              psutil: 5.9.4
2023-02-02 20:13:59,219:INFO:PyCaret optional dependencies:
2023-02-02 20:13:59,219:INFO:                shap: Not installed
2023-02-02 20:13:59,220:INFO:           interpret: Not installed
2023-02-02 20:13:59,220:INFO:                umap: Not installed
2023-02-02 20:13:59,220:INFO:    pandas_profiling: Not installed
2023-02-02 20:13:59,220:INFO:  explainerdashboard: Not installed
2023-02-02 20:13:59,220:INFO:             autoviz: Not installed
2023-02-02 20:13:59,220:INFO:           fairlearn: Not installed
2023-02-02 20:13:59,220:INFO:             xgboost: Not installed
2023-02-02 20:13:59,220:INFO:            catboost: Not installed
2023-02-02 20:13:59,220:INFO:              kmodes: Not installed
2023-02-02 20:13:59,220:INFO:             mlxtend: Not installed
2023-02-02 20:13:59,220:INFO:       statsforecast: Not installed
2023-02-02 20:13:59,220:INFO:        tune_sklearn: Not installed
2023-02-02 20:13:59,220:INFO:                 ray: Not installed
2023-02-02 20:13:59,220:INFO:            hyperopt: Not installed
2023-02-02 20:13:59,220:INFO:              optuna: Not installed
2023-02-02 20:13:59,221:INFO:               skopt: Not installed
2023-02-02 20:13:59,221:INFO:              mlflow: Not installed
2023-02-02 20:13:59,221:INFO:              gradio: Not installed
2023-02-02 20:13:59,221:INFO:             fastapi: Not installed
2023-02-02 20:13:59,221:INFO:             uvicorn: Not installed
2023-02-02 20:13:59,221:INFO:              m2cgen: Not installed
2023-02-02 20:13:59,221:INFO:           evidently: Not installed
2023-02-02 20:13:59,221:INFO:                nltk: Not installed
2023-02-02 20:13:59,221:INFO:            pyLDAvis: Not installed
2023-02-02 20:13:59,221:INFO:              gensim: Not installed
2023-02-02 20:13:59,221:INFO:               spacy: Not installed
2023-02-02 20:13:59,221:INFO:           wordcloud: Not installed
2023-02-02 20:13:59,221:INFO:            textblob: Not installed
2023-02-02 20:13:59,221:INFO:               fugue: Not installed
2023-02-02 20:13:59,221:INFO:           streamlit: Not installed
2023-02-02 20:13:59,221:INFO:             prophet: Not installed
2023-02-02 20:13:59,222:INFO:None
2023-02-02 20:13:59,226:INFO:Set Forecast Horizon.
2023-02-02 20:13:59,227:INFO:Set up Train-Test Splits.
2023-02-02 20:13:59,266:INFO:Finished creating preprocessing pipeline.
2023-02-02 20:13:59,268:INFO:Pipeline: ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                DummyForecaster())]))])
2023-02-02 20:13:59,269:INFO:Set up Seasonal Period.
2023-02-02 20:13:59,271:INFO:Set up whether Multiplicative components allowed.
2023-02-02 20:13:59,302:INFO:Creating final display dataframe.
2023-02-02 20:13:59,313:INFO:Setup Display Container:                                          Description                    Value
0                                         session_id                     6153
1                                             Target                   Vendas
2                                           Approach               Univariate
3                                Exogenous Variables              Not Present
4                                Original data shape                  (46, 1)
5                             Transformed data shape                  (46, 1)
6                        Transformed train set shape                  (41, 1)
7                         Transformed test set shape                   (5, 1)
8                           Rows with missing values                     0.0%
9                                     Fold Generator  ExpandingWindowSplitter
10                                       Fold Number                        1
11                       Enforce Prediction Interval                    False
12                   Splits used for hyperparameters                      all
13                        Seasonality Detection Algo                     auto
14                            Max Period to Consider                     None
15                         Seasonal Period(s) Tested                      [7]
16                    Significant Seasonal Period(s)                      [7]
17  Significant Seasonal Period(s) without Harmonics                      [7]
18                                  Remove Harmonics                    False
19                            Harmonics Order Method             harmonic_max
20                          Num Seasonalities to Use                        1
21                          All Seasonalities to Use                      [7]
22                               Primary Seasonality                        7
23                               Seasonality Present                     True
24                          Target Strictly Positive                     True
25                                Target White Noise                       No
26                                     Recommended d                        0
27                            Recommended Seasonal D                        1
28                                        Preprocess                    False
29                                          CPU Jobs                       -1
30                                           Use GPU                    False
31                                    Log Experiment                    False
32                                   Experiment Name          ts-default-name
33                                               USI                     e0a0
2023-02-02 20:13:59,320:INFO:Engine successfully changes for model 'auto_arima' to 'pmdarima'.
2023-02-02 20:13:59,323:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,324:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,324:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,324:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,324:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,325:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,325:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,326:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,326:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,326:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,329:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,332:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,332:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,333:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,333:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,333:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,334:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,334:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,334:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,334:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,334:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,334:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,335:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,335:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,338:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,338:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,338:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,338:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,339:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,339:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,339:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,339:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,340:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,340:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,342:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,343:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,344:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,344:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,344:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,345:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,345:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,345:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,345:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,345:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,346:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,346:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,346:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,346:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,346:INFO:Engine successfully changes for model 'lr_cds_dt' to 'sklearn'.
2023-02-02 20:13:59,349:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,350:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,350:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,350:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,351:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,351:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,351:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,352:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,352:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,354:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,356:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,356:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,356:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,357:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,357:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,357:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,358:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,358:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,358:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,358:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,358:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,359:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,359:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,362:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,362:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,363:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,363:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,363:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,363:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,364:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,364:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,364:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,366:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,368:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,368:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,368:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,369:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,369:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,369:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,370:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,370:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,370:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,370:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,370:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,370:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,370:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,371:INFO:Engine successfully changes for model 'en_cds_dt' to 'sklearn'.
2023-02-02 20:13:59,373:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,374:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,374:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,374:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,375:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,375:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,375:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,375:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,377:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,379:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,379:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,380:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,380:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,380:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,381:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,381:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,381:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,381:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,381:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,382:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,384:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,384:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,387:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,387:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,387:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,388:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,388:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,388:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,388:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,389:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,390:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,392:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,392:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,393:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,393:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,394:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,394:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,395:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,395:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,395:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,395:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,395:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,395:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,395:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,396:INFO:Engine successfully changes for model 'ridge_cds_dt' to 'sklearn'.
2023-02-02 20:13:59,399:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,399:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,399:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,400:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,400:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,400:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,400:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,402:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,404:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,404:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,404:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,405:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,405:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,405:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,405:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,406:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,406:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,406:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,406:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,406:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,406:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,409:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,410:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,410:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,410:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,411:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,411:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,411:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,413:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,415:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,415:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,416:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,416:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,416:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,416:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,417:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,417:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,417:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,417:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,417:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,417:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,417:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,418:INFO:Engine successfully changes for model 'lasso_cds_dt' to 'sklearn'.
2023-02-02 20:13:59,421:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,421:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,422:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,422:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,422:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,422:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,424:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,426:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,426:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,427:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,427:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,427:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,428:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,428:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,428:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,428:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,428:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,428:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,428:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,429:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,432:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,432:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,433:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,433:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,433:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,433:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,435:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,437:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,437:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,437:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,437:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,438:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,438:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,438:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,438:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,438:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,439:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,439:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,439:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,439:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,439:INFO:Engine successfully changes for model 'lar_cds_dt' to 'sklearn'.
2023-02-02 20:13:59,442:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,443:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,443:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,444:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,444:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,446:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,448:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,448:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,448:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,449:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,449:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,449:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,449:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,449:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,450:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,450:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,450:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,450:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,450:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,453:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,454:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,454:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,455:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,455:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,457:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,458:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,458:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,459:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,459:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,459:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,460:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,460:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,460:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,460:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,460:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,461:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,461:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,461:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,461:INFO:Engine successfully changes for model 'llar_cds_dt' to 'sklearn'.
2023-02-02 20:13:59,464:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,465:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,465:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,466:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,467:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,469:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,469:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,469:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,470:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,470:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,470:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,470:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,471:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,471:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,471:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,471:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,471:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,471:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,474:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,475:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,476:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,476:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,478:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,479:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,480:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,480:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,480:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,481:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,481:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,481:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,481:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,481:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,481:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,482:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,482:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,482:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,482:INFO:Engine successfully changes for model 'br_cds_dt' to 'sklearn'.
2023-02-02 20:13:59,485:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,486:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,486:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,488:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,490:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,490:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,490:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,491:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,491:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,491:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,492:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,492:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,492:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,496:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,498:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,498:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,500:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,501:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,502:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,502:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,502:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,503:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,503:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,503:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,503:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,503:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,503:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,504:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,504:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,504:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,504:INFO:Engine successfully changes for model 'huber_cds_dt' to 'sklearn'.
2023-02-02 20:13:59,507:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,509:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,510:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,512:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,512:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,513:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,513:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,513:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,514:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,514:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,514:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,514:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,514:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,514:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,514:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,515:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,517:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,519:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,521:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,522:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,522:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,523:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,523:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,523:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,524:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,524:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,524:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,524:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,524:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,524:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,525:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,525:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,525:INFO:Engine successfully changes for model 'par_cds_dt' to 'sklearn'.
2023-02-02 20:13:59,528:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,531:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,532:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,533:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,533:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,533:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,534:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,534:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,534:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,534:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,534:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,534:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,535:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,535:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,535:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,538:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,541:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,543:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,543:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,543:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,544:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,544:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,544:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,544:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,544:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,545:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,545:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,545:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,545:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,545:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,545:INFO:Engine successfully changes for model 'omp_cds_dt' to 'sklearn'.
2023-02-02 20:13:59,548:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,553:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,553:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,553:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,554:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,554:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,554:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,555:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,555:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,555:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,555:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,555:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,555:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,555:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,558:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,563:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,563:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,564:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,564:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,564:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,564:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,565:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,565:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,565:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,565:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,565:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,565:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,565:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,566:INFO:Engine successfully changes for model 'knn_cds_dt' to 'sklearn'.
2023-02-02 20:13:59,568:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,573:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,574:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,574:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,574:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,574:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,575:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,575:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,575:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,575:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,575:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,575:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,575:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,578:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,583:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,584:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,584:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,584:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,585:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,585:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,585:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,585:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,585:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,585:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,586:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,586:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,586:INFO:Engine successfully changes for model 'dt_cds_dt' to 'sklearn'.
2023-02-02 20:13:59,589:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,594:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,594:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,595:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,595:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,595:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,595:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,595:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,595:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,596:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,596:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,596:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,599:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,604:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,605:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,605:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,605:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,605:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,606:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,606:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,606:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,606:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,606:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,606:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,606:INFO:Engine successfully changes for model 'rf_cds_dt' to 'sklearn'.
2023-02-02 20:13:59,609:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,615:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,615:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,615:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,616:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,616:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,616:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,616:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,616:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,616:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,616:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,619:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,624:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,625:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,625:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,625:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,625:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,625:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,625:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,626:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,626:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,626:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,626:INFO:Engine successfully changes for model 'et_cds_dt' to 'sklearn'.
2023-02-02 20:13:59,629:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,635:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,635:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,635:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,635:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,635:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,635:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,636:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,636:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,636:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,639:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,644:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,645:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,645:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,645:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,645:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,645:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,645:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,645:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,646:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,646:INFO:Engine successfully changes for model 'gbr_cds_dt' to 'sklearn'.
2023-02-02 20:13:59,649:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,655:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,655:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,655:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,655:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,655:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,655:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,655:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,655:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,658:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,664:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,664:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,665:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,665:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,665:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,665:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,665:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,665:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,665:INFO:Engine successfully changes for model 'ada_cds_dt' to 'sklearn'.
2023-02-02 20:13:59,670:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,676:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,677:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,677:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,677:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,677:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,677:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,677:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,680:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,686:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,686:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,687:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,687:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,687:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,687:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,687:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,687:INFO:Engine successfully changes for model 'xgboost_cds_dt' to 'sklearn'.
2023-02-02 20:13:59,690:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,696:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,696:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,696:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,697:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,697:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,697:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,700:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,706:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,706:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,706:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,707:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,707:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,707:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,707:INFO:Engine successfully changes for model 'lightgbm_cds_dt' to 'sklearn'.
2023-02-02 20:13:59,710:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,716:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,716:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,716:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,716:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,717:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,719:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,725:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,725:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,726:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:13:59,726:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,726:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,726:INFO:Engine successfully changes for model 'catboost_cds_dt' to 'sklearn'.
2023-02-02 20:13:59,729:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,735:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,735:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,736:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,736:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,739:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,745:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,745:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,745:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,745:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,748:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,754:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,754:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,754:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,755:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,757:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:13:59,764:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,764:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,764:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,764:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:13:59,765:INFO:setup() successfully completed in 0.55s...............
2023-02-02 20:13:59,784:INFO:Initializing compare_models()
2023-02-02 20:13:59,784:INFO:compare_models(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, include=None, fold=None, round=4, cross_validation=True, sort=MASE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MASE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.time_series.forecasting.oop.TSForecastingExperiment'>}, exclude=None)
2023-02-02 20:13:59,784:INFO:Checking exceptions
2023-02-02 20:13:59,787:INFO:Preparing display monitor
2023-02-02 20:13:59,816:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:709: UserWarning:

Unsupported estimator `ensemble_forecaster` for method `compare_models()`, removing from model_library


2023-02-02 20:13:59,816:INFO:Initializing Naive Forecaster
2023-02-02 20:13:59,816:INFO:Total runtime is 0.0 minutes
2023-02-02 20:13:59,824:INFO:SubProcess create_model() called ==================================
2023-02-02 20:13:59,824:INFO:Initializing create_model()
2023-02-02 20:13:59,824:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=naive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:13:59,825:INFO:Checking exceptions
2023-02-02 20:13:59,825:INFO:Importing libraries
2023-02-02 20:13:59,825:INFO:Copying training dataset
2023-02-02 20:13:59,830:INFO:Defining folds
2023-02-02 20:13:59,831:INFO:Declaring metric variables
2023-02-02 20:13:59,835:INFO:Importing untrained model
2023-02-02 20:13:59,840:INFO:Naive Forecaster Imported successfully
2023-02-02 20:13:59,851:INFO:Starting cross validation
2023-02-02 20:13:59,852:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:05,132:INFO:Calculating mean and std
2023-02-02 20:14:05,134:INFO:Creating metrics dataframe
2023-02-02 20:14:05,139:INFO:Uploading results into container
2023-02-02 20:14:05,140:INFO:Uploading model into container now
2023-02-02 20:14:05,140:INFO:_master_model_container: 1
2023-02-02 20:14:05,140:INFO:_display_container: 2
2023-02-02 20:14:05,141:INFO:NaiveForecaster()
2023-02-02 20:14:05,141:INFO:create_model() successfully completed......................................
2023-02-02 20:14:05,360:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:05,361:INFO:Creating metrics dataframe
2023-02-02 20:14:05,372:INFO:Initializing Grand Means Forecaster
2023-02-02 20:14:05,372:INFO:Total runtime is 0.0926069974899292 minutes
2023-02-02 20:14:05,376:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:05,376:INFO:Initializing create_model()
2023-02-02 20:14:05,376:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=grand_means, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:05,376:INFO:Checking exceptions
2023-02-02 20:14:05,377:INFO:Importing libraries
2023-02-02 20:14:05,377:INFO:Copying training dataset
2023-02-02 20:14:05,382:INFO:Defining folds
2023-02-02 20:14:05,382:INFO:Declaring metric variables
2023-02-02 20:14:05,386:INFO:Importing untrained model
2023-02-02 20:14:05,390:INFO:Grand Means Forecaster Imported successfully
2023-02-02 20:14:05,398:INFO:Starting cross validation
2023-02-02 20:14:05,399:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:08,112:INFO:Calculating mean and std
2023-02-02 20:14:08,114:INFO:Creating metrics dataframe
2023-02-02 20:14:08,119:INFO:Uploading results into container
2023-02-02 20:14:08,119:INFO:Uploading model into container now
2023-02-02 20:14:08,120:INFO:_master_model_container: 2
2023-02-02 20:14:08,120:INFO:_display_container: 2
2023-02-02 20:14:08,120:INFO:NaiveForecaster(strategy='mean')
2023-02-02 20:14:08,120:INFO:create_model() successfully completed......................................
2023-02-02 20:14:08,336:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:08,336:INFO:Creating metrics dataframe
2023-02-02 20:14:08,348:INFO:Initializing Seasonal Naive Forecaster
2023-02-02 20:14:08,348:INFO:Total runtime is 0.1421949585278829 minutes
2023-02-02 20:14:08,352:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:08,352:INFO:Initializing create_model()
2023-02-02 20:14:08,352:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=snaive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:08,353:INFO:Checking exceptions
2023-02-02 20:14:08,353:INFO:Importing libraries
2023-02-02 20:14:08,353:INFO:Copying training dataset
2023-02-02 20:14:08,358:INFO:Defining folds
2023-02-02 20:14:08,358:INFO:Declaring metric variables
2023-02-02 20:14:08,362:INFO:Importing untrained model
2023-02-02 20:14:08,366:INFO:Seasonal Naive Forecaster Imported successfully
2023-02-02 20:14:08,374:INFO:Starting cross validation
2023-02-02 20:14:08,375:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:11,182:INFO:Calculating mean and std
2023-02-02 20:14:11,183:INFO:Creating metrics dataframe
2023-02-02 20:14:11,190:INFO:Uploading results into container
2023-02-02 20:14:11,190:INFO:Uploading model into container now
2023-02-02 20:14:11,191:INFO:_master_model_container: 3
2023-02-02 20:14:11,191:INFO:_display_container: 2
2023-02-02 20:14:11,191:INFO:NaiveForecaster(sp=7)
2023-02-02 20:14:11,191:INFO:create_model() successfully completed......................................
2023-02-02 20:14:11,407:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:11,407:INFO:Creating metrics dataframe
2023-02-02 20:14:11,421:INFO:Initializing Polynomial Trend Forecaster
2023-02-02 20:14:11,421:INFO:Total runtime is 0.19342515071233113 minutes
2023-02-02 20:14:11,426:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:11,426:INFO:Initializing create_model()
2023-02-02 20:14:11,426:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=polytrend, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:11,426:INFO:Checking exceptions
2023-02-02 20:14:11,426:INFO:Importing libraries
2023-02-02 20:14:11,426:INFO:Copying training dataset
2023-02-02 20:14:11,432:INFO:Defining folds
2023-02-02 20:14:11,432:INFO:Declaring metric variables
2023-02-02 20:14:11,436:INFO:Importing untrained model
2023-02-02 20:14:11,441:INFO:Polynomial Trend Forecaster Imported successfully
2023-02-02 20:14:11,448:INFO:Starting cross validation
2023-02-02 20:14:11,450:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:14,110:INFO:Calculating mean and std
2023-02-02 20:14:14,111:INFO:Creating metrics dataframe
2023-02-02 20:14:14,116:INFO:Uploading results into container
2023-02-02 20:14:14,117:INFO:Uploading model into container now
2023-02-02 20:14:14,118:INFO:_master_model_container: 4
2023-02-02 20:14:14,118:INFO:_display_container: 2
2023-02-02 20:14:14,118:INFO:PolynomialTrendForecaster()
2023-02-02 20:14:14,118:INFO:create_model() successfully completed......................................
2023-02-02 20:14:14,330:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:14,330:INFO:Creating metrics dataframe
2023-02-02 20:14:14,344:INFO:Initializing ARIMA
2023-02-02 20:14:14,345:INFO:Total runtime is 0.2421451210975647 minutes
2023-02-02 20:14:14,350:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:14,350:INFO:Initializing create_model()
2023-02-02 20:14:14,350:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:14,350:INFO:Checking exceptions
2023-02-02 20:14:14,350:INFO:Importing libraries
2023-02-02 20:14:14,350:INFO:Copying training dataset
2023-02-02 20:14:14,356:INFO:Defining folds
2023-02-02 20:14:14,356:INFO:Declaring metric variables
2023-02-02 20:14:14,360:INFO:Importing untrained model
2023-02-02 20:14:14,366:INFO:ARIMA Imported successfully
2023-02-02 20:14:14,374:INFO:Starting cross validation
2023-02-02 20:14:14,375:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:17,075:INFO:Calculating mean and std
2023-02-02 20:14:17,076:INFO:Creating metrics dataframe
2023-02-02 20:14:17,081:INFO:Uploading results into container
2023-02-02 20:14:17,082:INFO:Uploading model into container now
2023-02-02 20:14:17,082:INFO:_master_model_container: 5
2023-02-02 20:14:17,083:INFO:_display_container: 2
2023-02-02 20:14:17,083:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 20:14:17,083:INFO:create_model() successfully completed......................................
2023-02-02 20:14:17,307:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:17,307:INFO:Creating metrics dataframe
2023-02-02 20:14:17,321:INFO:Initializing Auto ARIMA
2023-02-02 20:14:17,321:INFO:Total runtime is 0.2917431433995565 minutes
2023-02-02 20:14:17,324:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:17,325:INFO:Initializing create_model()
2023-02-02 20:14:17,325:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=auto_arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:17,325:INFO:Checking exceptions
2023-02-02 20:14:17,325:INFO:Importing libraries
2023-02-02 20:14:17,325:INFO:Copying training dataset
2023-02-02 20:14:17,330:INFO:Defining folds
2023-02-02 20:14:17,330:INFO:Declaring metric variables
2023-02-02 20:14:17,334:INFO:Importing untrained model
2023-02-02 20:14:17,339:INFO:Auto ARIMA Imported successfully
2023-02-02 20:14:17,348:INFO:Starting cross validation
2023-02-02 20:14:17,350:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:23,350:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pmdarima\arima\_auto_solvers.py:522: ModelFitWarning: Error fitting  ARIMA(2,0,1)(2,1,0)[7] intercept (if you do not want to see these warnings, run with error_action="ignore").
  warnings.warn(warning_str, ModelFitWarning)

2023-02-02 20:14:25,252:INFO:Calculating mean and std
2023-02-02 20:14:25,254:INFO:Creating metrics dataframe
2023-02-02 20:14:25,259:INFO:Uploading results into container
2023-02-02 20:14:25,259:INFO:Uploading model into container now
2023-02-02 20:14:25,260:INFO:_master_model_container: 6
2023-02-02 20:14:25,260:INFO:_display_container: 2
2023-02-02 20:14:25,261:INFO:AutoARIMA(random_state=6153, sp=7, suppress_warnings=True)
2023-02-02 20:14:25,261:INFO:create_model() successfully completed......................................
2023-02-02 20:14:25,474:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:25,475:INFO:Creating metrics dataframe
2023-02-02 20:14:25,487:INFO:Initializing Exponential Smoothing
2023-02-02 20:14:25,487:INFO:Total runtime is 0.42785331010818484 minutes
2023-02-02 20:14:25,490:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:25,491:INFO:Initializing create_model()
2023-02-02 20:14:25,491:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=exp_smooth, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:25,491:INFO:Checking exceptions
2023-02-02 20:14:25,491:INFO:Importing libraries
2023-02-02 20:14:25,491:INFO:Copying training dataset
2023-02-02 20:14:25,496:INFO:Defining folds
2023-02-02 20:14:25,496:INFO:Declaring metric variables
2023-02-02 20:14:25,501:INFO:Importing untrained model
2023-02-02 20:14:25,505:INFO:Exponential Smoothing Imported successfully
2023-02-02 20:14:25,514:INFO:Starting cross validation
2023-02-02 20:14:25,515:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:28,319:INFO:Calculating mean and std
2023-02-02 20:14:28,321:INFO:Creating metrics dataframe
2023-02-02 20:14:28,326:INFO:Uploading results into container
2023-02-02 20:14:28,326:INFO:Uploading model into container now
2023-02-02 20:14:28,327:INFO:_master_model_container: 7
2023-02-02 20:14:28,327:INFO:_display_container: 2
2023-02-02 20:14:28,327:INFO:ExponentialSmoothing(seasonal='mul', sp=7, trend='add')
2023-02-02 20:14:28,327:INFO:create_model() successfully completed......................................
2023-02-02 20:14:28,536:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:28,536:INFO:Creating metrics dataframe
2023-02-02 20:14:28,550:INFO:Initializing Croston
2023-02-02 20:14:28,550:INFO:Total runtime is 0.4788967291514079 minutes
2023-02-02 20:14:28,554:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:28,554:INFO:Initializing create_model()
2023-02-02 20:14:28,554:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=croston, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:28,554:INFO:Checking exceptions
2023-02-02 20:14:28,554:INFO:Importing libraries
2023-02-02 20:14:28,554:INFO:Copying training dataset
2023-02-02 20:14:28,559:INFO:Defining folds
2023-02-02 20:14:28,559:INFO:Declaring metric variables
2023-02-02 20:14:28,564:INFO:Importing untrained model
2023-02-02 20:14:28,568:INFO:Croston Imported successfully
2023-02-02 20:14:28,576:INFO:Starting cross validation
2023-02-02 20:14:28,577:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:31,261:INFO:Calculating mean and std
2023-02-02 20:14:31,263:INFO:Creating metrics dataframe
2023-02-02 20:14:31,268:INFO:Uploading results into container
2023-02-02 20:14:31,268:INFO:Uploading model into container now
2023-02-02 20:14:31,269:INFO:_master_model_container: 8
2023-02-02 20:14:31,269:INFO:_display_container: 2
2023-02-02 20:14:31,269:INFO:Croston()
2023-02-02 20:14:31,269:INFO:create_model() successfully completed......................................
2023-02-02 20:14:31,476:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:31,477:INFO:Creating metrics dataframe
2023-02-02 20:14:31,492:INFO:Initializing ETS
2023-02-02 20:14:31,493:INFO:Total runtime is 0.5279497424761455 minutes
2023-02-02 20:14:31,497:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:31,497:INFO:Initializing create_model()
2023-02-02 20:14:31,497:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=ets, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:31,497:INFO:Checking exceptions
2023-02-02 20:14:31,498:INFO:Importing libraries
2023-02-02 20:14:31,498:INFO:Copying training dataset
2023-02-02 20:14:31,503:INFO:Defining folds
2023-02-02 20:14:31,503:INFO:Declaring metric variables
2023-02-02 20:14:31,507:INFO:Importing untrained model
2023-02-02 20:14:31,513:INFO:ETS Imported successfully
2023-02-02 20:14:31,521:INFO:Starting cross validation
2023-02-02 20:14:31,522:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:31,668:INFO:Calculating mean and std
2023-02-02 20:14:31,670:INFO:Creating metrics dataframe
2023-02-02 20:14:31,674:INFO:Uploading results into container
2023-02-02 20:14:31,675:INFO:Uploading model into container now
2023-02-02 20:14:31,675:INFO:_master_model_container: 9
2023-02-02 20:14:31,675:INFO:_display_container: 2
2023-02-02 20:14:31,676:INFO:AutoETS(seasonal='mul', sp=7, trend='add')
2023-02-02 20:14:31,676:INFO:create_model() successfully completed......................................
2023-02-02 20:14:31,892:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:31,893:INFO:Creating metrics dataframe
2023-02-02 20:14:31,908:INFO:Initializing Theta Forecaster
2023-02-02 20:14:31,909:INFO:Total runtime is 0.5348787784576416 minutes
2023-02-02 20:14:31,913:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:31,913:INFO:Initializing create_model()
2023-02-02 20:14:31,913:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=theta, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:31,914:INFO:Checking exceptions
2023-02-02 20:14:31,914:INFO:Importing libraries
2023-02-02 20:14:31,914:INFO:Copying training dataset
2023-02-02 20:14:31,919:INFO:Defining folds
2023-02-02 20:14:31,919:INFO:Declaring metric variables
2023-02-02 20:14:31,924:INFO:Importing untrained model
2023-02-02 20:14:31,928:INFO:Theta Forecaster Imported successfully
2023-02-02 20:14:31,936:INFO:Starting cross validation
2023-02-02 20:14:31,938:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:32,008:INFO:Calculating mean and std
2023-02-02 20:14:32,009:INFO:Creating metrics dataframe
2023-02-02 20:14:32,014:INFO:Uploading results into container
2023-02-02 20:14:32,014:INFO:Uploading model into container now
2023-02-02 20:14:32,014:INFO:_master_model_container: 10
2023-02-02 20:14:32,014:INFO:_display_container: 2
2023-02-02 20:14:32,015:INFO:ThetaForecaster(sp=7)
2023-02-02 20:14:32,015:INFO:create_model() successfully completed......................................
2023-02-02 20:14:32,229:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:32,229:INFO:Creating metrics dataframe
2023-02-02 20:14:32,244:INFO:Initializing Linear w/ Cond. Deseasonalize & Detrending
2023-02-02 20:14:32,244:INFO:Total runtime is 0.5404717644055684 minutes
2023-02-02 20:14:32,249:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:32,249:INFO:Initializing create_model()
2023-02-02 20:14:32,249:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=lr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:32,249:INFO:Checking exceptions
2023-02-02 20:14:32,249:INFO:Importing libraries
2023-02-02 20:14:32,249:INFO:Copying training dataset
2023-02-02 20:14:32,254:INFO:Defining folds
2023-02-02 20:14:32,254:INFO:Declaring metric variables
2023-02-02 20:14:32,259:INFO:Importing untrained model
2023-02-02 20:14:32,265:INFO:Linear w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:14:32,273:INFO:Starting cross validation
2023-02-02 20:14:32,274:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:32,596:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:32,596:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:32,596:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:32,596:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:32,682:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:14:32,898:INFO:Calculating mean and std
2023-02-02 20:14:32,900:INFO:Creating metrics dataframe
2023-02-02 20:14:32,904:INFO:Uploading results into container
2023-02-02 20:14:32,904:INFO:Uploading model into container now
2023-02-02 20:14:32,904:INFO:_master_model_container: 11
2023-02-02 20:14:32,904:INFO:_display_container: 2
2023-02-02 20:14:32,906:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LinearRegression(n_jobs=-1), sp=7,
                    window_length=7)
2023-02-02 20:14:32,906:INFO:create_model() successfully completed......................................
2023-02-02 20:14:33,113:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:33,114:INFO:Creating metrics dataframe
2023-02-02 20:14:33,129:INFO:Initializing Elastic Net w/ Cond. Deseasonalize & Detrending
2023-02-02 20:14:33,130:INFO:Total runtime is 0.5552383144696553 minutes
2023-02-02 20:14:33,134:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:33,134:INFO:Initializing create_model()
2023-02-02 20:14:33,134:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=en_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:33,134:INFO:Checking exceptions
2023-02-02 20:14:33,134:INFO:Importing libraries
2023-02-02 20:14:33,134:INFO:Copying training dataset
2023-02-02 20:14:33,139:INFO:Defining folds
2023-02-02 20:14:33,140:INFO:Declaring metric variables
2023-02-02 20:14:33,144:INFO:Importing untrained model
2023-02-02 20:14:33,150:INFO:Elastic Net w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:14:33,158:INFO:Starting cross validation
2023-02-02 20:14:33,159:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:33,451:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:33,451:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:33,451:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:33,451:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:33,522:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:14:33,738:INFO:Calculating mean and std
2023-02-02 20:14:33,739:INFO:Creating metrics dataframe
2023-02-02 20:14:33,743:INFO:Uploading results into container
2023-02-02 20:14:33,743:INFO:Uploading model into container now
2023-02-02 20:14:33,744:INFO:_master_model_container: 12
2023-02-02 20:14:33,744:INFO:_display_container: 2
2023-02-02 20:14:33,746:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=ElasticNet(random_state=6153), sp=7,
                    window_length=7)
2023-02-02 20:14:33,746:INFO:create_model() successfully completed......................................
2023-02-02 20:14:33,947:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:33,947:INFO:Creating metrics dataframe
2023-02-02 20:14:33,963:INFO:Initializing Ridge w/ Cond. Deseasonalize & Detrending
2023-02-02 20:14:33,963:INFO:Total runtime is 0.5691200176874797 minutes
2023-02-02 20:14:33,967:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:33,967:INFO:Initializing create_model()
2023-02-02 20:14:33,967:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=ridge_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:33,967:INFO:Checking exceptions
2023-02-02 20:14:33,967:INFO:Importing libraries
2023-02-02 20:14:33,967:INFO:Copying training dataset
2023-02-02 20:14:33,972:INFO:Defining folds
2023-02-02 20:14:33,972:INFO:Declaring metric variables
2023-02-02 20:14:33,976:INFO:Importing untrained model
2023-02-02 20:14:33,981:INFO:Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:14:33,989:INFO:Starting cross validation
2023-02-02 20:14:33,990:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:34,274:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:34,274:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:34,274:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:34,274:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:34,341:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:14:34,555:INFO:Calculating mean and std
2023-02-02 20:14:34,556:INFO:Creating metrics dataframe
2023-02-02 20:14:34,560:INFO:Uploading results into container
2023-02-02 20:14:34,560:INFO:Uploading model into container now
2023-02-02 20:14:34,560:INFO:_master_model_container: 13
2023-02-02 20:14:34,560:INFO:_display_container: 2
2023-02-02 20:14:34,562:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Ridge(random_state=6153), sp=7, window_length=7)
2023-02-02 20:14:34,562:INFO:create_model() successfully completed......................................
2023-02-02 20:14:34,762:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:34,763:INFO:Creating metrics dataframe
2023-02-02 20:14:34,780:INFO:Initializing Lasso w/ Cond. Deseasonalize & Detrending
2023-02-02 20:14:34,780:INFO:Total runtime is 0.5827340881029764 minutes
2023-02-02 20:14:34,784:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:34,784:INFO:Initializing create_model()
2023-02-02 20:14:34,784:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=lasso_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:34,784:INFO:Checking exceptions
2023-02-02 20:14:34,784:INFO:Importing libraries
2023-02-02 20:14:34,785:INFO:Copying training dataset
2023-02-02 20:14:34,791:INFO:Defining folds
2023-02-02 20:14:34,791:INFO:Declaring metric variables
2023-02-02 20:14:34,795:INFO:Importing untrained model
2023-02-02 20:14:34,800:INFO:Lasso w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:14:34,809:INFO:Starting cross validation
2023-02-02 20:14:34,810:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:35,110:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:35,110:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:35,110:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:35,110:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:35,179:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:14:35,406:INFO:Calculating mean and std
2023-02-02 20:14:35,407:INFO:Creating metrics dataframe
2023-02-02 20:14:35,411:INFO:Uploading results into container
2023-02-02 20:14:35,411:INFO:Uploading model into container now
2023-02-02 20:14:35,412:INFO:_master_model_container: 14
2023-02-02 20:14:35,412:INFO:_display_container: 2
2023-02-02 20:14:35,414:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Lasso(random_state=6153), sp=7, window_length=7)
2023-02-02 20:14:35,414:INFO:create_model() successfully completed......................................
2023-02-02 20:14:35,612:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:35,612:INFO:Creating metrics dataframe
2023-02-02 20:14:35,630:INFO:Initializing Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-02-02 20:14:35,630:INFO:Total runtime is 0.5969086845715841 minutes
2023-02-02 20:14:35,634:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:35,634:INFO:Initializing create_model()
2023-02-02 20:14:35,634:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=lar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:35,634:INFO:Checking exceptions
2023-02-02 20:14:35,634:INFO:Importing libraries
2023-02-02 20:14:35,634:INFO:Copying training dataset
2023-02-02 20:14:35,639:INFO:Defining folds
2023-02-02 20:14:35,639:INFO:Declaring metric variables
2023-02-02 20:14:35,644:INFO:Importing untrained model
2023-02-02 20:14:35,649:INFO:Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:14:35,657:INFO:Starting cross validation
2023-02-02 20:14:35,658:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:35,943:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:35,943:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:35,943:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:35,943:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:36,010:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:14:36,085:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 20:14:36,247:INFO:Calculating mean and std
2023-02-02 20:14:36,247:INFO:Creating metrics dataframe
2023-02-02 20:14:36,251:INFO:Uploading results into container
2023-02-02 20:14:36,252:INFO:Uploading model into container now
2023-02-02 20:14:36,252:INFO:_master_model_container: 15
2023-02-02 20:14:36,252:INFO:_display_container: 2
2023-02-02 20:14:36,255:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Lars(random_state=6153), sp=7, window_length=7)
2023-02-02 20:14:36,255:INFO:create_model() successfully completed......................................
2023-02-02 20:14:36,462:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:36,463:INFO:Creating metrics dataframe
2023-02-02 20:14:36,479:INFO:Initializing Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-02-02 20:14:36,479:INFO:Total runtime is 0.6110537926355998 minutes
2023-02-02 20:14:36,483:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:36,483:INFO:Initializing create_model()
2023-02-02 20:14:36,483:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=llar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:36,483:INFO:Checking exceptions
2023-02-02 20:14:36,483:INFO:Importing libraries
2023-02-02 20:14:36,484:INFO:Copying training dataset
2023-02-02 20:14:36,489:INFO:Defining folds
2023-02-02 20:14:36,490:INFO:Declaring metric variables
2023-02-02 20:14:36,494:INFO:Importing untrained model
2023-02-02 20:14:36,500:INFO:Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:14:36,508:INFO:Starting cross validation
2023-02-02 20:14:36,509:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:36,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:36,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:36,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:36,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:36,859:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:14:36,936:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 20:14:37,089:INFO:Calculating mean and std
2023-02-02 20:14:37,090:INFO:Creating metrics dataframe
2023-02-02 20:14:37,095:INFO:Uploading results into container
2023-02-02 20:14:37,095:INFO:Uploading model into container now
2023-02-02 20:14:37,095:INFO:_master_model_container: 16
2023-02-02 20:14:37,096:INFO:_display_container: 2
2023-02-02 20:14:37,098:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LassoLars(random_state=6153), sp=7,
                    window_length=7)
2023-02-02 20:14:37,098:INFO:create_model() successfully completed......................................
2023-02-02 20:14:37,312:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:37,312:INFO:Creating metrics dataframe
2023-02-02 20:14:37,330:INFO:Initializing Bayesian Ridge w/ Cond. Deseasonalize & Detrending
2023-02-02 20:14:37,331:INFO:Total runtime is 0.6252546230951945 minutes
2023-02-02 20:14:37,335:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:37,336:INFO:Initializing create_model()
2023-02-02 20:14:37,336:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=br_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:37,336:INFO:Checking exceptions
2023-02-02 20:14:37,336:INFO:Importing libraries
2023-02-02 20:14:37,336:INFO:Copying training dataset
2023-02-02 20:14:37,342:INFO:Defining folds
2023-02-02 20:14:37,342:INFO:Declaring metric variables
2023-02-02 20:14:37,346:INFO:Importing untrained model
2023-02-02 20:14:37,351:INFO:Bayesian Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:14:37,359:INFO:Starting cross validation
2023-02-02 20:14:37,361:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:37,653:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:37,653:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:37,653:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:37,653:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:37,723:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:14:37,941:INFO:Calculating mean and std
2023-02-02 20:14:37,942:INFO:Creating metrics dataframe
2023-02-02 20:14:37,946:INFO:Uploading results into container
2023-02-02 20:14:37,946:INFO:Uploading model into container now
2023-02-02 20:14:37,947:INFO:_master_model_container: 17
2023-02-02 20:14:37,947:INFO:_display_container: 2
2023-02-02 20:14:37,949:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=BayesianRidge(), sp=7, window_length=7)
2023-02-02 20:14:37,949:INFO:create_model() successfully completed......................................
2023-02-02 20:14:38,158:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:38,158:INFO:Creating metrics dataframe
2023-02-02 20:14:38,176:INFO:Initializing Huber w/ Cond. Deseasonalize & Detrending
2023-02-02 20:14:38,176:INFO:Total runtime is 0.6393368562062581 minutes
2023-02-02 20:14:38,181:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:38,181:INFO:Initializing create_model()
2023-02-02 20:14:38,181:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=huber_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:38,181:INFO:Checking exceptions
2023-02-02 20:14:38,181:INFO:Importing libraries
2023-02-02 20:14:38,182:INFO:Copying training dataset
2023-02-02 20:14:38,188:INFO:Defining folds
2023-02-02 20:14:38,188:INFO:Declaring metric variables
2023-02-02 20:14:38,192:INFO:Importing untrained model
2023-02-02 20:14:38,197:INFO:Huber w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:14:38,206:INFO:Starting cross validation
2023-02-02 20:14:38,207:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:38,497:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:38,497:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:38,497:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:38,497:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-02-02 20:14:38,567:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:14:38,684:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-02-02 20:14:38,845:INFO:Calculating mean and std
2023-02-02 20:14:38,846:INFO:Creating metrics dataframe
2023-02-02 20:14:38,852:INFO:Uploading results into container
2023-02-02 20:14:38,852:INFO:Uploading model into container now
2023-02-02 20:14:38,852:INFO:_master_model_container: 18
2023-02-02 20:14:38,852:INFO:_display_container: 2
2023-02-02 20:14:38,854:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=HuberRegressor(), sp=7, window_length=7)
2023-02-02 20:14:38,854:INFO:create_model() successfully completed......................................
2023-02-02 20:14:39,062:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:39,063:INFO:Creating metrics dataframe
2023-02-02 20:14:39,081:INFO:Initializing Passive Aggressive w/ Cond. Deseasonalize & Detrending
2023-02-02 20:14:39,082:INFO:Total runtime is 0.654435149828593 minutes
2023-02-02 20:14:39,086:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:39,086:INFO:Initializing create_model()
2023-02-02 20:14:39,086:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=par_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:39,086:INFO:Checking exceptions
2023-02-02 20:14:39,086:INFO:Importing libraries
2023-02-02 20:14:39,087:INFO:Copying training dataset
2023-02-02 20:14:39,092:INFO:Defining folds
2023-02-02 20:14:39,092:INFO:Declaring metric variables
2023-02-02 20:14:39,097:INFO:Importing untrained model
2023-02-02 20:14:39,101:INFO:Passive Aggressive w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:14:39,110:INFO:Starting cross validation
2023-02-02 20:14:39,111:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:39,347:INFO:Calculating mean and std
2023-02-02 20:14:39,348:INFO:Creating metrics dataframe
2023-02-02 20:14:39,353:INFO:Uploading results into container
2023-02-02 20:14:39,353:INFO:Uploading model into container now
2023-02-02 20:14:39,353:INFO:_master_model_container: 19
2023-02-02 20:14:39,354:INFO:_display_container: 2
2023-02-02 20:14:39,356:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=PassiveAggressiveRegressor(random_state=6153),
                    sp=7, window_length=7)
2023-02-02 20:14:39,356:INFO:create_model() successfully completed......................................
2023-02-02 20:14:39,567:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:39,568:INFO:Creating metrics dataframe
2023-02-02 20:14:39,585:INFO:Initializing Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending
2023-02-02 20:14:39,585:INFO:Total runtime is 0.6628116766611736 minutes
2023-02-02 20:14:39,589:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:39,589:INFO:Initializing create_model()
2023-02-02 20:14:39,590:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=omp_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:39,590:INFO:Checking exceptions
2023-02-02 20:14:39,590:INFO:Importing libraries
2023-02-02 20:14:39,590:INFO:Copying training dataset
2023-02-02 20:14:39,595:INFO:Defining folds
2023-02-02 20:14:39,595:INFO:Declaring metric variables
2023-02-02 20:14:39,600:INFO:Importing untrained model
2023-02-02 20:14:39,605:INFO:Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:14:39,613:INFO:Starting cross validation
2023-02-02 20:14:39,614:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:39,696:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 20:14:39,852:INFO:Calculating mean and std
2023-02-02 20:14:39,853:INFO:Creating metrics dataframe
2023-02-02 20:14:39,857:INFO:Uploading results into container
2023-02-02 20:14:39,857:INFO:Uploading model into container now
2023-02-02 20:14:39,858:INFO:_master_model_container: 20
2023-02-02 20:14:39,858:INFO:_display_container: 2
2023-02-02 20:14:39,860:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=OrthogonalMatchingPursuit(), sp=7,
                    window_length=7)
2023-02-02 20:14:39,860:INFO:create_model() successfully completed......................................
2023-02-02 20:14:40,058:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:40,058:INFO:Creating metrics dataframe
2023-02-02 20:14:40,077:INFO:Initializing K Neighbors w/ Cond. Deseasonalize & Detrending
2023-02-02 20:14:40,077:INFO:Total runtime is 0.6710195541381837 minutes
2023-02-02 20:14:40,081:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:40,081:INFO:Initializing create_model()
2023-02-02 20:14:40,081:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=knn_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:40,081:INFO:Checking exceptions
2023-02-02 20:14:40,081:INFO:Importing libraries
2023-02-02 20:14:40,081:INFO:Copying training dataset
2023-02-02 20:14:40,086:INFO:Defining folds
2023-02-02 20:14:40,086:INFO:Declaring metric variables
2023-02-02 20:14:40,091:INFO:Importing untrained model
2023-02-02 20:14:40,096:INFO:K Neighbors w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:14:40,104:INFO:Starting cross validation
2023-02-02 20:14:40,105:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:40,367:INFO:Calculating mean and std
2023-02-02 20:14:40,368:INFO:Creating metrics dataframe
2023-02-02 20:14:40,372:INFO:Uploading results into container
2023-02-02 20:14:40,373:INFO:Uploading model into container now
2023-02-02 20:14:40,373:INFO:_master_model_container: 21
2023-02-02 20:14:40,373:INFO:_display_container: 2
2023-02-02 20:14:40,375:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=KNeighborsRegressor(n_jobs=-1), sp=7,
                    window_length=7)
2023-02-02 20:14:40,375:INFO:create_model() successfully completed......................................
2023-02-02 20:14:40,577:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:40,577:INFO:Creating metrics dataframe
2023-02-02 20:14:40,596:INFO:Initializing Decision Tree w/ Cond. Deseasonalize & Detrending
2023-02-02 20:14:40,597:INFO:Total runtime is 0.6796873052914938 minutes
2023-02-02 20:14:40,601:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:40,601:INFO:Initializing create_model()
2023-02-02 20:14:40,601:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=dt_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:40,601:INFO:Checking exceptions
2023-02-02 20:14:40,601:INFO:Importing libraries
2023-02-02 20:14:40,601:INFO:Copying training dataset
2023-02-02 20:14:40,607:INFO:Defining folds
2023-02-02 20:14:40,607:INFO:Declaring metric variables
2023-02-02 20:14:40,611:INFO:Importing untrained model
2023-02-02 20:14:40,616:INFO:Decision Tree w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:14:40,624:INFO:Starting cross validation
2023-02-02 20:14:40,625:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:40,842:INFO:Calculating mean and std
2023-02-02 20:14:40,843:INFO:Creating metrics dataframe
2023-02-02 20:14:40,847:INFO:Uploading results into container
2023-02-02 20:14:40,847:INFO:Uploading model into container now
2023-02-02 20:14:40,848:INFO:_master_model_container: 22
2023-02-02 20:14:40,848:INFO:_display_container: 2
2023-02-02 20:14:40,851:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=DecisionTreeRegressor(random_state=6153), sp=7,
                    window_length=7)
2023-02-02 20:14:40,851:INFO:create_model() successfully completed......................................
2023-02-02 20:14:41,049:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:41,049:INFO:Creating metrics dataframe
2023-02-02 20:14:41,068:INFO:Initializing Random Forest w/ Cond. Deseasonalize & Detrending
2023-02-02 20:14:41,068:INFO:Total runtime is 0.6875325083732605 minutes
2023-02-02 20:14:41,073:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:41,073:INFO:Initializing create_model()
2023-02-02 20:14:41,073:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=rf_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:41,073:INFO:Checking exceptions
2023-02-02 20:14:41,073:INFO:Importing libraries
2023-02-02 20:14:41,074:INFO:Copying training dataset
2023-02-02 20:14:41,080:INFO:Defining folds
2023-02-02 20:14:41,080:INFO:Declaring metric variables
2023-02-02 20:14:41,085:INFO:Importing untrained model
2023-02-02 20:14:41,090:INFO:Random Forest w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:14:41,099:INFO:Starting cross validation
2023-02-02 20:14:41,100:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:41,585:INFO:Calculating mean and std
2023-02-02 20:14:41,586:INFO:Creating metrics dataframe
2023-02-02 20:14:41,591:INFO:Uploading results into container
2023-02-02 20:14:41,591:INFO:Uploading model into container now
2023-02-02 20:14:41,591:INFO:_master_model_container: 23
2023-02-02 20:14:41,592:INFO:_display_container: 2
2023-02-02 20:14:41,595:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=RandomForestRegressor(n_jobs=-1,
                                                    random_state=6153),
                    sp=7, window_length=7)
2023-02-02 20:14:41,595:INFO:create_model() successfully completed......................................
2023-02-02 20:14:41,803:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:41,804:INFO:Creating metrics dataframe
2023-02-02 20:14:41,824:INFO:Initializing Extra Trees w/ Cond. Deseasonalize & Detrending
2023-02-02 20:14:41,824:INFO:Total runtime is 0.700139049688975 minutes
2023-02-02 20:14:41,828:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:41,828:INFO:Initializing create_model()
2023-02-02 20:14:41,828:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=et_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:41,829:INFO:Checking exceptions
2023-02-02 20:14:41,829:INFO:Importing libraries
2023-02-02 20:14:41,829:INFO:Copying training dataset
2023-02-02 20:14:41,834:INFO:Defining folds
2023-02-02 20:14:41,834:INFO:Declaring metric variables
2023-02-02 20:14:41,838:INFO:Importing untrained model
2023-02-02 20:14:41,843:INFO:Extra Trees w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:14:41,851:INFO:Starting cross validation
2023-02-02 20:14:41,853:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:42,303:INFO:Calculating mean and std
2023-02-02 20:14:42,305:INFO:Creating metrics dataframe
2023-02-02 20:14:42,308:INFO:Uploading results into container
2023-02-02 20:14:42,309:INFO:Uploading model into container now
2023-02-02 20:14:42,309:INFO:_master_model_container: 24
2023-02-02 20:14:42,309:INFO:_display_container: 2
2023-02-02 20:14:42,311:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(n_jobs=-1, random_state=6153),
                    sp=7, window_length=7)
2023-02-02 20:14:42,311:INFO:create_model() successfully completed......................................
2023-02-02 20:14:42,515:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:42,515:INFO:Creating metrics dataframe
2023-02-02 20:14:42,537:INFO:Initializing Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-02-02 20:14:42,537:INFO:Total runtime is 0.7120173891385396 minutes
2023-02-02 20:14:42,542:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:42,542:INFO:Initializing create_model()
2023-02-02 20:14:42,542:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=gbr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:42,542:INFO:Checking exceptions
2023-02-02 20:14:42,542:INFO:Importing libraries
2023-02-02 20:14:42,542:INFO:Copying training dataset
2023-02-02 20:14:42,547:INFO:Defining folds
2023-02-02 20:14:42,547:INFO:Declaring metric variables
2023-02-02 20:14:42,552:INFO:Importing untrained model
2023-02-02 20:14:42,557:INFO:Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:14:42,564:INFO:Starting cross validation
2023-02-02 20:14:42,566:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:42,819:INFO:Calculating mean and std
2023-02-02 20:14:42,820:INFO:Creating metrics dataframe
2023-02-02 20:14:42,824:INFO:Uploading results into container
2023-02-02 20:14:42,824:INFO:Uploading model into container now
2023-02-02 20:14:42,825:INFO:_master_model_container: 25
2023-02-02 20:14:42,825:INFO:_display_container: 2
2023-02-02 20:14:42,827:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=GradientBoostingRegressor(random_state=6153),
                    sp=7, window_length=7)
2023-02-02 20:14:42,827:INFO:create_model() successfully completed......................................
2023-02-02 20:14:43,033:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:43,033:INFO:Creating metrics dataframe
2023-02-02 20:14:43,056:INFO:Initializing AdaBoost w/ Cond. Deseasonalize & Detrending
2023-02-02 20:14:43,056:INFO:Total runtime is 0.7206670085589091 minutes
2023-02-02 20:14:43,061:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:43,061:INFO:Initializing create_model()
2023-02-02 20:14:43,061:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=ada_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:43,061:INFO:Checking exceptions
2023-02-02 20:14:43,061:INFO:Importing libraries
2023-02-02 20:14:43,061:INFO:Copying training dataset
2023-02-02 20:14:43,067:INFO:Defining folds
2023-02-02 20:14:43,067:INFO:Declaring metric variables
2023-02-02 20:14:43,071:INFO:Importing untrained model
2023-02-02 20:14:43,076:INFO:AdaBoost w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:14:43,084:INFO:Starting cross validation
2023-02-02 20:14:43,085:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:43,380:INFO:Calculating mean and std
2023-02-02 20:14:43,381:INFO:Creating metrics dataframe
2023-02-02 20:14:43,385:INFO:Uploading results into container
2023-02-02 20:14:43,386:INFO:Uploading model into container now
2023-02-02 20:14:43,386:INFO:_master_model_container: 26
2023-02-02 20:14:43,386:INFO:_display_container: 2
2023-02-02 20:14:43,389:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=AdaBoostRegressor(random_state=6153), sp=7,
                    window_length=7)
2023-02-02 20:14:43,389:INFO:create_model() successfully completed......................................
2023-02-02 20:14:43,592:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:43,592:INFO:Creating metrics dataframe
2023-02-02 20:14:43,614:INFO:Initializing Light Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-02-02 20:14:43,614:INFO:Total runtime is 0.7299609065055847 minutes
2023-02-02 20:14:43,618:INFO:SubProcess create_model() called ==================================
2023-02-02 20:14:43,618:INFO:Initializing create_model()
2023-02-02 20:14:43,618:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=lightgbm_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C128BBDD90>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:43,618:INFO:Checking exceptions
2023-02-02 20:14:43,618:INFO:Importing libraries
2023-02-02 20:14:43,618:INFO:Copying training dataset
2023-02-02 20:14:43,623:INFO:Defining folds
2023-02-02 20:14:43,624:INFO:Declaring metric variables
2023-02-02 20:14:43,628:INFO:Importing untrained model
2023-02-02 20:14:43,633:INFO:Light Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:14:43,641:INFO:Starting cross validation
2023-02-02 20:14:43,642:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:43,889:INFO:Calculating mean and std
2023-02-02 20:14:43,890:INFO:Creating metrics dataframe
2023-02-02 20:14:43,894:INFO:Uploading results into container
2023-02-02 20:14:43,895:INFO:Uploading model into container now
2023-02-02 20:14:43,895:INFO:_master_model_container: 27
2023-02-02 20:14:43,895:INFO:_display_container: 2
2023-02-02 20:14:43,897:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LGBMRegressor(random_state=6153), sp=7,
                    window_length=7)
2023-02-02 20:14:43,898:INFO:create_model() successfully completed......................................
2023-02-02 20:14:44,100:INFO:SubProcess create_model() end ==================================
2023-02-02 20:14:44,100:INFO:Creating metrics dataframe
2023-02-02 20:14:44,134:INFO:Initializing create_model()
2023-02-02 20:14:44,135:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:44,135:INFO:Checking exceptions
2023-02-02 20:14:44,137:INFO:Importing libraries
2023-02-02 20:14:44,137:INFO:Copying training dataset
2023-02-02 20:14:44,141:INFO:Defining folds
2023-02-02 20:14:44,141:INFO:Declaring metric variables
2023-02-02 20:14:44,141:INFO:Importing untrained model
2023-02-02 20:14:44,142:INFO:Declaring custom model
2023-02-02 20:14:44,143:INFO:ARIMA Imported successfully
2023-02-02 20:14:44,143:INFO:Cross validation set to False
2023-02-02 20:14:44,143:INFO:Fitting Model
2023-02-02 20:14:44,204:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 20:14:44,204:INFO:create_model() successfully completed......................................
2023-02-02 20:14:44,451:INFO:_master_model_container: 27
2023-02-02 20:14:44,452:INFO:_display_container: 2
2023-02-02 20:14:44,452:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 20:14:44,452:INFO:compare_models() successfully completed......................................
2023-02-02 20:14:44,463:INFO:Initializing create_model()
2023-02-02 20:14:44,463:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:14:44,463:INFO:Checking exceptions
2023-02-02 20:14:44,485:INFO:Importing libraries
2023-02-02 20:14:44,485:INFO:Copying training dataset
2023-02-02 20:14:44,492:INFO:Defining folds
2023-02-02 20:14:44,492:INFO:Declaring metric variables
2023-02-02 20:14:44,497:INFO:Importing untrained model
2023-02-02 20:14:44,502:INFO:ARIMA Imported successfully
2023-02-02 20:14:44,512:INFO:Starting cross validation
2023-02-02 20:14:44,513:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:14:44,634:INFO:Calculating mean and std
2023-02-02 20:14:44,635:INFO:Creating metrics dataframe
2023-02-02 20:14:44,642:INFO:Finalizing model
2023-02-02 20:14:44,704:INFO:Uploading results into container
2023-02-02 20:14:44,705:INFO:Uploading model into container now
2023-02-02 20:14:44,714:INFO:_master_model_container: 28
2023-02-02 20:14:44,715:INFO:_display_container: 3
2023-02-02 20:14:44,715:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 20:14:44,715:INFO:create_model() successfully completed......................................
2023-02-02 20:14:45,028:INFO:Visual Rendered Successfully
2023-02-02 20:14:45,053:INFO:Initializing finalize_model()
2023-02-02 20:14:45,053:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 20:14:45,054:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 20:14:45,058:INFO:Initializing create_model()
2023-02-02 20:14:45,058:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D503A90>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 20:14:45,058:INFO:Checking exceptions
2023-02-02 20:14:45,060:INFO:Importing libraries
2023-02-02 20:14:45,060:INFO:Copying training dataset
2023-02-02 20:14:45,063:INFO:Defining folds
2023-02-02 20:14:45,063:INFO:Declaring metric variables
2023-02-02 20:14:45,064:INFO:Importing untrained model
2023-02-02 20:14:45,064:INFO:Declaring custom model
2023-02-02 20:14:45,065:INFO:ARIMA Imported successfully
2023-02-02 20:14:45,066:INFO:Cross validation set to False
2023-02-02 20:14:45,066:INFO:Fitting Model
2023-02-02 20:14:45,134:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:14:45,134:INFO:create_model() successfully completed......................................
2023-02-02 20:14:45,339:INFO:_master_model_container: 28
2023-02-02 20:14:45,339:INFO:_display_container: 3
2023-02-02 20:14:45,345:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:14:45,345:INFO:finalize_model() successfully completed......................................
2023-02-02 20:14:45,607:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:14:45,890:INFO:Visual Rendered Successfully
2023-02-02 20:14:45,966:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:15:23,261:INFO:PyCaret TSForecastingExperiment
2023-02-02 20:15:23,261:INFO:Logging name: ts-default-name
2023-02-02 20:15:23,261:INFO:ML Usecase: MLUsecase.TIME_SERIES
2023-02-02 20:15:23,261:INFO:version 3.0.0.rc8
2023-02-02 20:15:23,261:INFO:Initializing setup()
2023-02-02 20:15:23,261:INFO:self.USI: a32e
2023-02-02 20:15:23,261:INFO:self._variable_keys: {'gpu_n_jobs_param', 'candidate_sps', 'fold_generator', 'n_jobs_param', 'enforce_exogenous', 'y_test_transformed', 'enforce_pi', 'pipeline', 'X_test', 'fh', 'idx', 'y_test', 'primary_sp_to_use', 'memory', 'html_param', 'gpu_param', 'data', 'approach_type', 'log_plots_param', 'y_transformed', 'X_test_transformed', 'exp_name_log', 'fold_param', 'strictly_positive', 'seed', 'X', 'exp_id', 'X_train_transformed', 'exogenous_present', 'model_engines', 'X_transformed', 'index_type', 'all_sps_to_use', 'seasonality_present', 'y_train', 'USI', 'y', 'X_train', 'significant_sps', 'y_train_transformed', '_available_plots', 'logging_param', 'significant_sps_no_harmonics', '_ml_usecase'}
2023-02-02 20:15:23,262:INFO:Checking environment
2023-02-02 20:15:23,262:INFO:python_version: 3.9.16
2023-02-02 20:15:23,262:INFO:python_build: ('main', 'Jan 11 2023 16:16:36')
2023-02-02 20:15:23,262:INFO:machine: AMD64
2023-02-02 20:15:23,262:INFO:platform: Windows-10-10.0.19045-SP0
2023-02-02 20:15:23,262:INFO:Memory: svmem(total=12825538560, available=3420758016, percent=73.3, used=9404780544, free=3420758016)
2023-02-02 20:15:23,262:INFO:Physical Core: 4
2023-02-02 20:15:23,262:INFO:Logical Core: 8
2023-02-02 20:15:23,263:INFO:Checking libraries
2023-02-02 20:15:23,263:INFO:System:
2023-02-02 20:15:23,263:INFO:    python: 3.9.16 (main, Jan 11 2023, 16:16:36) [MSC v.1916 64 bit (AMD64)]
2023-02-02 20:15:23,263:INFO:executable: C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\python.exe
2023-02-02 20:15:23,263:INFO:   machine: Windows-10-10.0.19045-SP0
2023-02-02 20:15:23,263:INFO:PyCaret required dependencies:
2023-02-02 20:15:23,263:INFO:                 pip: 22.3.1
2023-02-02 20:15:23,263:INFO:          setuptools: 65.6.3
2023-02-02 20:15:23,263:INFO:             pycaret: 3.0.0rc8
2023-02-02 20:15:23,264:INFO:             IPython: 8.9.0
2023-02-02 20:15:23,264:INFO:          ipywidgets: 8.0.4
2023-02-02 20:15:23,264:INFO:                tqdm: 4.64.1
2023-02-02 20:15:23,264:INFO:               numpy: 1.23.5
2023-02-02 20:15:23,264:INFO:              pandas: 1.5.3
2023-02-02 20:15:23,264:INFO:              jinja2: 3.1.2
2023-02-02 20:15:23,264:INFO:               scipy: 1.10.0
2023-02-02 20:15:23,264:INFO:              joblib: 1.2.0
2023-02-02 20:15:23,264:INFO:             sklearn: 1.1.3
2023-02-02 20:15:23,264:INFO:                pyod: 1.0.7
2023-02-02 20:15:23,265:INFO:            imblearn: 0.10.1
2023-02-02 20:15:23,265:INFO:   category_encoders: 2.6.0
2023-02-02 20:15:23,265:INFO:            lightgbm: 3.3.5
2023-02-02 20:15:23,265:INFO:               numba: 0.56.4
2023-02-02 20:15:23,265:INFO:            requests: 2.28.2
2023-02-02 20:15:23,265:INFO:          matplotlib: 3.7.0rc1
2023-02-02 20:15:23,265:INFO:          scikitplot: 0.3.7
2023-02-02 20:15:23,265:INFO:         yellowbrick: 1.5
2023-02-02 20:15:23,265:INFO:              plotly: 5.13.0
2023-02-02 20:15:23,265:INFO:             kaleido: 0.2.1
2023-02-02 20:15:23,266:INFO:         statsmodels: 0.13.5
2023-02-02 20:15:23,266:INFO:              sktime: 0.16.0
2023-02-02 20:15:23,266:INFO:               tbats: 1.1.2
2023-02-02 20:15:23,266:INFO:            pmdarima: 2.0.2
2023-02-02 20:15:23,266:INFO:              psutil: 5.9.4
2023-02-02 20:15:23,266:INFO:PyCaret optional dependencies:
2023-02-02 20:15:23,266:INFO:                shap: Not installed
2023-02-02 20:15:23,266:INFO:           interpret: Not installed
2023-02-02 20:15:23,266:INFO:                umap: Not installed
2023-02-02 20:15:23,267:INFO:    pandas_profiling: Not installed
2023-02-02 20:15:23,267:INFO:  explainerdashboard: Not installed
2023-02-02 20:15:23,267:INFO:             autoviz: Not installed
2023-02-02 20:15:23,267:INFO:           fairlearn: Not installed
2023-02-02 20:15:23,267:INFO:             xgboost: Not installed
2023-02-02 20:15:23,267:INFO:            catboost: Not installed
2023-02-02 20:15:23,267:INFO:              kmodes: Not installed
2023-02-02 20:15:23,267:INFO:             mlxtend: Not installed
2023-02-02 20:15:23,267:INFO:       statsforecast: Not installed
2023-02-02 20:15:23,267:INFO:        tune_sklearn: Not installed
2023-02-02 20:15:23,268:INFO:                 ray: Not installed
2023-02-02 20:15:23,268:INFO:            hyperopt: Not installed
2023-02-02 20:15:23,268:INFO:              optuna: Not installed
2023-02-02 20:15:23,268:INFO:               skopt: Not installed
2023-02-02 20:15:23,268:INFO:              mlflow: Not installed
2023-02-02 20:15:23,268:INFO:              gradio: Not installed
2023-02-02 20:15:23,268:INFO:             fastapi: Not installed
2023-02-02 20:15:23,268:INFO:             uvicorn: Not installed
2023-02-02 20:15:23,268:INFO:              m2cgen: Not installed
2023-02-02 20:15:23,268:INFO:           evidently: Not installed
2023-02-02 20:15:23,268:INFO:                nltk: Not installed
2023-02-02 20:15:23,269:INFO:            pyLDAvis: Not installed
2023-02-02 20:15:23,269:INFO:              gensim: Not installed
2023-02-02 20:15:23,269:INFO:               spacy: Not installed
2023-02-02 20:15:23,269:INFO:           wordcloud: Not installed
2023-02-02 20:15:23,269:INFO:            textblob: Not installed
2023-02-02 20:15:23,269:INFO:               fugue: Not installed
2023-02-02 20:15:23,269:INFO:           streamlit: Not installed
2023-02-02 20:15:23,269:INFO:             prophet: Not installed
2023-02-02 20:15:23,269:INFO:None
2023-02-02 20:15:23,276:INFO:Set Forecast Horizon.
2023-02-02 20:15:23,278:INFO:Set up Train-Test Splits.
2023-02-02 20:15:23,321:INFO:Finished creating preprocessing pipeline.
2023-02-02 20:15:23,323:INFO:Pipeline: ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                DummyForecaster())]))])
2023-02-02 20:15:23,323:INFO:Set up Seasonal Period.
2023-02-02 20:15:23,324:INFO:Set up whether Multiplicative components allowed.
2023-02-02 20:15:23,356:INFO:Creating final display dataframe.
2023-02-02 20:15:23,367:INFO:Setup Display Container:                                          Description                    Value
0                                         session_id                     8212
1                                             Target                   Vendas
2                                           Approach               Univariate
3                                Exogenous Variables              Not Present
4                                Original data shape                  (46, 1)
5                             Transformed data shape                  (46, 1)
6                        Transformed train set shape                  (41, 1)
7                         Transformed test set shape                   (5, 1)
8                           Rows with missing values                     0.0%
9                                     Fold Generator  ExpandingWindowSplitter
10                                       Fold Number                        1
11                       Enforce Prediction Interval                    False
12                   Splits used for hyperparameters                      all
13                        Seasonality Detection Algo                     auto
14                            Max Period to Consider                     None
15                         Seasonal Period(s) Tested                      [7]
16                    Significant Seasonal Period(s)                      [7]
17  Significant Seasonal Period(s) without Harmonics                      [7]
18                                  Remove Harmonics                    False
19                            Harmonics Order Method             harmonic_max
20                          Num Seasonalities to Use                        1
21                          All Seasonalities to Use                      [7]
22                               Primary Seasonality                        7
23                               Seasonality Present                     True
24                          Target Strictly Positive                     True
25                                Target White Noise                       No
26                                     Recommended d                        0
27                            Recommended Seasonal D                        1
28                                        Preprocess                    False
29                                          CPU Jobs                       -1
30                                           Use GPU                    False
31                                    Log Experiment                    False
32                                   Experiment Name          ts-default-name
33                                               USI                     a32e
2023-02-02 20:15:23,375:INFO:Engine successfully changes for model 'auto_arima' to 'pmdarima'.
2023-02-02 20:15:23,379:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,379:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,380:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,380:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,380:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,381:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,381:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,381:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,382:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,382:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,384:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,386:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,386:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,387:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,387:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,387:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,387:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,388:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,388:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,388:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,388:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,388:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,388:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,389:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,392:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,392:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,392:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,393:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,393:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,393:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,393:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,394:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,394:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,394:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,396:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,398:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,398:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,399:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,399:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,399:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,400:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,400:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,400:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,400:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,400:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,401:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,401:INFO:Engine successfully changes for model 'lr_cds_dt' to 'sklearn'.
2023-02-02 20:15:23,404:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,404:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,405:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,405:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,405:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,406:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,406:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,406:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,406:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,408:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,410:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,410:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,411:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,411:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,411:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,412:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,412:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,412:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,412:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,412:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,413:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,413:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,413:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,416:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,416:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,416:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,417:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,417:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,417:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,417:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,418:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,418:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,420:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,422:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,422:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,423:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,423:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,423:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,423:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,424:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,424:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,424:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,424:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,424:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,425:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,425:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,425:INFO:Engine successfully changes for model 'en_cds_dt' to 'sklearn'.
2023-02-02 20:15:23,428:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,428:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,428:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,429:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,429:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,429:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,430:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,430:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,431:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,433:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,433:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,434:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,434:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,434:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,435:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,435:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,435:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,435:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,435:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,435:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,435:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,435:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,438:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,439:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,439:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,439:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,440:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,440:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,440:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,440:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,442:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,444:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,444:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,445:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,445:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,445:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,446:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,446:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,446:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,446:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,446:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,446:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,446:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,446:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,447:INFO:Engine successfully changes for model 'ridge_cds_dt' to 'sklearn'.
2023-02-02 20:15:23,450:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,450:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,450:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,451:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,451:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,451:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,452:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,453:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,455:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,455:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,455:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,456:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,456:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,457:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,457:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,457:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,457:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,458:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,458:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,458:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,458:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,461:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,462:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,462:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,462:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,463:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,463:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,463:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,465:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,467:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,467:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,467:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,468:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,468:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,468:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,468:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,468:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,469:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,469:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,469:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,469:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,469:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,469:INFO:Engine successfully changes for model 'lasso_cds_dt' to 'sklearn'.
2023-02-02 20:15:23,472:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,473:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,473:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,474:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,474:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,474:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,476:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,478:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,478:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,478:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,479:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,479:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,479:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,479:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,479:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,479:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,480:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,480:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,480:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,480:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,483:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,484:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,484:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,484:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,485:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,485:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,486:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,488:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,488:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,489:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,489:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,489:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,490:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,490:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,490:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,490:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,490:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,490:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,491:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,491:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,491:INFO:Engine successfully changes for model 'lar_cds_dt' to 'sklearn'.
2023-02-02 20:15:23,494:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,495:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,495:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,495:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,496:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,497:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,499:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,499:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,499:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,500:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,500:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,500:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,501:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,501:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,501:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,501:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,501:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,501:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,501:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,504:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,505:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,506:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,506:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,506:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,508:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,509:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,510:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,510:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,510:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,511:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,511:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,511:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,511:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,511:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,512:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,512:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,512:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,512:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,512:INFO:Engine successfully changes for model 'llar_cds_dt' to 'sklearn'.
2023-02-02 20:15:23,515:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,516:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,516:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,517:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,519:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,520:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,521:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,521:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,521:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,522:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,522:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,522:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,522:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,522:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,522:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,523:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,526:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,527:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,527:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,528:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,529:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,531:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,531:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,531:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,532:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,532:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,532:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,532:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,533:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,533:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,533:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,533:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,533:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,533:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,533:INFO:Engine successfully changes for model 'br_cds_dt' to 'sklearn'.
2023-02-02 20:15:23,536:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,538:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,538:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,539:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,541:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,541:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,542:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,542:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,542:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,543:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,543:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,543:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,543:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,543:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,544:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,544:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,544:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,547:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,548:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,548:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,550:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,551:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,552:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,552:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,552:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,553:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,553:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,553:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,553:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,553:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,554:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,554:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,554:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,554:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,554:INFO:Engine successfully changes for model 'huber_cds_dt' to 'sklearn'.
2023-02-02 20:15:23,557:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,559:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,561:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,563:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,563:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,563:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,564:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,564:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,564:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,564:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,564:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,565:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,565:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,565:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,565:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,565:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,568:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,570:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,571:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,573:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,573:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,573:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,574:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,574:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,574:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,575:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,575:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,575:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,575:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,575:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,575:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,575:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,576:INFO:Engine successfully changes for model 'par_cds_dt' to 'sklearn'.
2023-02-02 20:15:23,579:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,582:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,583:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,584:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,584:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,584:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,585:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,585:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,585:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,585:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,585:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,585:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,586:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,586:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,586:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,589:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,592:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,594:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,594:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,594:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,595:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,595:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,595:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,595:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,596:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,596:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,596:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,596:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,596:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,596:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,596:INFO:Engine successfully changes for model 'omp_cds_dt' to 'sklearn'.
2023-02-02 20:15:23,599:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,604:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,604:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,605:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,605:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,605:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,606:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,606:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,606:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,606:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,606:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,606:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,606:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,606:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,609:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,614:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,615:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,615:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,615:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,615:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,616:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,616:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,616:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,616:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,616:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,617:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,617:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,617:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,617:INFO:Engine successfully changes for model 'knn_cds_dt' to 'sklearn'.
2023-02-02 20:15:23,620:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,625:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,625:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,625:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,626:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,626:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,626:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,626:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,626:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,626:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,627:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,627:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,627:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,630:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,635:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,636:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,636:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,636:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,636:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,637:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,637:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,637:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,637:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,637:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,637:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,637:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,638:INFO:Engine successfully changes for model 'dt_cds_dt' to 'sklearn'.
2023-02-02 20:15:23,640:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,646:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,646:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,646:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,647:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,647:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,647:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,647:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,647:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,648:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,651:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,656:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,656:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,656:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,657:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,657:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,657:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,657:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,657:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,657:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,657:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,657:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,658:INFO:Engine successfully changes for model 'rf_cds_dt' to 'sklearn'.
2023-02-02 20:15:23,661:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,666:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,666:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,667:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,667:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,667:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,667:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,667:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,668:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,668:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,668:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,671:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,676:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,676:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,677:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,677:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,677:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,677:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,677:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,677:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,678:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,678:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,678:INFO:Engine successfully changes for model 'et_cds_dt' to 'sklearn'.
2023-02-02 20:15:23,681:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,686:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,687:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,687:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,687:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,687:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,687:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,688:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,688:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,688:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,691:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,697:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,697:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,698:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,698:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,698:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,698:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,698:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,698:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,698:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,699:INFO:Engine successfully changes for model 'gbr_cds_dt' to 'sklearn'.
2023-02-02 20:15:23,702:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,707:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,708:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,708:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,708:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,708:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,708:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,711:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,717:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,717:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,717:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,718:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,718:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,718:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,718:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,718:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,718:INFO:Engine successfully changes for model 'ada_cds_dt' to 'sklearn'.
2023-02-02 20:15:23,721:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,727:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,727:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,727:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,728:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,728:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,731:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,737:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,737:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,738:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,738:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,738:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,738:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,738:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,738:INFO:Engine successfully changes for model 'xgboost_cds_dt' to 'sklearn'.
2023-02-02 20:15:23,741:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,747:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,747:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,748:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,748:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,748:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,748:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,751:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,757:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,757:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,757:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,757:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,757:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,757:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,758:INFO:Engine successfully changes for model 'lightgbm_cds_dt' to 'sklearn'.
2023-02-02 20:15:23,761:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,767:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,767:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,767:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,767:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,767:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,770:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,776:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,776:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,777:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2023-02-02 20:15:23,777:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,777:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,777:INFO:Engine successfully changes for model 'catboost_cds_dt' to 'sklearn'.
2023-02-02 20:15:23,780:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,786:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,786:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,786:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,786:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,789:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,795:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,795:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,796:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,796:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,799:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,805:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,805:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,805:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,805:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,808:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-02-02 20:15:23,814:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,814:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,815:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,815:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-02-02 20:15:23,816:INFO:setup() successfully completed in 0.56s...............
2023-02-02 20:15:23,826:INFO:Initializing compare_models()
2023-02-02 20:15:23,827:INFO:compare_models(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, include=None, fold=None, round=4, cross_validation=True, sort=MASE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MASE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.time_series.forecasting.oop.TSForecastingExperiment'>}, exclude=None)
2023-02-02 20:15:23,827:INFO:Checking exceptions
2023-02-02 20:15:23,829:INFO:Preparing display monitor
2023-02-02 20:15:23,861:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:709: UserWarning:

Unsupported estimator `ensemble_forecaster` for method `compare_models()`, removing from model_library


2023-02-02 20:15:23,862:INFO:Initializing Naive Forecaster
2023-02-02 20:15:23,862:INFO:Total runtime is 0.0 minutes
2023-02-02 20:15:23,867:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:23,867:INFO:Initializing create_model()
2023-02-02 20:15:23,867:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=naive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:23,868:INFO:Checking exceptions
2023-02-02 20:15:23,868:INFO:Importing libraries
2023-02-02 20:15:23,868:INFO:Copying training dataset
2023-02-02 20:15:23,872:INFO:Defining folds
2023-02-02 20:15:23,873:INFO:Declaring metric variables
2023-02-02 20:15:23,877:INFO:Importing untrained model
2023-02-02 20:15:23,881:INFO:Naive Forecaster Imported successfully
2023-02-02 20:15:23,890:INFO:Starting cross validation
2023-02-02 20:15:23,892:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:23,935:INFO:Calculating mean and std
2023-02-02 20:15:23,935:INFO:Creating metrics dataframe
2023-02-02 20:15:23,940:INFO:Uploading results into container
2023-02-02 20:15:23,940:INFO:Uploading model into container now
2023-02-02 20:15:23,940:INFO:_master_model_container: 1
2023-02-02 20:15:23,940:INFO:_display_container: 2
2023-02-02 20:15:23,940:INFO:NaiveForecaster()
2023-02-02 20:15:23,940:INFO:create_model() successfully completed......................................
2023-02-02 20:15:24,146:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:24,146:INFO:Creating metrics dataframe
2023-02-02 20:15:24,158:INFO:Initializing Grand Means Forecaster
2023-02-02 20:15:24,158:INFO:Total runtime is 0.0049302895863850916 minutes
2023-02-02 20:15:24,162:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:24,162:INFO:Initializing create_model()
2023-02-02 20:15:24,162:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=grand_means, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:24,162:INFO:Checking exceptions
2023-02-02 20:15:24,163:INFO:Importing libraries
2023-02-02 20:15:24,163:INFO:Copying training dataset
2023-02-02 20:15:24,167:INFO:Defining folds
2023-02-02 20:15:24,167:INFO:Declaring metric variables
2023-02-02 20:15:24,171:INFO:Importing untrained model
2023-02-02 20:15:24,176:INFO:Grand Means Forecaster Imported successfully
2023-02-02 20:15:24,187:INFO:Starting cross validation
2023-02-02 20:15:24,189:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:24,234:INFO:Calculating mean and std
2023-02-02 20:15:24,235:INFO:Creating metrics dataframe
2023-02-02 20:15:24,239:INFO:Uploading results into container
2023-02-02 20:15:24,239:INFO:Uploading model into container now
2023-02-02 20:15:24,239:INFO:_master_model_container: 2
2023-02-02 20:15:24,240:INFO:_display_container: 2
2023-02-02 20:15:24,240:INFO:NaiveForecaster(strategy='mean')
2023-02-02 20:15:24,240:INFO:create_model() successfully completed......................................
2023-02-02 20:15:24,449:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:24,449:INFO:Creating metrics dataframe
2023-02-02 20:15:24,462:INFO:Initializing Seasonal Naive Forecaster
2023-02-02 20:15:24,462:INFO:Total runtime is 0.01001049280166626 minutes
2023-02-02 20:15:24,467:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:24,467:INFO:Initializing create_model()
2023-02-02 20:15:24,467:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=snaive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:24,467:INFO:Checking exceptions
2023-02-02 20:15:24,467:INFO:Importing libraries
2023-02-02 20:15:24,467:INFO:Copying training dataset
2023-02-02 20:15:24,472:INFO:Defining folds
2023-02-02 20:15:24,472:INFO:Declaring metric variables
2023-02-02 20:15:24,476:INFO:Importing untrained model
2023-02-02 20:15:24,481:INFO:Seasonal Naive Forecaster Imported successfully
2023-02-02 20:15:24,491:INFO:Starting cross validation
2023-02-02 20:15:24,492:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:24,534:INFO:Calculating mean and std
2023-02-02 20:15:24,535:INFO:Creating metrics dataframe
2023-02-02 20:15:24,539:INFO:Uploading results into container
2023-02-02 20:15:24,539:INFO:Uploading model into container now
2023-02-02 20:15:24,540:INFO:_master_model_container: 3
2023-02-02 20:15:24,540:INFO:_display_container: 2
2023-02-02 20:15:24,540:INFO:NaiveForecaster(sp=7)
2023-02-02 20:15:24,540:INFO:create_model() successfully completed......................................
2023-02-02 20:15:24,745:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:24,745:INFO:Creating metrics dataframe
2023-02-02 20:15:24,760:INFO:Initializing Polynomial Trend Forecaster
2023-02-02 20:15:24,760:INFO:Total runtime is 0.014969309171040853 minutes
2023-02-02 20:15:24,765:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:24,765:INFO:Initializing create_model()
2023-02-02 20:15:24,765:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=polytrend, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:24,765:INFO:Checking exceptions
2023-02-02 20:15:24,765:INFO:Importing libraries
2023-02-02 20:15:24,765:INFO:Copying training dataset
2023-02-02 20:15:24,770:INFO:Defining folds
2023-02-02 20:15:24,770:INFO:Declaring metric variables
2023-02-02 20:15:24,775:INFO:Importing untrained model
2023-02-02 20:15:24,779:INFO:Polynomial Trend Forecaster Imported successfully
2023-02-02 20:15:24,789:INFO:Starting cross validation
2023-02-02 20:15:24,790:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:24,826:INFO:Calculating mean and std
2023-02-02 20:15:24,826:INFO:Creating metrics dataframe
2023-02-02 20:15:24,831:INFO:Uploading results into container
2023-02-02 20:15:24,831:INFO:Uploading model into container now
2023-02-02 20:15:24,832:INFO:_master_model_container: 4
2023-02-02 20:15:24,832:INFO:_display_container: 2
2023-02-02 20:15:24,832:INFO:PolynomialTrendForecaster()
2023-02-02 20:15:24,832:INFO:create_model() successfully completed......................................
2023-02-02 20:15:25,042:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:25,042:INFO:Creating metrics dataframe
2023-02-02 20:15:25,055:INFO:Initializing ARIMA
2023-02-02 20:15:25,055:INFO:Total runtime is 0.019880243142445884 minutes
2023-02-02 20:15:25,059:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:25,059:INFO:Initializing create_model()
2023-02-02 20:15:25,059:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:25,059:INFO:Checking exceptions
2023-02-02 20:15:25,059:INFO:Importing libraries
2023-02-02 20:15:25,060:INFO:Copying training dataset
2023-02-02 20:15:25,065:INFO:Defining folds
2023-02-02 20:15:25,066:INFO:Declaring metric variables
2023-02-02 20:15:25,070:INFO:Importing untrained model
2023-02-02 20:15:25,076:INFO:ARIMA Imported successfully
2023-02-02 20:15:25,085:INFO:Starting cross validation
2023-02-02 20:15:25,087:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:25,222:INFO:Calculating mean and std
2023-02-02 20:15:25,223:INFO:Creating metrics dataframe
2023-02-02 20:15:25,227:INFO:Uploading results into container
2023-02-02 20:15:25,227:INFO:Uploading model into container now
2023-02-02 20:15:25,228:INFO:_master_model_container: 5
2023-02-02 20:15:25,228:INFO:_display_container: 2
2023-02-02 20:15:25,228:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 20:15:25,228:INFO:create_model() successfully completed......................................
2023-02-02 20:15:25,435:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:25,436:INFO:Creating metrics dataframe
2023-02-02 20:15:25,450:INFO:Initializing Auto ARIMA
2023-02-02 20:15:25,450:INFO:Total runtime is 0.02647624810536703 minutes
2023-02-02 20:15:25,454:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:25,455:INFO:Initializing create_model()
2023-02-02 20:15:25,455:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=auto_arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:25,455:INFO:Checking exceptions
2023-02-02 20:15:25,455:INFO:Importing libraries
2023-02-02 20:15:25,455:INFO:Copying training dataset
2023-02-02 20:15:25,461:INFO:Defining folds
2023-02-02 20:15:25,461:INFO:Declaring metric variables
2023-02-02 20:15:25,465:INFO:Importing untrained model
2023-02-02 20:15:25,471:INFO:Auto ARIMA Imported successfully
2023-02-02 20:15:25,481:INFO:Starting cross validation
2023-02-02 20:15:25,482:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:28,832:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\pmdarima\arima\_auto_solvers.py:522: ModelFitWarning: Error fitting  ARIMA(2,0,1)(2,1,0)[7] intercept (if you do not want to see these warnings, run with error_action="ignore").
  warnings.warn(warning_str, ModelFitWarning)

2023-02-02 20:15:30,740:INFO:Calculating mean and std
2023-02-02 20:15:30,741:INFO:Creating metrics dataframe
2023-02-02 20:15:30,746:INFO:Uploading results into container
2023-02-02 20:15:30,746:INFO:Uploading model into container now
2023-02-02 20:15:30,747:INFO:_master_model_container: 6
2023-02-02 20:15:30,747:INFO:_display_container: 2
2023-02-02 20:15:30,748:INFO:AutoARIMA(random_state=8212, sp=7, suppress_warnings=True)
2023-02-02 20:15:30,748:INFO:create_model() successfully completed......................................
2023-02-02 20:15:30,952:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:30,952:INFO:Creating metrics dataframe
2023-02-02 20:15:30,965:INFO:Initializing Exponential Smoothing
2023-02-02 20:15:30,965:INFO:Total runtime is 0.11838403542836508 minutes
2023-02-02 20:15:30,970:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:30,970:INFO:Initializing create_model()
2023-02-02 20:15:30,970:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=exp_smooth, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:30,970:INFO:Checking exceptions
2023-02-02 20:15:30,970:INFO:Importing libraries
2023-02-02 20:15:30,971:INFO:Copying training dataset
2023-02-02 20:15:30,976:INFO:Defining folds
2023-02-02 20:15:30,976:INFO:Declaring metric variables
2023-02-02 20:15:30,981:INFO:Importing untrained model
2023-02-02 20:15:30,986:INFO:Exponential Smoothing Imported successfully
2023-02-02 20:15:30,996:INFO:Starting cross validation
2023-02-02 20:15:30,997:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:31,237:INFO:Calculating mean and std
2023-02-02 20:15:31,239:INFO:Creating metrics dataframe
2023-02-02 20:15:31,243:INFO:Uploading results into container
2023-02-02 20:15:31,243:INFO:Uploading model into container now
2023-02-02 20:15:31,244:INFO:_master_model_container: 7
2023-02-02 20:15:31,244:INFO:_display_container: 2
2023-02-02 20:15:31,244:INFO:ExponentialSmoothing(seasonal='mul', sp=7, trend='add')
2023-02-02 20:15:31,244:INFO:create_model() successfully completed......................................
2023-02-02 20:15:31,464:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:31,464:INFO:Creating metrics dataframe
2023-02-02 20:15:31,479:INFO:Initializing Croston
2023-02-02 20:15:31,480:INFO:Total runtime is 0.1269654870033264 minutes
2023-02-02 20:15:31,484:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:31,484:INFO:Initializing create_model()
2023-02-02 20:15:31,484:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=croston, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:31,484:INFO:Checking exceptions
2023-02-02 20:15:31,484:INFO:Importing libraries
2023-02-02 20:15:31,484:INFO:Copying training dataset
2023-02-02 20:15:31,490:INFO:Defining folds
2023-02-02 20:15:31,490:INFO:Declaring metric variables
2023-02-02 20:15:31,495:INFO:Importing untrained model
2023-02-02 20:15:31,499:INFO:Croston Imported successfully
2023-02-02 20:15:31,508:INFO:Starting cross validation
2023-02-02 20:15:31,510:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:31,543:INFO:Calculating mean and std
2023-02-02 20:15:31,543:INFO:Creating metrics dataframe
2023-02-02 20:15:31,547:INFO:Uploading results into container
2023-02-02 20:15:31,547:INFO:Uploading model into container now
2023-02-02 20:15:31,547:INFO:_master_model_container: 8
2023-02-02 20:15:31,548:INFO:_display_container: 2
2023-02-02 20:15:31,548:INFO:Croston()
2023-02-02 20:15:31,548:INFO:create_model() successfully completed......................................
2023-02-02 20:15:31,750:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:31,750:INFO:Creating metrics dataframe
2023-02-02 20:15:31,764:INFO:Initializing ETS
2023-02-02 20:15:31,765:INFO:Total runtime is 0.13171351750691732 minutes
2023-02-02 20:15:31,769:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:31,769:INFO:Initializing create_model()
2023-02-02 20:15:31,769:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=ets, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:31,769:INFO:Checking exceptions
2023-02-02 20:15:31,769:INFO:Importing libraries
2023-02-02 20:15:31,769:INFO:Copying training dataset
2023-02-02 20:15:31,775:INFO:Defining folds
2023-02-02 20:15:31,776:INFO:Declaring metric variables
2023-02-02 20:15:31,780:INFO:Importing untrained model
2023-02-02 20:15:31,786:INFO:ETS Imported successfully
2023-02-02 20:15:31,795:INFO:Starting cross validation
2023-02-02 20:15:31,796:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:31,934:INFO:Calculating mean and std
2023-02-02 20:15:31,935:INFO:Creating metrics dataframe
2023-02-02 20:15:31,939:INFO:Uploading results into container
2023-02-02 20:15:31,939:INFO:Uploading model into container now
2023-02-02 20:15:31,940:INFO:_master_model_container: 9
2023-02-02 20:15:31,940:INFO:_display_container: 2
2023-02-02 20:15:31,940:INFO:AutoETS(seasonal='mul', sp=7, trend='add')
2023-02-02 20:15:31,940:INFO:create_model() successfully completed......................................
2023-02-02 20:15:32,151:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:32,152:INFO:Creating metrics dataframe
2023-02-02 20:15:32,169:INFO:Initializing Theta Forecaster
2023-02-02 20:15:32,169:INFO:Total runtime is 0.13845936059951783 minutes
2023-02-02 20:15:32,175:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:32,175:INFO:Initializing create_model()
2023-02-02 20:15:32,176:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=theta, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:32,176:INFO:Checking exceptions
2023-02-02 20:15:32,176:INFO:Importing libraries
2023-02-02 20:15:32,176:INFO:Copying training dataset
2023-02-02 20:15:32,182:INFO:Defining folds
2023-02-02 20:15:32,183:INFO:Declaring metric variables
2023-02-02 20:15:32,187:INFO:Importing untrained model
2023-02-02 20:15:32,192:INFO:Theta Forecaster Imported successfully
2023-02-02 20:15:32,203:INFO:Starting cross validation
2023-02-02 20:15:32,204:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:32,269:INFO:Calculating mean and std
2023-02-02 20:15:32,270:INFO:Creating metrics dataframe
2023-02-02 20:15:32,274:INFO:Uploading results into container
2023-02-02 20:15:32,274:INFO:Uploading model into container now
2023-02-02 20:15:32,274:INFO:_master_model_container: 10
2023-02-02 20:15:32,275:INFO:_display_container: 2
2023-02-02 20:15:32,275:INFO:ThetaForecaster(sp=7)
2023-02-02 20:15:32,275:INFO:create_model() successfully completed......................................
2023-02-02 20:15:32,482:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:32,482:INFO:Creating metrics dataframe
2023-02-02 20:15:32,498:INFO:Initializing Linear w/ Cond. Deseasonalize & Detrending
2023-02-02 20:15:32,498:INFO:Total runtime is 0.14393931229909263 minutes
2023-02-02 20:15:32,502:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:32,502:INFO:Initializing create_model()
2023-02-02 20:15:32,503:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=lr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:32,503:INFO:Checking exceptions
2023-02-02 20:15:32,503:INFO:Importing libraries
2023-02-02 20:15:32,503:INFO:Copying training dataset
2023-02-02 20:15:32,509:INFO:Defining folds
2023-02-02 20:15:32,509:INFO:Declaring metric variables
2023-02-02 20:15:32,514:INFO:Importing untrained model
2023-02-02 20:15:32,523:INFO:Linear w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:15:32,537:INFO:Starting cross validation
2023-02-02 20:15:32,538:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:32,770:INFO:Calculating mean and std
2023-02-02 20:15:32,771:INFO:Creating metrics dataframe
2023-02-02 20:15:32,775:INFO:Uploading results into container
2023-02-02 20:15:32,775:INFO:Uploading model into container now
2023-02-02 20:15:32,776:INFO:_master_model_container: 11
2023-02-02 20:15:32,776:INFO:_display_container: 2
2023-02-02 20:15:32,778:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LinearRegression(n_jobs=-1), sp=7,
                    window_length=7)
2023-02-02 20:15:32,778:INFO:create_model() successfully completed......................................
2023-02-02 20:15:32,983:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:32,983:INFO:Creating metrics dataframe
2023-02-02 20:15:33,000:INFO:Initializing Elastic Net w/ Cond. Deseasonalize & Detrending
2023-02-02 20:15:33,001:INFO:Total runtime is 0.15231736501057944 minutes
2023-02-02 20:15:33,005:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:33,005:INFO:Initializing create_model()
2023-02-02 20:15:33,005:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=en_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:33,005:INFO:Checking exceptions
2023-02-02 20:15:33,005:INFO:Importing libraries
2023-02-02 20:15:33,006:INFO:Copying training dataset
2023-02-02 20:15:33,012:INFO:Defining folds
2023-02-02 20:15:33,013:INFO:Declaring metric variables
2023-02-02 20:15:33,017:INFO:Importing untrained model
2023-02-02 20:15:33,022:INFO:Elastic Net w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:15:33,031:INFO:Starting cross validation
2023-02-02 20:15:33,033:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:33,273:INFO:Calculating mean and std
2023-02-02 20:15:33,275:INFO:Creating metrics dataframe
2023-02-02 20:15:33,279:INFO:Uploading results into container
2023-02-02 20:15:33,279:INFO:Uploading model into container now
2023-02-02 20:15:33,280:INFO:_master_model_container: 12
2023-02-02 20:15:33,280:INFO:_display_container: 2
2023-02-02 20:15:33,283:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=ElasticNet(random_state=8212), sp=7,
                    window_length=7)
2023-02-02 20:15:33,283:INFO:create_model() successfully completed......................................
2023-02-02 20:15:33,488:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:33,488:INFO:Creating metrics dataframe
2023-02-02 20:15:33,502:INFO:Initializing Ridge w/ Cond. Deseasonalize & Detrending
2023-02-02 20:15:33,502:INFO:Total runtime is 0.1606778581937154 minutes
2023-02-02 20:15:33,506:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:33,506:INFO:Initializing create_model()
2023-02-02 20:15:33,506:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=ridge_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:33,506:INFO:Checking exceptions
2023-02-02 20:15:33,507:INFO:Importing libraries
2023-02-02 20:15:33,507:INFO:Copying training dataset
2023-02-02 20:15:33,513:INFO:Defining folds
2023-02-02 20:15:33,513:INFO:Declaring metric variables
2023-02-02 20:15:33,517:INFO:Importing untrained model
2023-02-02 20:15:33,523:INFO:Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:15:33,533:INFO:Starting cross validation
2023-02-02 20:15:33,535:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:33,758:INFO:Calculating mean and std
2023-02-02 20:15:33,759:INFO:Creating metrics dataframe
2023-02-02 20:15:33,764:INFO:Uploading results into container
2023-02-02 20:15:33,764:INFO:Uploading model into container now
2023-02-02 20:15:33,764:INFO:_master_model_container: 13
2023-02-02 20:15:33,764:INFO:_display_container: 2
2023-02-02 20:15:33,766:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Ridge(random_state=8212), sp=7, window_length=7)
2023-02-02 20:15:33,766:INFO:create_model() successfully completed......................................
2023-02-02 20:15:33,966:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:33,966:INFO:Creating metrics dataframe
2023-02-02 20:15:33,983:INFO:Initializing Lasso w/ Cond. Deseasonalize & Detrending
2023-02-02 20:15:33,984:INFO:Total runtime is 0.1687030514081319 minutes
2023-02-02 20:15:33,988:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:33,989:INFO:Initializing create_model()
2023-02-02 20:15:33,989:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=lasso_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:33,989:INFO:Checking exceptions
2023-02-02 20:15:33,989:INFO:Importing libraries
2023-02-02 20:15:33,989:INFO:Copying training dataset
2023-02-02 20:15:33,995:INFO:Defining folds
2023-02-02 20:15:33,995:INFO:Declaring metric variables
2023-02-02 20:15:34,000:INFO:Importing untrained model
2023-02-02 20:15:34,005:INFO:Lasso w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:15:34,015:INFO:Starting cross validation
2023-02-02 20:15:34,016:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:34,261:INFO:Calculating mean and std
2023-02-02 20:15:34,262:INFO:Creating metrics dataframe
2023-02-02 20:15:34,267:INFO:Uploading results into container
2023-02-02 20:15:34,268:INFO:Uploading model into container now
2023-02-02 20:15:34,268:INFO:_master_model_container: 14
2023-02-02 20:15:34,268:INFO:_display_container: 2
2023-02-02 20:15:34,271:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Lasso(random_state=8212), sp=7, window_length=7)
2023-02-02 20:15:34,271:INFO:create_model() successfully completed......................................
2023-02-02 20:15:34,479:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:34,480:INFO:Creating metrics dataframe
2023-02-02 20:15:34,495:INFO:Initializing Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-02-02 20:15:34,495:INFO:Total runtime is 0.1772250731786092 minutes
2023-02-02 20:15:34,499:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:34,500:INFO:Initializing create_model()
2023-02-02 20:15:34,500:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=lar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:34,500:INFO:Checking exceptions
2023-02-02 20:15:34,500:INFO:Importing libraries
2023-02-02 20:15:34,500:INFO:Copying training dataset
2023-02-02 20:15:34,505:INFO:Defining folds
2023-02-02 20:15:34,506:INFO:Declaring metric variables
2023-02-02 20:15:34,511:INFO:Importing untrained model
2023-02-02 20:15:34,516:INFO:Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:15:34,525:INFO:Starting cross validation
2023-02-02 20:15:34,526:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:34,606:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 20:15:34,749:INFO:Calculating mean and std
2023-02-02 20:15:34,751:INFO:Creating metrics dataframe
2023-02-02 20:15:34,755:INFO:Uploading results into container
2023-02-02 20:15:34,755:INFO:Uploading model into container now
2023-02-02 20:15:34,756:INFO:_master_model_container: 15
2023-02-02 20:15:34,756:INFO:_display_container: 2
2023-02-02 20:15:34,758:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=Lars(random_state=8212), sp=7, window_length=7)
2023-02-02 20:15:34,758:INFO:create_model() successfully completed......................................
2023-02-02 20:15:34,959:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:34,960:INFO:Creating metrics dataframe
2023-02-02 20:15:34,978:INFO:Initializing Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2023-02-02 20:15:34,978:INFO:Total runtime is 0.1852705717086792 minutes
2023-02-02 20:15:34,982:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:34,982:INFO:Initializing create_model()
2023-02-02 20:15:34,982:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=llar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:34,983:INFO:Checking exceptions
2023-02-02 20:15:34,983:INFO:Importing libraries
2023-02-02 20:15:34,983:INFO:Copying training dataset
2023-02-02 20:15:34,988:INFO:Defining folds
2023-02-02 20:15:34,988:INFO:Declaring metric variables
2023-02-02 20:15:34,993:INFO:Importing untrained model
2023-02-02 20:15:34,999:INFO:Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:15:35,008:INFO:Starting cross validation
2023-02-02 20:15:35,010:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:35,092:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2023-02-02 20:15:35,246:INFO:Calculating mean and std
2023-02-02 20:15:35,247:INFO:Creating metrics dataframe
2023-02-02 20:15:35,251:INFO:Uploading results into container
2023-02-02 20:15:35,252:INFO:Uploading model into container now
2023-02-02 20:15:35,252:INFO:_master_model_container: 16
2023-02-02 20:15:35,252:INFO:_display_container: 2
2023-02-02 20:15:35,255:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LassoLars(random_state=8212), sp=7,
                    window_length=7)
2023-02-02 20:15:35,255:INFO:create_model() successfully completed......................................
2023-02-02 20:15:35,459:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:35,459:INFO:Creating metrics dataframe
2023-02-02 20:15:35,475:INFO:Initializing Bayesian Ridge w/ Cond. Deseasonalize & Detrending
2023-02-02 20:15:35,475:INFO:Total runtime is 0.19354883829752603 minutes
2023-02-02 20:15:35,480:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:35,480:INFO:Initializing create_model()
2023-02-02 20:15:35,480:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=br_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:35,480:INFO:Checking exceptions
2023-02-02 20:15:35,480:INFO:Importing libraries
2023-02-02 20:15:35,480:INFO:Copying training dataset
2023-02-02 20:15:35,487:INFO:Defining folds
2023-02-02 20:15:35,487:INFO:Declaring metric variables
2023-02-02 20:15:35,492:INFO:Importing untrained model
2023-02-02 20:15:35,498:INFO:Bayesian Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:15:35,507:INFO:Starting cross validation
2023-02-02 20:15:35,509:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:35,747:INFO:Calculating mean and std
2023-02-02 20:15:35,748:INFO:Creating metrics dataframe
2023-02-02 20:15:35,753:INFO:Uploading results into container
2023-02-02 20:15:35,753:INFO:Uploading model into container now
2023-02-02 20:15:35,754:INFO:_master_model_container: 17
2023-02-02 20:15:35,754:INFO:_display_container: 2
2023-02-02 20:15:35,757:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=BayesianRidge(), sp=7, window_length=7)
2023-02-02 20:15:35,757:INFO:create_model() successfully completed......................................
2023-02-02 20:15:35,966:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:35,966:INFO:Creating metrics dataframe
2023-02-02 20:15:35,984:INFO:Initializing Huber w/ Cond. Deseasonalize & Detrending
2023-02-02 20:15:35,985:INFO:Total runtime is 0.20204773743947346 minutes
2023-02-02 20:15:35,990:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:35,990:INFO:Initializing create_model()
2023-02-02 20:15:35,990:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=huber_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:35,990:INFO:Checking exceptions
2023-02-02 20:15:35,990:INFO:Importing libraries
2023-02-02 20:15:35,991:INFO:Copying training dataset
2023-02-02 20:15:35,996:INFO:Defining folds
2023-02-02 20:15:35,996:INFO:Declaring metric variables
2023-02-02 20:15:36,000:INFO:Importing untrained model
2023-02-02 20:15:36,006:INFO:Huber w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:15:36,014:INFO:Starting cross validation
2023-02-02 20:15:36,015:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:36,128:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_huber.py:335: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-02-02 20:15:36,278:INFO:Calculating mean and std
2023-02-02 20:15:36,280:INFO:Creating metrics dataframe
2023-02-02 20:15:36,284:INFO:Uploading results into container
2023-02-02 20:15:36,284:INFO:Uploading model into container now
2023-02-02 20:15:36,284:INFO:_master_model_container: 18
2023-02-02 20:15:36,284:INFO:_display_container: 2
2023-02-02 20:15:36,286:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=HuberRegressor(), sp=7, window_length=7)
2023-02-02 20:15:36,287:INFO:create_model() successfully completed......................................
2023-02-02 20:15:36,486:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:36,486:INFO:Creating metrics dataframe
2023-02-02 20:15:36,505:INFO:Initializing Passive Aggressive w/ Cond. Deseasonalize & Detrending
2023-02-02 20:15:36,506:INFO:Total runtime is 0.2107423424720764 minutes
2023-02-02 20:15:36,510:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:36,510:INFO:Initializing create_model()
2023-02-02 20:15:36,510:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=par_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:36,511:INFO:Checking exceptions
2023-02-02 20:15:36,511:INFO:Importing libraries
2023-02-02 20:15:36,511:INFO:Copying training dataset
2023-02-02 20:15:36,516:INFO:Defining folds
2023-02-02 20:15:36,516:INFO:Declaring metric variables
2023-02-02 20:15:36,520:INFO:Importing untrained model
2023-02-02 20:15:36,525:INFO:Passive Aggressive w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:15:36,534:INFO:Starting cross validation
2023-02-02 20:15:36,535:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:36,756:INFO:Calculating mean and std
2023-02-02 20:15:36,757:INFO:Creating metrics dataframe
2023-02-02 20:15:36,761:INFO:Uploading results into container
2023-02-02 20:15:36,761:INFO:Uploading model into container now
2023-02-02 20:15:36,761:INFO:_master_model_container: 19
2023-02-02 20:15:36,761:INFO:_display_container: 2
2023-02-02 20:15:36,764:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=PassiveAggressiveRegressor(random_state=8212),
                    sp=7, window_length=7)
2023-02-02 20:15:36,764:INFO:create_model() successfully completed......................................
2023-02-02 20:15:36,964:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:36,964:INFO:Creating metrics dataframe
2023-02-02 20:15:36,984:INFO:Initializing Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending
2023-02-02 20:15:36,984:INFO:Total runtime is 0.2187041163444519 minutes
2023-02-02 20:15:36,988:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:36,988:INFO:Initializing create_model()
2023-02-02 20:15:36,989:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=omp_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:36,989:INFO:Checking exceptions
2023-02-02 20:15:36,989:INFO:Importing libraries
2023-02-02 20:15:36,989:INFO:Copying training dataset
2023-02-02 20:15:36,997:INFO:Defining folds
2023-02-02 20:15:36,997:INFO:Declaring metric variables
2023-02-02 20:15:37,002:INFO:Importing untrained model
2023-02-02 20:15:37,007:INFO:Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:15:37,025:INFO:Starting cross validation
2023-02-02 20:15:37,026:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:37,112:WARNING:C:\Users\Matheus Morais\anaconda3\envs\Projeto-Previsao-de-Demanda\lib\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2023-02-02 20:15:37,263:INFO:Calculating mean and std
2023-02-02 20:15:37,265:INFO:Creating metrics dataframe
2023-02-02 20:15:37,269:INFO:Uploading results into container
2023-02-02 20:15:37,269:INFO:Uploading model into container now
2023-02-02 20:15:37,269:INFO:_master_model_container: 20
2023-02-02 20:15:37,269:INFO:_display_container: 2
2023-02-02 20:15:37,271:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=OrthogonalMatchingPursuit(), sp=7,
                    window_length=7)
2023-02-02 20:15:37,271:INFO:create_model() successfully completed......................................
2023-02-02 20:15:37,477:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:37,477:INFO:Creating metrics dataframe
2023-02-02 20:15:37,497:INFO:Initializing K Neighbors w/ Cond. Deseasonalize & Detrending
2023-02-02 20:15:37,497:INFO:Total runtime is 0.2272508939107259 minutes
2023-02-02 20:15:37,501:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:37,502:INFO:Initializing create_model()
2023-02-02 20:15:37,502:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=knn_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:37,502:INFO:Checking exceptions
2023-02-02 20:15:37,502:INFO:Importing libraries
2023-02-02 20:15:37,502:INFO:Copying training dataset
2023-02-02 20:15:37,508:INFO:Defining folds
2023-02-02 20:15:37,508:INFO:Declaring metric variables
2023-02-02 20:15:37,513:INFO:Importing untrained model
2023-02-02 20:15:37,519:INFO:K Neighbors w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:15:37,528:INFO:Starting cross validation
2023-02-02 20:15:37,530:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:37,818:INFO:Calculating mean and std
2023-02-02 20:15:37,819:INFO:Creating metrics dataframe
2023-02-02 20:15:37,823:INFO:Uploading results into container
2023-02-02 20:15:37,823:INFO:Uploading model into container now
2023-02-02 20:15:37,824:INFO:_master_model_container: 21
2023-02-02 20:15:37,824:INFO:_display_container: 2
2023-02-02 20:15:37,826:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=KNeighborsRegressor(n_jobs=-1), sp=7,
                    window_length=7)
2023-02-02 20:15:37,827:INFO:create_model() successfully completed......................................
2023-02-02 20:15:38,034:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:38,034:INFO:Creating metrics dataframe
2023-02-02 20:15:38,054:INFO:Initializing Decision Tree w/ Cond. Deseasonalize & Detrending
2023-02-02 20:15:38,054:INFO:Total runtime is 0.23654457330703735 minutes
2023-02-02 20:15:38,059:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:38,059:INFO:Initializing create_model()
2023-02-02 20:15:38,059:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=dt_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:38,059:INFO:Checking exceptions
2023-02-02 20:15:38,059:INFO:Importing libraries
2023-02-02 20:15:38,060:INFO:Copying training dataset
2023-02-02 20:15:38,065:INFO:Defining folds
2023-02-02 20:15:38,065:INFO:Declaring metric variables
2023-02-02 20:15:38,070:INFO:Importing untrained model
2023-02-02 20:15:38,075:INFO:Decision Tree w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:15:38,084:INFO:Starting cross validation
2023-02-02 20:15:38,085:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:38,326:INFO:Calculating mean and std
2023-02-02 20:15:38,327:INFO:Creating metrics dataframe
2023-02-02 20:15:38,333:INFO:Uploading results into container
2023-02-02 20:15:38,333:INFO:Uploading model into container now
2023-02-02 20:15:38,334:INFO:_master_model_container: 22
2023-02-02 20:15:38,334:INFO:_display_container: 2
2023-02-02 20:15:38,336:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=DecisionTreeRegressor(random_state=8212), sp=7,
                    window_length=7)
2023-02-02 20:15:38,336:INFO:create_model() successfully completed......................................
2023-02-02 20:15:38,553:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:38,553:INFO:Creating metrics dataframe
2023-02-02 20:15:38,574:INFO:Initializing Random Forest w/ Cond. Deseasonalize & Detrending
2023-02-02 20:15:38,574:INFO:Total runtime is 0.2452058990796407 minutes
2023-02-02 20:15:38,578:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:38,579:INFO:Initializing create_model()
2023-02-02 20:15:38,579:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=rf_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:38,579:INFO:Checking exceptions
2023-02-02 20:15:38,579:INFO:Importing libraries
2023-02-02 20:15:38,580:INFO:Copying training dataset
2023-02-02 20:15:38,585:INFO:Defining folds
2023-02-02 20:15:38,586:INFO:Declaring metric variables
2023-02-02 20:15:38,590:INFO:Importing untrained model
2023-02-02 20:15:38,595:INFO:Random Forest w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:15:38,605:INFO:Starting cross validation
2023-02-02 20:15:38,606:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:39,072:INFO:Calculating mean and std
2023-02-02 20:15:39,073:INFO:Creating metrics dataframe
2023-02-02 20:15:39,077:INFO:Uploading results into container
2023-02-02 20:15:39,078:INFO:Uploading model into container now
2023-02-02 20:15:39,078:INFO:_master_model_container: 23
2023-02-02 20:15:39,078:INFO:_display_container: 2
2023-02-02 20:15:39,081:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=RandomForestRegressor(n_jobs=-1,
                                                    random_state=8212),
                    sp=7, window_length=7)
2023-02-02 20:15:39,082:INFO:create_model() successfully completed......................................
2023-02-02 20:15:39,287:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:39,287:INFO:Creating metrics dataframe
2023-02-02 20:15:39,307:INFO:Initializing Extra Trees w/ Cond. Deseasonalize & Detrending
2023-02-02 20:15:39,307:INFO:Total runtime is 0.25741490523020427 minutes
2023-02-02 20:15:39,312:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:39,312:INFO:Initializing create_model()
2023-02-02 20:15:39,312:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=et_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:39,312:INFO:Checking exceptions
2023-02-02 20:15:39,313:INFO:Importing libraries
2023-02-02 20:15:39,313:INFO:Copying training dataset
2023-02-02 20:15:39,318:INFO:Defining folds
2023-02-02 20:15:39,319:INFO:Declaring metric variables
2023-02-02 20:15:39,323:INFO:Importing untrained model
2023-02-02 20:15:39,328:INFO:Extra Trees w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:15:39,338:INFO:Starting cross validation
2023-02-02 20:15:39,340:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:39,768:INFO:Calculating mean and std
2023-02-02 20:15:39,770:INFO:Creating metrics dataframe
2023-02-02 20:15:39,774:INFO:Uploading results into container
2023-02-02 20:15:39,774:INFO:Uploading model into container now
2023-02-02 20:15:39,775:INFO:_master_model_container: 24
2023-02-02 20:15:39,775:INFO:_display_container: 2
2023-02-02 20:15:39,777:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=ExtraTreesRegressor(n_jobs=-1, random_state=8212),
                    sp=7, window_length=7)
2023-02-02 20:15:39,777:INFO:create_model() successfully completed......................................
2023-02-02 20:15:39,977:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:39,977:INFO:Creating metrics dataframe
2023-02-02 20:15:39,998:INFO:Initializing Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-02-02 20:15:39,999:INFO:Total runtime is 0.26896157264709475 minutes
2023-02-02 20:15:40,003:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:40,003:INFO:Initializing create_model()
2023-02-02 20:15:40,003:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=gbr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:40,004:INFO:Checking exceptions
2023-02-02 20:15:40,004:INFO:Importing libraries
2023-02-02 20:15:40,004:INFO:Copying training dataset
2023-02-02 20:15:40,009:INFO:Defining folds
2023-02-02 20:15:40,009:INFO:Declaring metric variables
2023-02-02 20:15:40,014:INFO:Importing untrained model
2023-02-02 20:15:40,021:INFO:Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:15:40,030:INFO:Starting cross validation
2023-02-02 20:15:40,031:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:40,310:INFO:Calculating mean and std
2023-02-02 20:15:40,311:INFO:Creating metrics dataframe
2023-02-02 20:15:40,316:INFO:Uploading results into container
2023-02-02 20:15:40,316:INFO:Uploading model into container now
2023-02-02 20:15:40,317:INFO:_master_model_container: 25
2023-02-02 20:15:40,317:INFO:_display_container: 2
2023-02-02 20:15:40,320:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=GradientBoostingRegressor(random_state=8212),
                    sp=7, window_length=7)
2023-02-02 20:15:40,321:INFO:create_model() successfully completed......................................
2023-02-02 20:15:40,535:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:40,535:INFO:Creating metrics dataframe
2023-02-02 20:15:40,556:INFO:Initializing AdaBoost w/ Cond. Deseasonalize & Detrending
2023-02-02 20:15:40,556:INFO:Total runtime is 0.2782416899998983 minutes
2023-02-02 20:15:40,560:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:40,560:INFO:Initializing create_model()
2023-02-02 20:15:40,560:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=ada_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:40,560:INFO:Checking exceptions
2023-02-02 20:15:40,561:INFO:Importing libraries
2023-02-02 20:15:40,561:INFO:Copying training dataset
2023-02-02 20:15:40,566:INFO:Defining folds
2023-02-02 20:15:40,566:INFO:Declaring metric variables
2023-02-02 20:15:40,571:INFO:Importing untrained model
2023-02-02 20:15:40,576:INFO:AdaBoost w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:15:40,590:INFO:Starting cross validation
2023-02-02 20:15:40,595:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:40,909:INFO:Calculating mean and std
2023-02-02 20:15:40,910:INFO:Creating metrics dataframe
2023-02-02 20:15:40,915:INFO:Uploading results into container
2023-02-02 20:15:40,915:INFO:Uploading model into container now
2023-02-02 20:15:40,915:INFO:_master_model_container: 26
2023-02-02 20:15:40,916:INFO:_display_container: 2
2023-02-02 20:15:40,918:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=AdaBoostRegressor(random_state=8212), sp=7,
                    window_length=7)
2023-02-02 20:15:40,918:INFO:create_model() successfully completed......................................
2023-02-02 20:15:41,123:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:41,123:INFO:Creating metrics dataframe
2023-02-02 20:15:41,144:INFO:Initializing Light Gradient Boosting w/ Cond. Deseasonalize & Detrending
2023-02-02 20:15:41,144:INFO:Total runtime is 0.28803258736928306 minutes
2023-02-02 20:15:41,149:INFO:SubProcess create_model() called ==================================
2023-02-02 20:15:41,149:INFO:Initializing create_model()
2023-02-02 20:15:41,149:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=lightgbm_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C12D85DA00>, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:41,149:INFO:Checking exceptions
2023-02-02 20:15:41,149:INFO:Importing libraries
2023-02-02 20:15:41,149:INFO:Copying training dataset
2023-02-02 20:15:41,155:INFO:Defining folds
2023-02-02 20:15:41,155:INFO:Declaring metric variables
2023-02-02 20:15:41,160:INFO:Importing untrained model
2023-02-02 20:15:41,165:INFO:Light Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2023-02-02 20:15:41,174:INFO:Starting cross validation
2023-02-02 20:15:41,175:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:41,424:INFO:Calculating mean and std
2023-02-02 20:15:41,426:INFO:Creating metrics dataframe
2023-02-02 20:15:41,430:INFO:Uploading results into container
2023-02-02 20:15:41,430:INFO:Uploading model into container now
2023-02-02 20:15:41,431:INFO:_master_model_container: 27
2023-02-02 20:15:41,431:INFO:_display_container: 2
2023-02-02 20:15:41,433:INFO:BaseCdsDtForecaster(fe_target_rr=[WindowSummarizer(lag_feature={'lag': [7, 6, 5,
                                                                        4, 3, 2,
                                                                        1]},
                                                   n_jobs=1)],
                    regressor=LGBMRegressor(random_state=8212), sp=7,
                    window_length=7)
2023-02-02 20:15:41,433:INFO:create_model() successfully completed......................................
2023-02-02 20:15:41,641:INFO:SubProcess create_model() end ==================================
2023-02-02 20:15:41,642:INFO:Creating metrics dataframe
2023-02-02 20:15:41,676:INFO:Initializing create_model()
2023-02-02 20:15:41,677:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:41,677:INFO:Checking exceptions
2023-02-02 20:15:41,679:INFO:Importing libraries
2023-02-02 20:15:41,679:INFO:Copying training dataset
2023-02-02 20:15:41,683:INFO:Defining folds
2023-02-02 20:15:41,683:INFO:Declaring metric variables
2023-02-02 20:15:41,683:INFO:Importing untrained model
2023-02-02 20:15:41,683:INFO:Declaring custom model
2023-02-02 20:15:41,685:INFO:ARIMA Imported successfully
2023-02-02 20:15:41,685:INFO:Cross validation set to False
2023-02-02 20:15:41,685:INFO:Fitting Model
2023-02-02 20:15:41,748:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 20:15:41,748:INFO:create_model() successfully completed......................................
2023-02-02 20:15:42,006:INFO:_master_model_container: 27
2023-02-02 20:15:42,006:INFO:_display_container: 2
2023-02-02 20:15:42,007:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 20:15:42,007:INFO:compare_models() successfully completed......................................
2023-02-02 20:15:42,023:INFO:Initializing create_model()
2023-02-02 20:15:42,023:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-02-02 20:15:42,023:INFO:Checking exceptions
2023-02-02 20:15:42,046:INFO:Importing libraries
2023-02-02 20:15:42,046:INFO:Copying training dataset
2023-02-02 20:15:42,051:INFO:Defining folds
2023-02-02 20:15:42,051:INFO:Declaring metric variables
2023-02-02 20:15:42,057:INFO:Importing untrained model
2023-02-02 20:15:42,065:INFO:ARIMA Imported successfully
2023-02-02 20:15:42,075:INFO:Starting cross validation
2023-02-02 20:15:42,077:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5], dtype='int64', is_relative=True),
                        initial_window=36, step_length=5), n_jobs=-1
2023-02-02 20:15:42,205:INFO:Calculating mean and std
2023-02-02 20:15:42,205:INFO:Creating metrics dataframe
2023-02-02 20:15:42,213:INFO:Finalizing model
2023-02-02 20:15:42,277:INFO:Uploading results into container
2023-02-02 20:15:42,277:INFO:Uploading model into container now
2023-02-02 20:15:42,286:INFO:_master_model_container: 28
2023-02-02 20:15:42,286:INFO:_display_container: 3
2023-02-02 20:15:42,287:INFO:ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 20:15:42,287:INFO:create_model() successfully completed......................................
2023-02-02 20:15:42,623:INFO:Visual Rendered Successfully
2023-02-02 20:15:42,647:INFO:Initializing finalize_model()
2023-02-02 20:15:42,647:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-02-02 20:15:42,648:INFO:Finalizing ARIMA(seasonal_order=(0, 1, 0, 7))
2023-02-02 20:15:42,653:INFO:Initializing create_model()
2023-02-02 20:15:42,653:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x000001C12D6D59D0>, estimator=ARIMA(seasonal_order=(0, 1, 0, 7)), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-02-02 20:15:42,653:INFO:Checking exceptions
2023-02-02 20:15:42,655:INFO:Importing libraries
2023-02-02 20:15:42,655:INFO:Copying training dataset
2023-02-02 20:15:42,658:INFO:Defining folds
2023-02-02 20:15:42,658:INFO:Declaring metric variables
2023-02-02 20:15:42,659:INFO:Importing untrained model
2023-02-02 20:15:42,659:INFO:Declaring custom model
2023-02-02 20:15:42,661:INFO:ARIMA Imported successfully
2023-02-02 20:15:42,661:INFO:Cross validation set to False
2023-02-02 20:15:42,661:INFO:Fitting Model
2023-02-02 20:15:42,749:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:15:42,749:INFO:create_model() successfully completed......................................
2023-02-02 20:15:42,976:INFO:_master_model_container: 28
2023-02-02 20:15:42,976:INFO:_display_container: 3
2023-02-02 20:15:42,983:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                ARIMA(seasonal_order=(0,
                                                                                      1,
                                                                                      0,
                                                                                      7)))]))])
2023-02-02 20:15:42,983:INFO:finalize_model() successfully completed......................................
2023-02-02 20:15:43,286:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:15:43,635:INFO:Visual Rendered Successfully
2023-02-02 20:15:43,721:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:21:53,111:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:21:53,422:INFO:Visual Rendered Successfully
2023-02-02 20:25:03,195:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2023-02-02 20:25:03,480:INFO:Visual Rendered Successfully
